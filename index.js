(()=>{"use strict";var e={276:function(e,a,i){var o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(a,"__esModule",{value:!0});const t=o(i(261));class n extends HTMLElement{constructor(){super(),this.concordaComFaltaDePrivacidade=!1,this.assunto=n.assuntoDeEmailInicial,this.conteudo="",this.emailLink=n.linkDeEmailInicial,this.inicializaEscutaCheckboxDePrivacidade=()=>{this.parentElement.querySelector("input#ciencia-privacidade").onclick=()=>{this.concordaComFaltaDePrivacidade=!this.concordaComFaltaDePrivacidade}},this.inicializaEscutaDeEnvioDeEmail=()=>{this.querySelector("button#envio").onclick=()=>{this.concordaComFaltaDePrivacidade&&this.topoFormulario.checkValidity()&&(this.montaEmailLink(),this.copiaConteudoEmailParaAreaDeTransferencia(),this.abreEmail())}},this.abreEmail=()=>{const e=this.querySelector("a#link-envia-email");e.href=this.emailLink,e.click()},this.montaEmailLink=()=>{this.assunto=n.assuntoDeEmailInicial,this.conteudo="",this.emailLink=n.linkDeEmailInicial,this.adicionaPrimeiroNome(),this.adicionaUltimoNome(),this.adicionaPais(),this.adicionaEstado(),this.adicionaCidade(),this.adicionaEmail(),this.adicionaTelefone(),this.adicionaNascimento(),this.adicionaNivel(),this.adicionaFoto(),this.adicionaPerfisOnline(),this.adicionaRedesSociais(),this.adicionaMsgAoModerador(),this.adicionaMsgDeAjudaAoModerador(),this.emailLink+=this.conteudo,this.emailLink+=this.assunto},this.adicionaParagrafoHTML=e=>"<p>"+e+"</p>",this.adicionaPrimeiroNome=()=>{const e=this.topoFormulario.querySelector("input#primeiro-nome");this.conteudo+=this.adicionaParagrafoHTML(`Primeiro Nome: ${e.value}`),this.assunto+=e.value},this.adicionaUltimoNome=()=>{const e=this.topoFormulario.querySelector("input#ultimo-nome");this.conteudo+=this.adicionaParagrafoHTML(`Último Nome: ${e.value}`),this.assunto+=" "+e.value},this.adicionaPais=()=>{const e=this.topoFormulario.querySelector("input#pais");this.conteudo+=this.adicionaParagrafoHTML(`País: ${e.value}`)},this.adicionaEstado=()=>{const e=this.topoFormulario.querySelector("input#estado");this.conteudo+=this.adicionaParagrafoHTML(`Estado: ${e.value}`)},this.adicionaCidade=()=>{const e=this.topoFormulario.querySelector("input#cidade");this.conteudo+=this.adicionaParagrafoHTML(`Cidade: ${e.value}`)},this.adicionaEmail=()=>{const e=this.topoFormulario.querySelector("input#email");this.conteudo+=this.adicionaParagrafoHTML(`Email: ${e.value}`)},this.adicionaTelefone=()=>{const e=this.topoFormulario.querySelector("input#tel");this.conteudo+=this.adicionaParagrafoHTML(`Telefone: ${e.value}`)},this.adicionaNascimento=()=>{const e=this.topoFormulario.querySelector("input#nascimento");this.conteudo+=this.adicionaParagrafoHTML(`Data de Nascimento: ${t.default.formataISO8601ParaPtBR(e.value)}`)},this.adicionaNivel=()=>{const e=this.topoFormulario.querySelector("input#nivel");this.conteudo+=this.adicionaParagrafoHTML(`Nível: ${e.value}`)},this.adicionaPerfisOnline=()=>{const e=this.topoFormulario.querySelectorAll("perfis-servidores select"),a=this.topoFormulario.querySelectorAll("perfis-servidores input");let i="";for(let o=0;o<e.length;o++)i+=`<li>(${e[o].value}, ${a[o].value})</li>`;this.conteudo+=`<div><p>Perfis Online:</p><ol>${i}</ol></div>`},this.adicionaRedesSociais=()=>{const e=this.topoFormulario.querySelectorAll("redes-sociais input");let a="";e.forEach((e=>{a+="<li>"+e.value+"</li>"})),this.conteudo+=`<div><p>Redes Sociais:</p><ol>${a}</ol></div>`},this.adicionaFoto=()=>{const e=this.topoFormulario.querySelector("input#img-link");this.conteudo+=this.adicionaParagrafoHTML(`Link da Foto: ${e.value}`)},this.adicionaMsgAoModerador=()=>{const e=this.topoFormulario.querySelector("textarea#msg-ao-moderador");this.conteudo+=this.adicionaParagrafoHTML(`Mensagem ao Moderador: ${e.value}`)},this.adicionaMsgDeAjudaAoModerador=()=>{this.conteudo+=this.adicionaParagrafoHTML("Ao moderador: para uma visualização mais agradável, salve o texto acima como um arquivo HTML e abra-o em um browser.")},this.copiaConteudoEmailParaAreaDeTransferencia=()=>navigator.clipboard.writeText(this.conteudo)}connectedCallback(){this.innerHTML=n.template,this.inicializaEscutaCheckboxDePrivacidade(),this.inicializaEscutaDeEnvioDeEmail()}get topoFormulario(){return this.parentElement.parentElement}}a.default=n,n.tag="botao-cadastro-jogador",n.emailDoModerador="moderador.nihon.kiin@gmail.com",n.template='\n    <button type="submit" id="envio">\n      <a id="link-envia-email">Enviar Email</a>\n    </button>\n  ',n.linkDeEmailInicial=`mailto:${n.emailDoModerador}?body=`,n.assuntoDeEmailInicial="&subject=Cadastro de Jogador: "},670:(e,a)=>{var i,o,t,n,s;Object.defineProperty(a,"__esModule",{value:!0}),a.Ranking=a.Servidor=a.Estado=a.Pais=a.Rede=void 0,(s=a.Rede||(a.Rede={})).facebook="Facebook",s.reddit="Reddit",s.twitch="Twitch",s.youtube="YouTube",s.instagram="Instagram",(n=a.Pais||(a.Pais={})).brasil="Brasil",n.portugal="Portugal",(t=a.Estado||(a.Estado={})).acre="AC",t.alagoas="AL",t.amapa="AP",t.amazonas="AM",t.bahia="BA",t.ceara="CE",t.df="DF",t.es="ES",t.goias="GO",t.maranhao="MA",t.mt="MT",t.ms="MS",t.mg="MG",t.para="PA",t.paraiba="PB",t.parana="PR",t.pernambuco="PE",t.piaui="PI",t.rio="RJ",t.rn="RN",t.rs="RS",t.rondonia="RO",t.roraima="RR",t.sp="SP",t.sergipe="SE",t.tocantins="TO",(o=a.Servidor||(a.Servidor={})).ogs="OGS",o.kgs="KGS",o.tygem="Tygem",o.wbaduk="WBaduk",o.foxy="Fox Go",o.cgs="CGS",(i=a.Ranking||(a.Ranking={}))[i.d9=3100]="d9",i[i.d8=3e3]="d8",i[i.d7=2900]="d7",i[i.d6=2800]="d6",i[i.d5=2700]="d5",i[i.d4=2600]="d4",i[i.d3=2500]="d3",i[i.d2=2400]="d2",i[i.d1=2300]="d1",i[i.k1=2200]="k1",i[i.k2=2100]="k2",i[i.k3=2e3]="k3",i[i.k4=1900]="k4",i[i.k5=1800]="k5",i[i.k6=1700]="k6",i[i.k7=1600]="k7",i[i.k8=1500]="k8",i[i.k9=1400]="k9",i[i.k10=1300]="k10",i[i.k11=1200]="k11",i[i.k12=1100]="k12",i[i.k13=1e3]="k13",i[i.k14=900]="k14",i[i.k15=800]="k15",i[i.k16=700]="k16",i[i.k17=600]="k17",i[i.k18=500]="k18",i[i.k19=400]="k19",i[i.k20=300]="k20",i[i.k21=200]="k21",i[i.k22=100]="k22",i[i.k23=0]="k23",i[i.k24=-100]="k24",i[i.k25=-200]="k25",i[i.k26=-300]="k26",i[i.k27=-400]="k27",i[i.k28=-500]="k28",i[i.k29=-600]="k29",i[i.k30=-700]="k30"},477:(e,a,i)=>{Object.defineProperty(a,"__esModule",{value:!0}),a.jogadoresDB=void 0;const o=i(670);a.jogadoresDB=[{nome:"Philippe Fanaro",pais:o.Pais.brasil,estado:o.Estado.sp,cidade:"São Paulo",contato:{email:"philippefanaro@gmail.com",telefone:5511970286739},nascimento:Date.UTC(1992,6,27),nivel:{rank:"1d",elo:2300},foto:new URL("https://imgur.com/gallery/YtxsVTy"),perfis:[{servidor:o.Servidor.ogs,nome:"psygo"},{servidor:o.Servidor.kgs,nome:"psygo"}],social:[{rede:o.Rede.facebook,perfil:new URL("https://facebook.com/philippe.fanaro")},{rede:o.Rede.reddit,perfil:new URL("https://www.reddit.com/user/Fanaro009")},{rede:o.Rede.youtube,perfil:new URL("https://www.youtube.com/c/PhilippeFanaro")}],professor_certificado:!0},{nome:"Laércio Pereira",pais:o.Pais.brasil,estado:o.Estado.parana,cidade:"Curitiba",contato:{email:"laercioskt@gmail.com",telefone:5541996913524},nascimento:Date.UTC(1987,4,20),nivel:{rank:"1d",elo:2300},foto:new URL("http://gravatar.com/avatar/3de834177016267783871ee24c3e9d8c"),perfis:[{servidor:o.Servidor.ogs,nome:"laercioskt"},{servidor:o.Servidor.kgs,nome:"laercioskt"}],social:[{rede:o.Rede.facebook,perfil:new URL("https://www.facebook.com/laercioskt")},{rede:o.Rede.twitch,perfil:new URL("https://www.twitch.tv/laercionogo")}],professor_certificado:!1},{nome:"Elias Cardoso",pais:o.Pais.brasil,estado:o.Estado.rio,cidade:"São Gonçalo",contato:{email:"ebrc.2013@gmail.com",telefone:5521969194896},nascimento:Date.UTC(1988,5,7),nivel:{rank:"1k",elo:2200},foto:new URL("https://media-exp1.licdn.com/dms/image/C5603AQEVTzZdChNZqA/profile-displayphoto-shrink_200_200/0/1517373616794?e=1619049600"),professor_certificado:!1},{nome:"Adalberto Duarte",pais:o.Pais.brasil,estado:o.Estado.para,cidade:"Belém",contato:{email:"contato@adalberto-duarte.com",telefone:5591981410408},nascimento:Date.UTC(1978,8,30),nivel:{rank:"5k",elo:1800},foto:new URL("https://www.facebook.com/adalbertoreis.duarte"),perfis:[{servidor:o.Servidor.ogs,nome:"Adalberto"},{servidor:o.Servidor.kgs,nome:"Adalberto"}],social:[{rede:o.Rede.facebook,perfil:new URL("https://www.facebook.com/adalbertoreis.duarte")},{rede:o.Rede.instagram,perfil:new URL("https://www.instagram.com/adalbertorduarte")}],professor_certificado:!1},{nome:"Felipe Herman van Riemsdijk",pais:o.Pais.brasil,estado:o.Estado.sp,cidade:"São Paulo",contato:{email:"fh.vanriemsdijk@gmail.com",telefone:5511970565826},nascimento:Date.UTC(1986,11,24),nivel:{rank:"5d",elo:2700},foto:new URL("https://www.facebook.com/fhfvanriemsdijk/"),perfis:[{servidor:o.Servidor.ogs,nome:"riemsdijk"},{servidor:o.Servidor.foxy,nome:"riemsdijk"},{servidor:o.Servidor.kgs,nome:"riemsdijk"}],social:[{rede:o.Rede.facebook,perfil:new URL("https://www.facebook.com/fhfvanriemsdijk/")}],professor_certificado:!0},{nome:"Julio Gabriel Otterback Pinheiro",pais:o.Pais.brasil,estado:o.Estado.mt,cidade:"Cuiabá",contato:{email:"julio_gabriel@hotmail.com",telefone:5565996145858},nascimento:Date.UTC(1986,5,31),nivel:{rank:"7k",elo:1600},foto:new URL("https://i.imgur.com/SZ6HP5n.png"),perfis:[{servidor:o.Servidor.ogs,nome:"bodlike"},{servidor:o.Servidor.kgs,nome:"bodlike"}],social:[],professor_certificado:!1},{nome:"Emanuel Araújo",pais:o.Pais.brasil,estado:o.Estado.rio,cidade:"Rio de Janeiro",contato:{email:"entravix@gmail.com",telefone:5521992931587},nascimento:Date.UTC(1989,12,26),nivel:{rank:"1k",elo:2200},foto:new URL("https://www.facebook.com/emanuel.araujo.cs"),perfis:[{servidor:o.Servidor.ogs,nome:"Cactus Juice"},{servidor:o.Servidor.foxy,nome:"Entravix"},{servidor:o.Servidor.kgs,nome:"Entravix"}],social:[{rede:o.Rede.facebook,perfil:new URL("https://www.facebook.com/emanuel.araujo.cs")},{rede:o.Rede.instagram,perfil:new URL("https://www.instagram.com/godecacto/")}],professor_certificado:!1}]},261:(e,a)=>{Object.defineProperty(a,"__esModule",{value:!0}),a.default=class{static formataISO8601ParaPtBR(e){const a=e.split("-");return`${a[2]}/${a[1]}/${a[0]}`}static formataUTCParaPtBR(e){const a=new Date(e);return`${a.getUTCDate().toString().padStart(2,"0")}/${(a.getUTCMonth()+1).toString().padStart(2,"0")}/${a.getUTCFullYear().toString().padStart(4,"0")}`}}},453:function(e,a,i){var o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(a,"__esModule",{value:!0}),new(o(i(697)).default)},697:function(e,a,i){var o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(a,"__esModule",{value:!0});const t=o(i(276)),n=o(i(430)),s=o(i(728)),r=o(i(917)),d=o(i(367));a.default=class{constructor(){this.define=()=>{customElements.define(n.default.tag,n.default),customElements.define(t.default.tag,t.default),customElements.define(r.default.tag,r.default),customElements.define(s.default.tag,s.default),customElements.define(d.default.tag,d.default)},this.prepend=()=>{window.addEventListener("DOMContentLoaded",(e=>document.body.prepend(new n.default)))},this.define(),this.prepend()}}},430:(e,a)=>{Object.defineProperty(a,"__esModule",{value:!0});class i extends HTMLElement{constructor(){super()}connectedCallback(){this.innerHTML=i.template}}a.default=i,i.tag="br-nhk-nav",i.template='\n    <a href="/">\n      <h1>BRASIL NIHON KIIN</h1>\n    </a>\n  '},728:(e,a,i)=>{Object.defineProperty(a,"__esModule",{value:!0});const o=i(670);class t extends HTMLElement{constructor(){super(),this.index=1,this.inicializaEscutaDeAdicaoDeCampos=()=>{this.querySelector("button").onclick=e=>this.adicionaServidores()},this.adicionaServidores=()=>{this.adicionaServidoresDropDown(),this.adicionaPerfilInput(),this.adicionaLineBreak(),this.index++},this.adicionaServidoresDropDown=()=>{const e=`servidor-dropdown-${this.index}`,a=document.createElement("select");a.id=e,a.name=e,Object.values(o.Servidor).forEach((e=>{const i=document.createElement("option");i.value=e,i.innerHTML=e,a.append(i)})),this.camposDiv.append(a)},this.adicionaPerfilInput=()=>{const e=`servidor-nickname-${this.index}`,a=document.createElement("input");a.type="text",a.name=e,a.id=e,this.camposDiv.append(a)},this.adicionaLineBreak=()=>this.camposDiv.append(document.createElement("br"))}connectedCallback(){this.innerHTML=t.template,this.adicionaServidores(),this.inicializaEscutaDeAdicaoDeCampos()}get camposDiv(){return this.querySelector("div#campos")}}a.default=t,t.tag="perfis-servidores",t.template='\n    <div id="campos"></div>\n\n    <button type="button" id="adiciona-campo-de-perfil-servidor">+</button>\n  '},917:(e,a)=>{Object.defineProperty(a,"__esModule",{value:!0});class i extends HTMLElement{constructor(){super(),this.index=1,this.inicializaEscutaDeAdicaoDeCampoDeRedeSocial=()=>{this.querySelector("button#adiciona-campo-de-rede-social").onclick=e=>this.adicionaNovoCampoDeRedeSocial()},this.adicionaNovoCampoDeRedeSocial=()=>{this.adicionaLegenda(),this.adicionaNovoCampo(),this.adicionaLineBreak(),this.index++},this.adicionaLegenda=()=>{const e=document.createElement("label");e.setAttribute("for",this.campoID),e.innerText=`Rede Social #${this.index}`,this.camposDiv.append(e)},this.adicionaNovoCampo=()=>{const e=document.createElement("input");e.type="url",e.name=this.campoID,e.id=this.campoID,this.camposDiv.append(e)},this.adicionaLineBreak=()=>this.camposDiv.append(document.createElement("br"))}connectedCallback(){this.innerHTML=i.template,this.adicionaNovoCampoDeRedeSocial(),this.inicializaEscutaDeAdicaoDeCampoDeRedeSocial()}get camposDiv(){return this.querySelector("div#campos")}get campoID(){return`rede-social-${this.index}`}}a.default=i,i.tag="redes-sociais",i.template='\n    <div id="campos"></div>\n    \n    <button type="button" id="adiciona-campo-de-rede-social">+</button>\n  '},367:function(e,a,i){var o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(a,"__esModule",{value:!0});const t=i(477),n=o(i(261));class s extends HTMLElement{constructor(){super(),this.jogadorAtual=s.jogadores[0],this.linhaAtual=document.createElement("tr"),this.adicionaCelulaNome=()=>{const e=document.createElement("td");e.innerHTML=this.jogadorAtual.nome,this.linhaAtual.append(e)},this.adicionaCelulaPais=()=>{const e=document.createElement("td");e.innerHTML=this.jogadorAtual.pais,this.linhaAtual.append(e)},this.adicionaCelulaEstado=()=>{const e=document.createElement("td");e.innerHTML=this.jogadorAtual.estado,this.linhaAtual.append(e)},this.adicionaCelulaCidade=()=>{const e=document.createElement("td");e.innerHTML=this.jogadorAtual.cidade,this.linhaAtual.append(e)},this.adicionaCelulaEmail=()=>{const e=document.createElement("td"),a=null==this.jogadorAtual.contato?.email?s.hyphen:this.jogadorAtual.contato?.email,i=a.split("@");e.innerHTML=a==s.hyphen?s.hyphen:`<a href="mailto:${a}">${i[0]}<br/>@${i[1]}</a>`,this.linhaAtual.append(e)},this.adicionaCelulaTelefone=()=>{const e=document.createElement("td"),a=null==this.jogadorAtual.contato?.telefone?s.hyphen:this.jogadorAtual.contato?.telefone.toString();e.innerHTML=a==s.hyphen?s.hyphen:`<a href="tel:+${a}">${a}</a>`,this.linhaAtual.append(e)},this.adicionaCelulaNascimento=()=>{const e=document.createElement("td");e.innerHTML=n.default.formataUTCParaPtBR(this.jogadorAtual.nascimento),this.linhaAtual.append(e)},this.adicionaNivel=()=>{const e=document.createElement("td"),a=this.jogadorAtual.nivel.elo,i=this.jogadorAtual.nivel.rank;e.innerHTML=`${i} <br /> ${a}`,this.linhaAtual.append(e)},this.adicionaCelulaFoto=()=>{const e=document.createElement("td");e.innerHTML=`<a href="${this.jogadorAtual.foto?.href}">Link da Foto</a>`,this.linhaAtual.append(e)},this.adicionaCelulaPerfisOnline=()=>{const e=document.createElement("td");e.className="perfis";let a="";this.jogadorAtual?.perfis?.forEach((e=>{a+=`${e.servidor}: ${e.nome}<br />`})),e.innerHTML=a,this.linhaAtual.append(e)},this.adicionaRedesSociais=()=>{const e=document.createElement("td");e.className="redes-sociais";let a="";this.jogadorAtual?.social?.forEach((e=>{a+=`<a href="${e.perfil.href}">${e.rede}</a><br />`})),e.innerHTML=a,this.linhaAtual.append(e)}}connectedCallback(){this.innerHTML=s.template;const e=this.querySelector("tbody");s.jogadores.forEach((a=>{this.jogadorAtual=a,this.linhaAtual=document.createElement("tr"),this.adicionaCelulaNome(),this.adicionaCelulaPais(),this.adicionaCelulaEstado(),this.adicionaCelulaCidade(),this.adicionaCelulaEmail(),this.adicionaCelulaTelefone(),this.adicionaCelulaNascimento(),this.adicionaNivel(),this.adicionaCelulaFoto(),this.adicionaCelulaPerfisOnline(),this.adicionaRedesSociais(),e.append(this.linhaAtual)}))}}a.default=s,s.tag="tabela-jogadores",s.template="\n    <table>\n      <thead>\n        <th>Nome</th>\n        <th>País</th>\n        <th>Estado</th>\n        <th>Cidade</th>\n        <th>Email</th>\n        <th>Telefone</th>\n        <th>Data de Nascimento</th>\n        <th>Nível e Elo</th>\n        <th>Foto</th>\n        <th>Perfis Online</th>\n        <th>Redes Sociais</th>\n      </thead>\n      <tbody></tbody>\n    </table>\n  ",s.jogadores=t.jogadoresDB,s.hyphen="&mdash;"}},a={};!function i(o){if(a[o])return a[o].exports;var t=a[o]={exports:{}};return e[o].call(t.exports,t,t.exports,i),t.exports}(453)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,