(()=>{"use strict";var e={276:(e,a)=>{Object.defineProperty(a,"__esModule",{value:!0});class i extends HTMLElement{constructor(){super(),this.concordaComFaltaDePrivacidade=!1,this.assunto=i.assuntoDeEmailInicial,this.conteudo="",this.emailLink=i.linkDeEmailInicial,this.inicializaEscutaCheckboxDePrivacidade=()=>{this.parentElement.querySelector("input#ciencia-privacidade").onclick=()=>{this.concordaComFaltaDePrivacidade=!this.concordaComFaltaDePrivacidade}},this.inicializaEscutaDeEnvioDeEmail=()=>{this.querySelector("button#envio").onclick=()=>{this.concordaComFaltaDePrivacidade&&this.topoFormulario.checkValidity()&&(this.montaEmailLink(),this.copiaConteudoEmailParaAreaDeTransferencia(),this.abreEmail())}},this.abreEmail=()=>{const e=this.querySelector("a#link-envia-email");e.href=this.emailLink,e.click()},this.montaEmailLink=()=>{this.assunto=i.assuntoDeEmailInicial,this.conteudo="",this.emailLink=i.linkDeEmailInicial,this.adicionaPrimeiroNome(),this.adicionaUltimoNome(),this.adicionaPais(),this.adicionaEstado(),this.adicionaCidade(),this.adicionaEmail(),this.adicionaTelefone(),this.adicionaNascimento(),this.adicionaNivel(),this.adicionaFoto(),this.adicionaPerfisOnline(),this.adicionaRedesSociais(),this.adicionaMsgAoModerador(),this.adicionaMsgDeAjudaAoModerador(),this.emailLink+=this.conteudo,this.emailLink+=this.assunto},this.adicionaParagrafoHTML=e=>"<p>"+e+"</p>",this.adicionaPrimeiroNome=()=>{const e=this.topoFormulario.querySelector("input#primeiro-nome");this.conteudo+=this.adicionaParagrafoHTML(`Primeiro Nome: ${e.value}`),this.assunto+=e.value},this.adicionaUltimoNome=()=>{const e=this.topoFormulario.querySelector("input#ultimo-nome");this.conteudo+=this.adicionaParagrafoHTML(`Último Nome: ${e.value}`),this.assunto+=" "+e.value},this.adicionaPais=()=>{const e=this.topoFormulario.querySelector("input#pais");this.conteudo+=this.adicionaParagrafoHTML(`País: ${e.value}`)},this.adicionaEstado=()=>{const e=this.topoFormulario.querySelector("input#estado");this.conteudo+=this.adicionaParagrafoHTML(`Estado: ${e.value}`)},this.adicionaCidade=()=>{const e=this.topoFormulario.querySelector("input#cidade");this.conteudo+=this.adicionaParagrafoHTML(`Cidade: ${e.value}`)},this.adicionaEmail=()=>{const e=this.topoFormulario.querySelector("input#email");this.conteudo+=this.adicionaParagrafoHTML(`Email: ${e.value}`)},this.adicionaTelefone=()=>{const e=this.topoFormulario.querySelector("input#tel");this.conteudo+=this.adicionaParagrafoHTML(`Telefone: ${e.value}`)},this.adicionaNascimento=()=>{const e=this.topoFormulario.querySelector("input#nascimento");this.conteudo+=this.adicionaParagrafoHTML(`Data de Nascimento: ${e.value}`)},this.adicionaNivel=()=>{const e=this.topoFormulario.querySelector("input#nivel");this.conteudo+=this.adicionaParagrafoHTML(`Nível: ${e.value}`)},this.adicionaPerfisOnline=()=>{const e=this.topoFormulario.querySelectorAll("perfis-servidores select"),a=this.topoFormulario.querySelectorAll("perfis-servidores input");let i="";for(let t=0;t<e.length;t++)i+=`<li>(${e[t].value}, ${a[t].value})</li>`;this.conteudo+=`<div><p>Perfis Online:</p><ol>${i}</ol></div>`},this.adicionaRedesSociais=()=>{const e=this.topoFormulario.querySelectorAll("redes-sociais input");let a="";e.forEach((e=>{a+="<li>"+e.value+"</li>"})),this.conteudo+=`<div><p>Redes Sociais:</p><ol>${a}</ol></div>`},this.adicionaFoto=()=>{const e=this.topoFormulario.querySelector("input#img-link");this.conteudo+=this.adicionaParagrafoHTML(`Link da Foto: ${e.value}`)},this.adicionaMsgAoModerador=()=>{const e=this.topoFormulario.querySelector("textarea#msg-ao-moderador");this.conteudo+=this.adicionaParagrafoHTML(`Mensagem ao Moderador: ${e.value}`)},this.adicionaMsgDeAjudaAoModerador=()=>{this.conteudo+=this.adicionaParagrafoHTML("Ao moderador: para uma visualização mais agradável, salve o texto acima como um arquivo HTML e abra-o em um browser.")},this.copiaConteudoEmailParaAreaDeTransferencia=()=>navigator.clipboard.writeText(this.conteudo)}connectedCallback(){this.innerHTML=i.template,this.inicializaEscutaCheckboxDePrivacidade(),this.inicializaEscutaDeEnvioDeEmail()}get topoFormulario(){return this.parentElement.parentElement}}a.default=i,i.tag="botao-cadastro-jogador",i.emailDoModerador="moderador.nihon.kiin@gmail.com",i.template='\n    <button type="submit" id="envio">\n      <a id="link-envia-email">Enviar Email</a>\n    </button>\n  ',i.linkDeEmailInicial=`mailto:${i.emailDoModerador}?body=`,i.assuntoDeEmailInicial="&subject=Cadastro de Jogador: "},670:(e,a)=>{var i,t,o,n,s;Object.defineProperty(a,"__esModule",{value:!0}),a.Ranking=a.Servidor=a.Estado=a.Pais=a.Rede=void 0,(s=a.Rede||(a.Rede={})).facebook="Facebook",s.reddit="Reddit",(n=a.Pais||(a.Pais={})).brasil="Brasil",n.portugal="Portugal",(o=a.Estado||(a.Estado={})).acre="AC",o.alagoas="AL",o.amapa="AP",o.amazonas="AM",o.bahia="BA",o.ceara="CE",o.df="DF",o.es="ES",o.goias="GO",o.maranhao="MA",o.mt="MT",o.ms="MS",o.mg="MG",o.para="PA",o.paraiba="PB",o.parana="PR",o.pernambuco="PE",o.piaui="PI",o.rio="RJ",o.rn="RN",o.rs="RS",o.rondonia="RO",o.roraima="RR",o.sp="SP",o.sergipe="SE",o.tocantins="TO",(t=a.Servidor||(a.Servidor={})).ogs="OGS",t.kgs="KGS",t.tygem="Tygem",t.wbaduk="WBaduk",t.foxy="Fox Go",t.cgs="CGS",(i=a.Ranking||(a.Ranking={}))[i.d9=3100]="d9",i[i.d8=3e3]="d8",i[i.d7=2900]="d7",i[i.d6=2800]="d6",i[i.d5=2700]="d5",i[i.d4=2600]="d4",i[i.d3=2500]="d3",i[i.d2=2400]="d2",i[i.d1=2300]="d1",i[i.k1=2200]="k1",i[i.k2=2100]="k2",i[i.k3=2e3]="k3",i[i.k4=1900]="k4",i[i.k5=1800]="k5",i[i.k6=1700]="k6",i[i.k7=1600]="k7",i[i.k8=1500]="k8",i[i.k9=1400]="k9",i[i.k10=1300]="k10",i[i.k11=1200]="k11",i[i.k12=1100]="k12",i[i.k13=1e3]="k13",i[i.k14=900]="k14",i[i.k15=800]="k15",i[i.k16=700]="k16",i[i.k17=600]="k17",i[i.k18=500]="k18",i[i.k19=400]="k19",i[i.k20=300]="k20",i[i.k21=200]="k21",i[i.k22=100]="k22",i[i.k23=0]="k23",i[i.k24=-100]="k24",i[i.k25=-200]="k25",i[i.k26=-300]="k26",i[i.k27=-400]="k27",i[i.k28=-500]="k28",i[i.k29=-600]="k29",i[i.k30=-700]="k30"},477:(e,a,i)=>{Object.defineProperty(a,"__esModule",{value:!0}),a.jogadoresDB=void 0;const t=i(670);a.jogadoresDB=[{nome:"Philippe Fanaro",pais:t.Pais.brasil,estado:t.Estado.sp,cidade:"São Paulo",contato:{email:"philippefanaro@gmail.com",telefone:5511970286739},nascimento:Date.UTC(1992,6,27),nivel:{rank:"1d",elo:2300},foto:new URL("https://imgur.com/gallery/YtxsVTy"),perfis:[{servidor:t.Servidor.ogs,nome:"psygo"},{servidor:t.Servidor.kgs,nome:"psygo"}],social:[{rede:t.Rede.facebook,perfil:new URL("https://facebook.com/philippe.fanaro")},{rede:t.Rede.reddit,perfil:new URL("https://www.reddit.com/user/Fanaro009")}],professor_certificado:!0}]},453:function(e,a,i){var t=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(a,"__esModule",{value:!0}),new(t(i(697)).default)},697:function(e,a,i){var t=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(a,"__esModule",{value:!0});const o=t(i(276)),n=t(i(430)),s=t(i(728)),d=t(i(917)),r=t(i(367));a.default=class{constructor(){this.define=()=>{customElements.define(n.default.tag,n.default),customElements.define(o.default.tag,o.default),customElements.define(d.default.tag,d.default),customElements.define(s.default.tag,s.default),customElements.define(r.default.tag,r.default)},this.prepend=()=>{window.addEventListener("DOMContentLoaded",(e=>document.body.prepend(new n.default)))},this.define(),this.prepend()}}},430:(e,a)=>{Object.defineProperty(a,"__esModule",{value:!0});class i extends HTMLElement{constructor(){super()}connectedCallback(){this.innerHTML=i.template}}a.default=i,i.tag="br-nhk-nav",i.template='\n    <a href="/">\n      <h1>BRASIL NIHON KIIN</h1>\n    </a>\n  '},728:(e,a,i)=>{Object.defineProperty(a,"__esModule",{value:!0});const t=i(670);class o extends HTMLElement{constructor(){super(),this.index=1,this.inicializaEscutaDeAdicaoDeCampos=()=>{this.querySelector("button").onclick=e=>this.adicionaServidores()},this.adicionaServidores=()=>{this.adicionaServidoresDropDown(),this.adicionaPerfilInput(),this.adicionaLineBreak(),this.index++},this.adicionaServidoresDropDown=()=>{const e=`servidor-dropdown-${this.index}`,a=document.createElement("select");a.id=e,a.name=e,Object.values(t.Servidor).forEach((e=>{const i=document.createElement("option");i.value=e,i.innerHTML=e,a.append(i)})),this.camposDiv.append(a)},this.adicionaPerfilInput=()=>{const e=`servidor-nickname-${this.index}`,a=document.createElement("input");a.type="text",a.name=e,a.id=e,this.camposDiv.append(a)},this.adicionaLineBreak=()=>this.camposDiv.append(document.createElement("br"))}connectedCallback(){this.innerHTML=o.template,this.adicionaServidores(),this.inicializaEscutaDeAdicaoDeCampos()}get camposDiv(){return this.querySelector("div#campos")}}a.default=o,o.tag="perfis-servidores",o.template='\n    <div id="campos"></div>\n\n    <button type="button" id="adiciona-campo-de-perfil-servidor">+</button>\n  '},917:(e,a)=>{Object.defineProperty(a,"__esModule",{value:!0});class i extends HTMLElement{constructor(){super(),this.index=1,this.inicializaEscutaDeAdicaoDeCampoDeRedeSocial=()=>{this.querySelector("button#adiciona-campo-de-rede-social").onclick=e=>this.adicionaNovoCampoDeRedeSocial()},this.adicionaNovoCampoDeRedeSocial=()=>{this.adicionaLegenda(),this.adicionaNovoCampo(),this.adicionaLineBreak(),this.index++},this.adicionaLegenda=()=>{const e=document.createElement("label");e.setAttribute("for",this.campoID),e.innerText=`Rede Social #${this.index}`,this.camposDiv.append(e)},this.adicionaNovoCampo=()=>{const e=document.createElement("input");e.type="url",e.name=this.campoID,e.id=this.campoID,this.camposDiv.append(e)},this.adicionaLineBreak=()=>this.camposDiv.append(document.createElement("br"))}connectedCallback(){this.innerHTML=i.template,this.adicionaNovoCampoDeRedeSocial(),this.inicializaEscutaDeAdicaoDeCampoDeRedeSocial()}get camposDiv(){return this.querySelector("div#campos")}get campoID(){return`rede-social-${this.index}`}}a.default=i,i.tag="redes-sociais",i.template='\n    <div id="campos"></div>\n    \n    <button type="button" id="adiciona-campo-de-rede-social">+</button>\n  '},367:(e,a,i)=>{Object.defineProperty(a,"__esModule",{value:!0});const t=i(477);class o extends HTMLElement{constructor(){super(),this.jogadorAtual=o.jogadores[0],this.linhaAtual=document.createElement("tr"),this.adicionaCelulaNome=()=>{const e=document.createElement("td");e.innerHTML=this.jogadorAtual.nome,this.linhaAtual.append(e)},this.adicionaCelulaPais=()=>{const e=document.createElement("td");e.innerHTML=this.jogadorAtual.pais,this.linhaAtual.append(e)},this.adicionaCelulaEstado=()=>{const e=document.createElement("td");e.innerHTML=this.jogadorAtual.estado,this.linhaAtual.append(e)},this.adicionaCelulaCidade=()=>{const e=document.createElement("td");e.innerHTML=this.jogadorAtual.cidade,this.linhaAtual.append(e)},this.adicionaCelulaEmail=()=>{const e=document.createElement("td"),a=null==this.jogadorAtual.contato?.email?o.hyphen:this.jogadorAtual.contato?.email,i=a.split("@");e.innerHTML=a==o.hyphen?o.hyphen:`<a href="mailto:${a}">${i[0]}<br/>@${i[1]}</a>`,this.linhaAtual.append(e)},this.adicionaCelulaTelefone=()=>{const e=document.createElement("td"),a=null==this.jogadorAtual.contato?.telefone?o.hyphen:this.jogadorAtual.contato?.telefone.toString();e.innerHTML=a==o.hyphen?o.hyphen:`<a href="tel:+${a}">${a}</a>`,this.linhaAtual.append(e)},this.adicionaCelulaNascimento=()=>{const e=document.createElement("td"),a=new Date(this.jogadorAtual.nascimento),i=a.getDate()+1,t=a.getMonth(),o=a.getFullYear();e.innerHTML=`${i}-${t}-${o}`,this.linhaAtual.append(e)},this.adicionaNivel=()=>{const e=document.createElement("td"),a=this.jogadorAtual.nivel.elo,i=this.jogadorAtual.nivel.rank;e.innerHTML=`${i} <br /> ${a}`,this.linhaAtual.append(e)},this.adicionaCelulaFoto=()=>{const e=document.createElement("td");e.innerHTML=`<a href="${this.jogadorAtual.foto?.href}">Link da Foto</a>`,this.linhaAtual.append(e)},this.adicionaCelulaPerfisOnline=()=>{const e=document.createElement("td");e.className="perfis";let a="";this.jogadorAtual?.perfis?.forEach((e=>{a+=`${e.servidor}: ${e.nome}<br />`})),e.innerHTML=a,this.linhaAtual.append(e)},this.adicionaRedesSociais=()=>{const e=document.createElement("td");e.className="redes-sociais";let a="";this.jogadorAtual?.social?.forEach((e=>{a+=`<a href="${e.perfil.href}">${e.rede}</a><br />`})),e.innerHTML=a,this.linhaAtual.append(e)}}connectedCallback(){this.innerHTML=o.template;const e=this.querySelector("tbody");o.jogadores.forEach((a=>{this.jogadorAtual=a,this.linhaAtual=document.createElement("tr"),this.adicionaCelulaNome(),this.adicionaCelulaPais(),this.adicionaCelulaEstado(),this.adicionaCelulaCidade(),this.adicionaCelulaEmail(),this.adicionaCelulaTelefone(),this.adicionaCelulaNascimento(),this.adicionaNivel(),this.adicionaCelulaFoto(),this.adicionaCelulaPerfisOnline(),this.adicionaRedesSociais(),e.append(this.linhaAtual)}))}}a.default=o,o.tag="tabela-jogadores",o.template="\n    <table>\n      <thead>\n        <th>Nome</th>\n        <th>País</th>\n        <th>Estado</th>\n        <th>Cidade</th>\n        <th>Email</th>\n        <th>Telefone</th>\n        <th>Data de Nascimento</th>\n        <th>Nível e Elo</th>\n        <th>Foto</th>\n        <th>Perfis Online</th>\n        <th>Redes Sociais</th>\n      </thead>\n      <tbody></tbody>\n    </table>\n  ",o.jogadores=t.jogadoresDB,o.hyphen="&mdash;"}},a={};!function i(t){if(a[t])return a[t].exports;var o=a[t]={exports:{}};return e[t].call(o.exports,o,o.exports,i),o.exports}(453)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,