(()=>{"use strict";var i={276:(i,e)=>{Object.defineProperty(e,"__esModule",{value:!0});class a extends HTMLElement{constructor(){super(),this.concordaComFaltaDePrivacidade=!1,this.emailLink=a.linkDeEmailInicial,this.inicializaEscutaCheckboxDePrivacidade=()=>{this.parentElement.querySelector("input#ciencia-privacidade").onclick=()=>{this.concordaComFaltaDePrivacidade=!this.concordaComFaltaDePrivacidade}},this.inicializaEscutaDeEnvioDeEmail=()=>{this.querySelector("button#envio").onclick=()=>{this.concordaComFaltaDePrivacidade&&this.topoFormulario.checkValidity()&&(this.montaEmailLink(),console.log(this.emailLink),this.abreEmail())}},this.abreEmail=()=>{const i=this.querySelector("a#link-envia-email");i.href=this.emailLink,i.click()},this.montaEmailLink=()=>{this.emailLink=a.linkDeEmailInicial,this.adicionaPrimeiroNome(),this.adicionaUltimoNome(),this.adicionaPais(),this.adicionaEstado(),this.adicionaCidade(),this.adicionaEmail(),this.adicionaTelefone(),this.adicionaNascimento(),this.adicionaNivel(),this.adicionaFoto(),this.adicionaPerfisOnline(),this.adicionaRedesSociais(),this.adicionaMsgAoModerador(),this.adicionaMsgDeAjudaAoModerador()},this.adicionaParagrafoHTML=i=>"<p>"+i+"</p>",this.adicionaPrimeiroNome=()=>{const i=this.topoFormulario.querySelector("input#primeiro-nome");this.emailLink+=this.adicionaParagrafoHTML(`Primeiro Nome: ${i.value}`)},this.adicionaUltimoNome=()=>{const i=this.topoFormulario.querySelector("input#ultimo-nome");this.emailLink+=this.adicionaParagrafoHTML(`Último Nome: ${i.value}`)},this.adicionaPais=()=>{const i=this.topoFormulario.querySelector("input#pais");this.emailLink+=this.adicionaParagrafoHTML(`País: ${i.value}`)},this.adicionaEstado=()=>{const i=this.topoFormulario.querySelector("input#estado");this.emailLink+=this.adicionaParagrafoHTML(`Estado: ${i.value}`)},this.adicionaCidade=()=>{const i=this.topoFormulario.querySelector("input#cidade");this.emailLink+=this.adicionaParagrafoHTML(`Cidade: ${i.value}`)},this.adicionaEmail=()=>{const i=this.topoFormulario.querySelector("input#email");this.emailLink+=this.adicionaParagrafoHTML(`Email: ${i.value}`)},this.adicionaTelefone=()=>{const i=this.topoFormulario.querySelector("input#tel");this.emailLink+=this.adicionaParagrafoHTML(`Telefone: ${i.value}`)},this.adicionaNascimento=()=>{const i=this.topoFormulario.querySelector("input#nascimento");this.emailLink+=this.adicionaParagrafoHTML(`Data de Nascimento: ${i.value}`)},this.adicionaNivel=()=>{const i=this.topoFormulario.querySelector("input#nivel");this.emailLink+=this.adicionaParagrafoHTML(`Nível: ${i.value}`)},this.adicionaPerfisOnline=()=>{const i=this.topoFormulario.querySelectorAll("perfis-servidores select"),e=this.topoFormulario.querySelectorAll("perfis-servidores input");let a="";for(let o=0;o<i.length;o++)a+=`<li>(${i[o].value}, ${e[o].value})</li>`;this.emailLink+=`<div><p>Perfis Online:</p><ol>${a}</ol></div>`},this.adicionaRedesSociais=()=>{const i=this.topoFormulario.querySelectorAll("redes-sociais input");let e="";i.forEach((i=>{e+="<li>"+i.value+"</li>"})),this.emailLink+=`<div><p>Redes Sociais:</p><ol>${e}</ol></div>`},this.adicionaFoto=()=>{const i=this.topoFormulario.querySelector("input#img-link");this.emailLink+=this.adicionaParagrafoHTML(`Link da Foto: ${i.value}`)},this.adicionaMsgAoModerador=()=>{const i=this.topoFormulario.querySelector("textarea#msg-ao-moderador");this.emailLink+=this.adicionaParagrafoHTML(`Mensagem ao Moderador: ${i.value}`)},this.adicionaMsgDeAjudaAoModerador=()=>{this.emailLink+=this.adicionaParagrafoHTML("Ao moderador: para uma visualização mais agradável, \n      salve o texto acima como um arquivo HTML e abra-o em um browser.")}}connectedCallback(){this.innerHTML=a.template,this.inicializaEscutaCheckboxDePrivacidade(),this.inicializaEscutaDeEnvioDeEmail()}get topoFormulario(){return this.parentElement.parentElement}}e.default=a,a.tag="botao-cadastro-jogador",a.emailDoModerador="philippefanaro@gmail.com",a.template='\n    <button type="submit" id="envio">\n      <a id="link-envia-email">Enviar Email</a>\n    </button>\n  ',a.linkDeEmailInicial=`mailto:${a.emailDoModerador}?subject=Cadastro de Jogador&body=`},786:(i,e)=>{var a,o,t,n,s;Object.defineProperty(e,"__esModule",{value:!0}),e.Ranking=e.Servidor=e.Estado=e.Pais=e.Rede=void 0,(s=e.Rede||(e.Rede={})).facebook="Facebook",s.reddit="Reddit",(n=e.Pais||(e.Pais={})).brasil="Brasil",n.portugal="Portugal",(t=e.Estado||(e.Estado={})).acre="AC",t.alagoas="AL",t.amapa="AP",t.amazonas="AM",t.bahia="BA",t.ceara="CE",t.df="DF",t.es="ES",t.goias="GO",t.maranhao="MA",t.mt="MT",t.ms="MS",t.mg="MG",t.para="PA",t.paraiba="PB",t.parana="PR",t.pernambuco="PE",t.piaui="PI",t.rio="RJ",t.rn="RN",t.rs="RS",t.rondonia="RO",t.roraima="RR",t.sp="SP",t.sergipe="SE",t.tocantins="TO",(o=e.Servidor||(e.Servidor={})).ogs="OGS",o.kgs="KGS",o.tygem="Tygem",o.wbaduk="WBaduk",o.foxy="Fox Go",o.cgs="CGS",(a=e.Ranking||(e.Ranking={}))[a.d9=3100]="d9",a[a.d8=3e3]="d8",a[a.d7=2900]="d7",a[a.d6=2800]="d6",a[a.d5=2700]="d5",a[a.d4=2600]="d4",a[a.d3=2500]="d3",a[a.d2=2400]="d2",a[a.d1=2300]="d1",a[a.k1=2200]="k1",a[a.k2=2100]="k2",a[a.k3=2e3]="k3",a[a.k4=1900]="k4",a[a.k5=1800]="k5",a[a.k6=1700]="k6",a[a.k7=1600]="k7",a[a.k8=1500]="k8",a[a.k9=1400]="k9",a[a.k10=1300]="k10",a[a.k11=1200]="k11",a[a.k12=1100]="k12",a[a.k13=1e3]="k13",a[a.k14=900]="k14",a[a.k15=800]="k15",a[a.k16=700]="k16",a[a.k17=600]="k17",a[a.k18=500]="k18",a[a.k19=400]="k19",a[a.k20=300]="k20",a[a.k21=200]="k21",a[a.k22=100]="k22",a[a.k23=0]="k23",a[a.k24=-100]="k24",a[a.k25=-200]="k25",a[a.k26=-300]="k26",a[a.k27=-400]="k27",a[a.k28=-500]="k28",a[a.k29=-600]="k29",a[a.k30=-700]="k30"},453:function(i,e,a){var o=this&&this.__importDefault||function(i){return i&&i.__esModule?i:{default:i}};Object.defineProperty(e,"__esModule",{value:!0}),new(o(a(697)).default)},697:function(i,e,a){var o=this&&this.__importDefault||function(i){return i&&i.__esModule?i:{default:i}};Object.defineProperty(e,"__esModule",{value:!0});const t=o(a(276)),n=o(a(430)),s=o(a(728)),r=o(a(917));e.default=class{constructor(){this.define=()=>{customElements.define(n.default.tag,n.default),customElements.define(t.default.tag,t.default),customElements.define(r.default.tag,r.default),customElements.define(s.default.tag,s.default)},this.prepend=()=>{window.addEventListener("DOMContentLoaded",(i=>document.body.prepend(new n.default)))},this.define(),this.prepend()}}},430:(i,e)=>{Object.defineProperty(e,"__esModule",{value:!0});class a extends HTMLElement{constructor(){super()}connectedCallback(){this.innerHTML=a.template}}e.default=a,a.tag="br-nhk-nav",a.template='\n    <a href="/">\n      <h1>BRASIL NIHON KIIN</h1>\n    </a>\n  '},728:(i,e,a)=>{Object.defineProperty(e,"__esModule",{value:!0});const o=a(786);class t extends HTMLElement{constructor(){super(),this.index=1,this.inicializaEscutaDeAdicaoDeCampos=()=>{this.querySelector("button").onclick=i=>this.adicionaServidores()},this.adicionaServidores=()=>{this.adicionaServidoresDropDown(),this.adicionaPerfilInput(),this.adicionaLineBreak(),this.index++},this.adicionaServidoresDropDown=()=>{const i=`servidor-dropdown-${this.index}`,e=document.createElement("select");e.id=i,e.name=i,Object.values(o.Servidor).forEach((i=>{const a=document.createElement("option");a.value=i,a.innerHTML=i,e.append(a)})),this.camposDiv.append(e)},this.adicionaPerfilInput=()=>{const i=`servidor-nickname-${this.index}`,e=document.createElement("input");e.type="text",e.name=i,e.id=i,this.camposDiv.append(e)},this.adicionaLineBreak=()=>this.camposDiv.append(document.createElement("br"))}connectedCallback(){this.innerHTML=t.template,this.adicionaServidores(),this.inicializaEscutaDeAdicaoDeCampos()}get camposDiv(){return this.querySelector("div#campos")}}e.default=t,t.tag="perfis-servidores",t.template='\n    <div id="campos"></div>\n\n    <button type="button" id="adiciona-campo-de-perfil-servidor">+</button>\n  '},917:(i,e)=>{Object.defineProperty(e,"__esModule",{value:!0});class a extends HTMLElement{constructor(){super(),this.index=1,this.inicializaEscutaDeAdicaoDeCampoDeRedeSocial=()=>{this.querySelector("button#adiciona-campo-de-rede-social").onclick=i=>this.adicionaNovoCampoDeRedeSocial()},this.adicionaNovoCampoDeRedeSocial=()=>{this.adicionaLegenda(),this.adicionaNovoCampo(),this.adicionaLineBreak(),this.index++},this.adicionaLegenda=()=>{const i=document.createElement("label");i.setAttribute("for",this.campoID),i.innerText=`Rede Social #${this.index}`,this.camposDiv.append(i)},this.adicionaNovoCampo=()=>{const i=document.createElement("input");i.type="url",i.name=this.campoID,i.id=this.campoID,this.camposDiv.append(i)},this.adicionaLineBreak=()=>this.camposDiv.append(document.createElement("br"))}connectedCallback(){this.innerHTML=a.template,this.adicionaNovoCampoDeRedeSocial(),this.inicializaEscutaDeAdicaoDeCampoDeRedeSocial()}get camposDiv(){return this.querySelector("div#campos")}get campoID(){return`rede-social-${this.index}`}}e.default=a,a.tag="redes-sociais",a.template='\n    <div id="campos"></div>\n    \n    <button type="button" id="adiciona-campo-de-rede-social">+</button>\n  '}},e={};!function a(o){if(e[o])return e[o].exports;var t=e[o]={exports:{}};return i[o].call(t.exports,t,t.exports,a),t.exports}(453)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uaWhvbmtpaW4uY29tLmJyLy4vY29kaWdvL2RhZG9zL2pvZ2Fkb3Jlcy9jYWRhc3Ryb19qb2dhZG9yLnRzIiwid2VicGFjazovL25paG9ua2lpbi5jb20uYnIvLi9jb2RpZ28vZGFkb3Mvam9nYWRvcmVzL21vZGVsb3Nfam9nYWRvcmVzLnRzIiwid2VicGFjazovL25paG9ua2lpbi5jb20uYnIvLi9jb2RpZ28vaW5kZXgudHMiLCJ3ZWJwYWNrOi8vbmlob25raWluLmNvbS5ici8uL2NvZGlnby9pbmZyYS9jb25maWd1cmFjYW8udHMiLCJ3ZWJwYWNrOi8vbmlob25raWluLmNvbS5ici8uL2NvZGlnby91aS9uYXYudHMiLCJ3ZWJwYWNrOi8vbmlob25raWluLmNvbS5ici8uL2NvZGlnby91aS9wZXJmaXNfc2Vydmlkb3Jlcy50cyIsIndlYnBhY2s6Ly9uaWhvbmtpaW4uY29tLmJyLy4vY29kaWdvL3VpL3JlZGVzX3NvY2lhaXMudHMiLCJ3ZWJwYWNrOi8vbmlob25raWluLmNvbS5ici93ZWJwYWNrL2Jvb3RzdHJhcCIsIndlYnBhY2s6Ly9uaWhvbmtpaW4uY29tLmJyL3dlYnBhY2svc3RhcnR1cCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIkJvdGFvQ2FkYXN0cm9Kb2dhZG9yIiwiSFRNTEVsZW1lbnQiLCJzdXBlciIsInRoaXMiLCJjb25jb3JkYUNvbUZhbHRhRGVQcml2YWNpZGFkZSIsImVtYWlsTGluayIsImxpbmtEZUVtYWlsSW5pY2lhbCIsImluaWNpYWxpemFFc2N1dGFDaGVja2JveERlUHJpdmFjaWRhZGUiLCJwYXJlbnRFbGVtZW50IiwicXVlcnlTZWxlY3RvciIsIm9uY2xpY2siLCJpbmljaWFsaXphRXNjdXRhRGVFbnZpb0RlRW1haWwiLCJ0b3BvRm9ybXVsYXJpbyIsImNoZWNrVmFsaWRpdHkiLCJtb250YUVtYWlsTGluayIsImNvbnNvbGUiLCJsb2ciLCJhYnJlRW1haWwiLCJhbmNvcmFQYXJhRW1haWwiLCJocmVmIiwiY2xpY2siLCJhZGljaW9uYVByaW1laXJvTm9tZSIsImFkaWNpb25hVWx0aW1vTm9tZSIsImFkaWNpb25hUGFpcyIsImFkaWNpb25hRXN0YWRvIiwiYWRpY2lvbmFDaWRhZGUiLCJhZGljaW9uYUVtYWlsIiwiYWRpY2lvbmFUZWxlZm9uZSIsImFkaWNpb25hTmFzY2ltZW50byIsImFkaWNpb25hTml2ZWwiLCJhZGljaW9uYUZvdG8iLCJhZGljaW9uYVBlcmZpc09ubGluZSIsImFkaWNpb25hUmVkZXNTb2NpYWlzIiwiYWRpY2lvbmFNc2dBb01vZGVyYWRvciIsImFkaWNpb25hTXNnRGVBanVkYUFvTW9kZXJhZG9yIiwiYWRpY2lvbmFQYXJhZ3JhZm9IVE1MIiwiY2FtcG9QcmVlbmNoaWRvIiwicHJpbWVpcm9Ob21lSW5wdXQiLCJ1bHRpbW9Ob21lSW5wdXQiLCJwYWlzSW5wdXQiLCJlc3RhZG9JbnB1dCIsImNpZGFkZUlucHV0IiwiZW1haWxJbnB1dCIsInRlbGVmb25lSW5wdXQiLCJuYXNjaW1lbnRvSW5wdXQiLCJuaXZlbElucHV0Iiwic2Vydmlkb3JlcyIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJwZXJmaXMiLCJwYXJTZXJ2aWRvclBlcmZpbCIsImkiLCJsZW5ndGgiLCJlbGVtZW50b3NEZVJlZGVzU29jaWFpcyIsInJlZGVzU29jaWFpcyIsImZvckVhY2giLCJyZWRlU29jaWFsSW5wdXQiLCJmb3RvSW5wdXQiLCJtc2dBb01vZGVyYWRvclRleHRhcmVhIiwiaW5uZXJIVE1MIiwidGVtcGxhdGUiLCJkZWZhdWx0IiwidGFnIiwiZW1haWxEb01vZGVyYWRvciIsIlJhbmtpbmciLCJTZXJ2aWRvciIsIkVzdGFkbyIsIlBhaXMiLCJSZWRlIiwiX19pbXBvcnREZWZhdWx0IiwibW9kIiwiX19lc01vZHVsZSIsImNhZGFzdHJvX2pvZ2Fkb3JfMSIsIm5hdl8xIiwicGVyZmlzX3NlcnZpZG9yZXNfMSIsInJlZGVzX3NvY2lhaXNfMSIsImRlZmluZSIsImN1c3RvbUVsZW1lbnRzIiwicHJlcGVuZCIsIndpbmRvdyIsImFkZEV2ZW50TGlzdGVuZXIiLCJfIiwiZG9jdW1lbnQiLCJib2R5IiwiQnJOaGtOYXYiLCJtb2RlbG9zX2pvZ2Fkb3Jlc18xIiwiUGVyZmlzU2Vydmlkb3JlcyIsImluZGV4IiwiaW5pY2lhbGl6YUVzY3V0YURlQWRpY2FvRGVDYW1wb3MiLCJhZGljaW9uYVNlcnZpZG9yZXMiLCJhZGljaW9uYVNlcnZpZG9yZXNEcm9wRG93biIsImFkaWNpb25hUGVyZmlsSW5wdXQiLCJhZGljaW9uYUxpbmVCcmVhayIsImRyb3Bkb3duSUQiLCJzZWxlY3QiLCJjcmVhdGVFbGVtZW50IiwiaWQiLCJuYW1lIiwidmFsdWVzIiwic2Vydmlkb3IiLCJvcHRpb24iLCJhcHBlbmQiLCJjYW1wb3NEaXYiLCJjYW1wb0RlUGVyZmlsSUQiLCJub3ZvQ2FtcG9EZVBlcmZpbCIsInR5cGUiLCJSZWRlc1NvY2lhaXMiLCJpbmljaWFsaXphRXNjdXRhRGVBZGljYW9EZUNhbXBvRGVSZWRlU29jaWFsIiwiYWRpY2lvbmFOb3ZvQ2FtcG9EZVJlZGVTb2NpYWwiLCJhZGljaW9uYUxlZ2VuZGEiLCJhZGljaW9uYU5vdm9DYW1wbyIsIm5vdmFMZWdlbmRhIiwic2V0QXR0cmlidXRlIiwiY2FtcG9JRCIsImlubmVyVGV4dCIsIm5vdm9DYW1wbyIsIl9fd2VicGFja19tb2R1bGVfY2FjaGVfXyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGVJZCIsIm1vZHVsZSIsIl9fd2VicGFja19tb2R1bGVzX18iLCJjYWxsIl0sIm1hcHBpbmdzIjoic0NBQ0FBLE9BQU9DLGVBQWVDLEVBQVMsYUFBYyxDQUFFQyxPQUFPLElBQ3RELE1BQU1DLFVBQTZCQyxZQUMvQixjQUNJQyxRQUNBQyxLQUFLQywrQkFBZ0MsRUFDckNELEtBQUtFLFVBQVlMLEVBQXFCTSxtQkFDdENILEtBQUtJLHNDQUF3QyxLQUN2QkosS0FBS0ssY0FBY0MsY0FBYyw2QkFDMUNDLFFBQVUsS0FDZlAsS0FBS0MsK0JBQWlDRCxLQUFLQyxnQ0FHbkRELEtBQUtRLCtCQUFpQyxLQUNwQlIsS0FBS00sY0FBYyxnQkFDM0JDLFFBQVUsS0FDUlAsS0FBS0MsK0JBQ0xELEtBQUtTLGVBQWVDLGtCQUNwQlYsS0FBS1csaUJBQ0xDLFFBQVFDLElBQUliLEtBQUtFLFdBQ2pCRixLQUFLYyxlQUlqQmQsS0FBS2MsVUFBWSxLQUNiLE1BQU1DLEVBQW1CZixLQUFLTSxjQUFjLHNCQUM1Q1MsRUFBZ0JDLEtBQU9oQixLQUFLRSxVQUM1QmEsRUFBZ0JFLFNBRXBCakIsS0FBS1csZUFBaUIsS0FDbEJYLEtBQUtFLFVBQVlMLEVBQXFCTSxtQkFDdENILEtBQUtrQix1QkFDTGxCLEtBQUttQixxQkFDTG5CLEtBQUtvQixlQUNMcEIsS0FBS3FCLGlCQUNMckIsS0FBS3NCLGlCQUNMdEIsS0FBS3VCLGdCQUNMdkIsS0FBS3dCLG1CQUNMeEIsS0FBS3lCLHFCQUNMekIsS0FBSzBCLGdCQUNMMUIsS0FBSzJCLGVBQ0wzQixLQUFLNEIsdUJBQ0w1QixLQUFLNkIsdUJBQ0w3QixLQUFLOEIseUJBQ0w5QixLQUFLK0IsaUNBRVQvQixLQUFLZ0Msc0JBQXlCQyxHQUFvQixNQUFRQSxFQUFrQixPQUM1RWpDLEtBQUtrQixxQkFBdUIsS0FDeEIsTUFBTWdCLEVBQXFCbEMsS0FBS1MsZUFBZUgsY0FBYyx1QkFDN0ROLEtBQUtFLFdBQWFGLEtBQUtnQyxzQkFBc0Isa0JBQWtCRSxFQUFrQnRDLFVBRXJGSSxLQUFLbUIsbUJBQXFCLEtBQ3RCLE1BQU1nQixFQUFtQm5DLEtBQUtTLGVBQWVILGNBQWMscUJBQzNETixLQUFLRSxXQUFhRixLQUFLZ0Msc0JBQXNCLGdCQUFnQkcsRUFBZ0J2QyxVQUVqRkksS0FBS29CLGFBQWUsS0FDaEIsTUFBTWdCLEVBQWFwQyxLQUFLUyxlQUFlSCxjQUFjLGNBQ3JETixLQUFLRSxXQUFhRixLQUFLZ0Msc0JBQXNCLFNBQVNJLEVBQVV4QyxVQUVwRUksS0FBS3FCLGVBQWlCLEtBQ2xCLE1BQU1nQixFQUFlckMsS0FBS1MsZUFBZUgsY0FBYyxnQkFDdkROLEtBQUtFLFdBQWFGLEtBQUtnQyxzQkFBc0IsV0FBV0ssRUFBWXpDLFVBRXhFSSxLQUFLc0IsZUFBaUIsS0FDbEIsTUFBTWdCLEVBQWV0QyxLQUFLUyxlQUFlSCxjQUFjLGdCQUN2RE4sS0FBS0UsV0FBYUYsS0FBS2dDLHNCQUFzQixXQUFXTSxFQUFZMUMsVUFFeEVJLEtBQUt1QixjQUFnQixLQUNqQixNQUFNZ0IsRUFBY3ZDLEtBQUtTLGVBQWVILGNBQWMsZUFDdEROLEtBQUtFLFdBQWFGLEtBQUtnQyxzQkFBc0IsVUFBVU8sRUFBVzNDLFVBRXRFSSxLQUFLd0IsaUJBQW1CLEtBQ3BCLE1BQU1nQixFQUFpQnhDLEtBQUtTLGVBQWVILGNBQWMsYUFDekROLEtBQUtFLFdBQWFGLEtBQUtnQyxzQkFBc0IsYUFBYVEsRUFBYzVDLFVBRTVFSSxLQUFLeUIsbUJBQXFCLEtBQ3RCLE1BQU1nQixFQUFtQnpDLEtBQUtTLGVBQWVILGNBQWMsb0JBQzNETixLQUFLRSxXQUFhRixLQUFLZ0Msc0JBQXNCLHVCQUF1QlMsRUFBZ0I3QyxVQUV4RkksS0FBSzBCLGNBQWdCLEtBQ2pCLE1BQU1nQixFQUFjMUMsS0FBS1MsZUFBZUgsY0FBYyxlQUN0RE4sS0FBS0UsV0FBYUYsS0FBS2dDLHNCQUFzQixVQUFVVSxFQUFXOUMsVUFFdEVJLEtBQUs0QixxQkFBdUIsS0FDeEIsTUFBTWUsRUFBYTNDLEtBQUtTLGVBQWVtQyxpQkFBaUIsNEJBQ2xEQyxFQUFTN0MsS0FBS1MsZUFBZW1DLGlCQUFpQiwyQkFDcEQsSUFBSUUsRUFBb0IsR0FDeEIsSUFBSyxJQUFJQyxFQUFJLEVBQUdBLEVBQUlKLEVBQVdLLE9BQVFELElBR25DRCxHQUFxQixRQUZKSCxFQUFXSSxHQUFHbkQsVUFDaEJpRCxFQUFPRSxHQUFHbkQsY0FHN0JJLEtBQUtFLFdBQWEsaUNBQWlDNEMsZ0JBRXZEOUMsS0FBSzZCLHFCQUF1QixLQUN4QixNQUFNb0IsRUFBMEJqRCxLQUFLUyxlQUFlbUMsaUJBQWlCLHVCQUNyRSxJQUFJTSxFQUFlLEdBQ25CRCxFQUF3QkUsU0FBU0MsSUFDN0JGLEdBQWdCLE9BQVNFLEVBQWdCeEQsTUFBUSxXQUVyREksS0FBS0UsV0FBYSxpQ0FBaUNnRCxnQkFFdkRsRCxLQUFLMkIsYUFBZSxLQUNoQixNQUFNMEIsRUFBYXJELEtBQUtTLGVBQWVILGNBQWMsa0JBQ3JETixLQUFLRSxXQUFhRixLQUFLZ0Msc0JBQXNCLGlCQUFpQnFCLEVBQVV6RCxVQUU1RUksS0FBSzhCLHVCQUF5QixLQUMxQixNQUFNd0IsRUFBMEJ0RCxLQUFLUyxlQUFlSCxjQUFjLDZCQUNsRU4sS0FBS0UsV0FBYUYsS0FBS2dDLHNCQUFzQiwwQkFBMEJzQixFQUF1QjFELFVBRWxHSSxLQUFLK0IsOEJBQWdDLEtBQ2pDL0IsS0FBS0UsV0FBYUYsS0FBS2dDLHNCQUFzQixpSUFJckQsb0JBQ0loQyxLQUFLdUQsVUFBWTFELEVBQXFCMkQsU0FDdEN4RCxLQUFLSSx3Q0FDTEosS0FBS1EsaUNBRVQscUJBQ0ksT0FBT1IsS0FBS0ssY0FBY0EsZUFHbENWLEVBQVE4RCxRQUFVNUQsRUFDbEJBLEVBQXFCNkQsSUFBTSx5QkFDM0I3RCxFQUFxQjhELGlCQUFtQiwyQkFDeEM5RCxFQUFxQjJELFNBQVcsOEdBS2hDM0QsRUFBcUJNLG1CQUFxQixVQUFVTixFQUFxQjhELHNELFlDaEZ6RSxJQUFXQyxFQVRBQyxFQTdCQUMsRUFMQUMsRUFMQUMsRUFIWHZFLE9BQU9DLGVBQWVDLEVBQVMsYUFBYyxDQUFFQyxPQUFPLElBQ3RERCxFQUFRaUUsUUFBVWpFLEVBQVFrRSxTQUFXbEUsRUFBUW1FLE9BQVNuRSxFQUFRb0UsS0FBT3BFLEVBQVFxRSxVQUFPLEdBRXpFQSxFQUdEckUsRUFBUXFFLE9BQVNyRSxFQUFRcUUsS0FBTyxLQUZ2QixTQUFJLFdBQ25CQSxFQUFhLE9BQUksVUFHVkQsRUFHRHBFLEVBQVFvRSxPQUFTcEUsRUFBUW9FLEtBQU8sS0FGekIsT0FBSSxTQUNqQkEsRUFBZSxTQUFJLFlBR1pELEVBMkJDbkUsRUFBUW1FLFNBQVduRSxFQUFRbUUsT0FBUyxLQTFCL0IsS0FBSSxLQUNqQkEsRUFBZ0IsUUFBSSxLQUNwQkEsRUFBYyxNQUFJLEtBQ2xCQSxFQUFpQixTQUFJLEtBQ3JCQSxFQUFjLE1BQUksS0FDbEJBLEVBQWMsTUFBSSxLQUNsQkEsRUFBVyxHQUFJLEtBQ2ZBLEVBQVcsR0FBSSxLQUNmQSxFQUFjLE1BQUksS0FDbEJBLEVBQWlCLFNBQUksS0FDckJBLEVBQVcsR0FBSSxLQUNmQSxFQUFXLEdBQUksS0FDZkEsRUFBVyxHQUFJLEtBQ2ZBLEVBQWEsS0FBSSxLQUNqQkEsRUFBZ0IsUUFBSSxLQUNwQkEsRUFBZSxPQUFJLEtBQ25CQSxFQUFtQixXQUFJLEtBQ3ZCQSxFQUFjLE1BQUksS0FDbEJBLEVBQVksSUFBSSxLQUNoQkEsRUFBVyxHQUFJLEtBQ2ZBLEVBQVcsR0FBSSxLQUNmQSxFQUFpQixTQUFJLEtBQ3JCQSxFQUFnQixRQUFJLEtBQ3BCQSxFQUFXLEdBQUksS0FDZkEsRUFBZ0IsUUFBSSxLQUNwQkEsRUFBa0IsVUFBSSxNQUdmRCxFQU9HbEUsRUFBUWtFLFdBQWFsRSxFQUFRa0UsU0FBVyxLQU5wQyxJQUFJLE1BQ2xCQSxFQUFjLElBQUksTUFDbEJBLEVBQWdCLE1BQUksUUFDcEJBLEVBQWlCLE9BQUksU0FDckJBLEVBQWUsS0FBSSxTQUNuQkEsRUFBYyxJQUFJLE9BR1hELEVBd0NFakUsRUFBUWlFLFVBQVlqRSxFQUFRaUUsUUFBVSxLQXZDdkNBLEVBQVksR0FBSSxNQUFRLEtBQ2hDQSxFQUFRQSxFQUFZLEdBQUksS0FBUSxLQUNoQ0EsRUFBUUEsRUFBWSxHQUFJLE1BQVEsS0FDaENBLEVBQVFBLEVBQVksR0FBSSxNQUFRLEtBQ2hDQSxFQUFRQSxFQUFZLEdBQUksTUFBUSxLQUNoQ0EsRUFBUUEsRUFBWSxHQUFJLE1BQVEsS0FDaENBLEVBQVFBLEVBQVksR0FBSSxNQUFRLEtBQ2hDQSxFQUFRQSxFQUFZLEdBQUksTUFBUSxLQUNoQ0EsRUFBUUEsRUFBWSxHQUFJLE1BQVEsS0FDaENBLEVBQVFBLEVBQVksR0FBSSxNQUFRLEtBQ2hDQSxFQUFRQSxFQUFZLEdBQUksTUFBUSxLQUNoQ0EsRUFBUUEsRUFBWSxHQUFJLEtBQVEsS0FDaENBLEVBQVFBLEVBQVksR0FBSSxNQUFRLEtBQ2hDQSxFQUFRQSxFQUFZLEdBQUksTUFBUSxLQUNoQ0EsRUFBUUEsRUFBWSxHQUFJLE1BQVEsS0FDaENBLEVBQVFBLEVBQVksR0FBSSxNQUFRLEtBQ2hDQSxFQUFRQSxFQUFZLEdBQUksTUFBUSxLQUNoQ0EsRUFBUUEsRUFBWSxHQUFJLE1BQVEsS0FDaENBLEVBQVFBLEVBQWEsSUFBSSxNQUFRLE1BQ2pDQSxFQUFRQSxFQUFhLElBQUksTUFBUSxNQUNqQ0EsRUFBUUEsRUFBYSxJQUFJLE1BQVEsTUFDakNBLEVBQVFBLEVBQWEsSUFBSSxLQUFRLE1BQ2pDQSxFQUFRQSxFQUFhLElBQUksS0FBTyxNQUNoQ0EsRUFBUUEsRUFBYSxJQUFJLEtBQU8sTUFDaENBLEVBQVFBLEVBQWEsSUFBSSxLQUFPLE1BQ2hDQSxFQUFRQSxFQUFhLElBQUksS0FBTyxNQUNoQ0EsRUFBUUEsRUFBYSxJQUFJLEtBQU8sTUFDaENBLEVBQVFBLEVBQWEsSUFBSSxLQUFPLE1BQ2hDQSxFQUFRQSxFQUFhLElBQUksS0FBTyxNQUNoQ0EsRUFBUUEsRUFBYSxJQUFJLEtBQU8sTUFDaENBLEVBQVFBLEVBQWEsSUFBSSxLQUFPLE1BQ2hDQSxFQUFRQSxFQUFhLElBQUksR0FBSyxNQUM5QkEsRUFBUUEsRUFBYSxLQUFLLEtBQU8sTUFDakNBLEVBQVFBLEVBQWEsS0FBSyxLQUFPLE1BQ2pDQSxFQUFRQSxFQUFhLEtBQUssS0FBTyxNQUNqQ0EsRUFBUUEsRUFBYSxLQUFLLEtBQU8sTUFDakNBLEVBQVFBLEVBQWEsS0FBSyxLQUFPLE1BQ2pDQSxFQUFRQSxFQUFhLEtBQUssS0FBTyxNQUNqQ0EsRUFBUUEsRUFBYSxLQUFLLEtBQU8sTyxvQkMxRnJDLElBQUlLLEVBQW1CakUsTUFBUUEsS0FBS2lFLGlCQUFvQixTQUFVQyxHQUM5RCxPQUFRQSxHQUFPQSxFQUFJQyxXQUFjRCxFQUFNLENBQUUsUUFBV0EsSUFFeER6RSxPQUFPQyxlQUFlQyxFQUFTLGFBQWMsQ0FBRUMsT0FBTyxJQUV0RCxJQUR1QnFFLEVBQWdCLEVBQVEsTUFDNUJSLFUsb0JDTG5CLElBQUlRLEVBQW1CakUsTUFBUUEsS0FBS2lFLGlCQUFvQixTQUFVQyxHQUM5RCxPQUFRQSxHQUFPQSxFQUFJQyxXQUFjRCxFQUFNLENBQUUsUUFBV0EsSUFFeER6RSxPQUFPQyxlQUFlQyxFQUFTLGFBQWMsQ0FBRUMsT0FBTyxJQUN0RCxNQUFNd0UsRUFBcUJILEVBQWdCLEVBQVEsTUFDN0NJLEVBQVFKLEVBQWdCLEVBQVEsTUFDaENLLEVBQXNCTCxFQUFnQixFQUFRLE1BQzlDTSxFQUFrQk4sRUFBZ0IsRUFBUSxNQWdCaER0RSxFQUFROEQsUUFmUixNQUNJLGNBQ0l6RCxLQUFLd0UsT0FBUyxLQUNWQyxlQUFlRCxPQUFPSCxFQUFNWixRQUFRQyxJQUFLVyxFQUFNWixTQUMvQ2dCLGVBQWVELE9BQU9KLEVBQW1CWCxRQUFRQyxJQUFLVSxFQUFtQlgsU0FDekVnQixlQUFlRCxPQUFPRCxFQUFnQmQsUUFBUUMsSUFBS2EsRUFBZ0JkLFNBQ25FZ0IsZUFBZUQsT0FBT0YsRUFBb0JiLFFBQVFDLElBQUtZLEVBQW9CYixVQUUvRXpELEtBQUswRSxRQUFVLEtBQ1hDLE9BQU9DLGlCQUFpQixvQkFBcUJDLEdBQU1DLFNBQVNDLEtBQUtMLFFBQVEsSUFBSUwsRUFBTVosWUFFdkZ6RCxLQUFLd0UsU0FDTHhFLEtBQUswRSxhLFlDcEJiakYsT0FBT0MsZUFBZUMsRUFBUyxhQUFjLENBQUVDLE9BQU8sSUFDdEQsTUFBTW9GLFVBQWlCbEYsWUFDbkIsY0FDSUMsUUFFSixvQkFDSUMsS0FBS3VELFVBQVl5QixFQUFTeEIsVUFHbEM3RCxFQUFROEQsUUFBVXVCLEVBQ2xCQSxFQUFTdEIsSUFBTSxhQUNmc0IsRUFBU3hCLFNBQVcsc0UsY0NYcEIvRCxPQUFPQyxlQUFlQyxFQUFTLGFBQWMsQ0FBRUMsT0FBTyxJQUN0RCxNQUFNcUYsRUFBc0IsRUFBUSxLQUNwQyxNQUFNQyxVQUF5QnBGLFlBQzNCLGNBQ0lDLFFBQ0FDLEtBQUttRixNQUFRLEVBQ2JuRixLQUFLb0YsaUNBQW1DLEtBQ05wRixLQUFLTSxjQUFjLFVBQzVCQyxRQUFXc0UsR0FBTTdFLEtBQUtxRixzQkFFL0NyRixLQUFLcUYsbUJBQXFCLEtBQ3RCckYsS0FBS3NGLDZCQUNMdEYsS0FBS3VGLHNCQUNMdkYsS0FBS3dGLG9CQUNMeEYsS0FBS21GLFNBRVRuRixLQUFLc0YsMkJBQTZCLEtBQzlCLE1BQU1HLEVBQWEscUJBQXFCekYsS0FBS21GLFFBQ3ZDTyxFQUFTWixTQUFTYSxjQUFjLFVBQ3RDRCxFQUFPRSxHQUFLSCxFQUNaQyxFQUFPRyxLQUFPSixFQUNkaEcsT0FBT3FHLE9BQU9iLEVBQW9CcEIsVUFBVVYsU0FBUzRDLElBQ2pELE1BQU1DLEVBQVNsQixTQUFTYSxjQUFjLFVBQ3RDSyxFQUFPcEcsTUFBUW1HLEVBQ2ZDLEVBQU96QyxVQUFZd0MsRUFDbkJMLEVBQU9PLE9BQU9ELE1BRWxCaEcsS0FBS2tHLFVBQVVELE9BQU9QLElBRTFCMUYsS0FBS3VGLG9CQUFzQixLQUN2QixNQUFNWSxFQUFrQixxQkFBcUJuRyxLQUFLbUYsUUFDNUNpQixFQUFvQnRCLFNBQVNhLGNBQWMsU0FDakRTLEVBQWtCQyxLQUFPLE9BQ3pCRCxFQUFrQlAsS0FBT00sRUFDekJDLEVBQWtCUixHQUFLTyxFQUN2Qm5HLEtBQUtrRyxVQUFVRCxPQUFPRyxJQUUxQnBHLEtBQUt3RixrQkFBb0IsSUFBTXhGLEtBQUtrRyxVQUFVRCxPQUFPbkIsU0FBU2EsY0FBYyxPQUVoRixvQkFDSTNGLEtBQUt1RCxVQUFZMkIsRUFBaUIxQixTQUNsQ3hELEtBQUtxRixxQkFDTHJGLEtBQUtvRixtQ0FFVCxnQkFDSSxPQUFPcEYsS0FBS00sY0FBYyxlQUdsQ1gsRUFBUThELFFBQVV5QixFQUNsQkEsRUFBaUJ4QixJQUFNLG9CQUN2QndCLEVBQWlCMUIsU0FBVyxvSCxZQ2xENUIvRCxPQUFPQyxlQUFlQyxFQUFTLGFBQWMsQ0FBRUMsT0FBTyxJQUN0RCxNQUFNMEcsVUFBcUJ4RyxZQUN2QixjQUNJQyxRQUNBQyxLQUFLbUYsTUFBUSxFQUNibkYsS0FBS3VHLDRDQUE4QyxLQUNqQnZHLEtBQUtNLGNBQWMsd0NBQzVCQyxRQUFXc0UsR0FBTTdFLEtBQUt3RyxpQ0FFL0N4RyxLQUFLd0csOEJBQWdDLEtBQ2pDeEcsS0FBS3lHLGtCQUNMekcsS0FBSzBHLG9CQUNMMUcsS0FBS3dGLG9CQUNMeEYsS0FBS21GLFNBRVRuRixLQUFLeUcsZ0JBQWtCLEtBQ25CLE1BQU1FLEVBQWM3QixTQUFTYSxjQUFjLFNBQzNDZ0IsRUFBWUMsYUFBYSxNQUFPNUcsS0FBSzZHLFNBQ3JDRixFQUFZRyxVQUFZLGdCQUFnQjlHLEtBQUttRixRQUM3Q25GLEtBQUtrRyxVQUFVRCxPQUFPVSxJQUUxQjNHLEtBQUswRyxrQkFBb0IsS0FDckIsTUFBTUssRUFBWWpDLFNBQVNhLGNBQWMsU0FDekNvQixFQUFVVixLQUFPLE1BQ2pCVSxFQUFVbEIsS0FBTzdGLEtBQUs2RyxRQUN0QkUsRUFBVW5CLEdBQUs1RixLQUFLNkcsUUFDcEI3RyxLQUFLa0csVUFBVUQsT0FBT2MsSUFFMUIvRyxLQUFLd0Ysa0JBQW9CLElBQU14RixLQUFLa0csVUFBVUQsT0FBT25CLFNBQVNhLGNBQWMsT0FFaEYsb0JBQ0kzRixLQUFLdUQsVUFBWStDLEVBQWE5QyxTQUM5QnhELEtBQUt3RyxnQ0FDTHhHLEtBQUt1Ryw4Q0FFVCxnQkFDSSxPQUFPdkcsS0FBS00sY0FBYyxjQUU5QixjQUNJLE1BQU8sZUFBZU4sS0FBS21GLFNBR25DeEYsRUFBUThELFFBQVU2QyxFQUNsQkEsRUFBYTVDLElBQU0sZ0JBQ25CNEMsRUFBYTlDLFNBQVcscUhDNUNwQndELEVBQTJCLElBRy9CLFNBQVNDLEVBQW9CQyxHQUU1QixHQUFHRixFQUF5QkUsR0FDM0IsT0FBT0YsRUFBeUJFLEdBQVV2SCxRQUczQyxJQUFJd0gsRUFBU0gsRUFBeUJFLEdBQVksQ0FHakR2SCxRQUFTLElBT1YsT0FIQXlILEVBQW9CRixHQUFVRyxLQUFLRixFQUFPeEgsUUFBU3dILEVBQVFBLEVBQU94SCxRQUFTc0gsR0FHcEVFLEVBQU94SCxRQ2pCZnNILENBQW9CLE0iLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcclxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xyXG5jbGFzcyBCb3Rhb0NhZGFzdHJvSm9nYWRvciBleHRlbmRzIEhUTUxFbGVtZW50IHtcclxuICAgIGNvbnN0cnVjdG9yKCkge1xyXG4gICAgICAgIHN1cGVyKCk7XHJcbiAgICAgICAgdGhpcy5jb25jb3JkYUNvbUZhbHRhRGVQcml2YWNpZGFkZSA9IGZhbHNlO1xyXG4gICAgICAgIHRoaXMuZW1haWxMaW5rID0gQm90YW9DYWRhc3Ryb0pvZ2Fkb3IubGlua0RlRW1haWxJbmljaWFsO1xyXG4gICAgICAgIHRoaXMuaW5pY2lhbGl6YUVzY3V0YUNoZWNrYm94RGVQcml2YWNpZGFkZSA9ICgpID0+IHtcclxuICAgICAgICAgICAgY29uc3QgY2hlY2tib3ggPSAodGhpcy5wYXJlbnRFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCJpbnB1dCNjaWVuY2lhLXByaXZhY2lkYWRlXCIpKTtcclxuICAgICAgICAgICAgY2hlY2tib3gub25jbGljayA9ICgpID0+IHtcclxuICAgICAgICAgICAgICAgIHRoaXMuY29uY29yZGFDb21GYWx0YURlUHJpdmFjaWRhZGUgPSAhdGhpcy5jb25jb3JkYUNvbUZhbHRhRGVQcml2YWNpZGFkZTtcclxuICAgICAgICAgICAgfTtcclxuICAgICAgICB9O1xyXG4gICAgICAgIHRoaXMuaW5pY2lhbGl6YUVzY3V0YURlRW52aW9EZUVtYWlsID0gKCkgPT4ge1xyXG4gICAgICAgICAgICBjb25zdCBib3RhbyA9IHRoaXMucXVlcnlTZWxlY3RvcihcImJ1dHRvbiNlbnZpb1wiKTtcclxuICAgICAgICAgICAgYm90YW8ub25jbGljayA9ICgpID0+IHtcclxuICAgICAgICAgICAgICAgIGlmICh0aGlzLmNvbmNvcmRhQ29tRmFsdGFEZVByaXZhY2lkYWRlICYmXHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy50b3BvRm9ybXVsYXJpby5jaGVja1ZhbGlkaXR5KCkpIHtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLm1vbnRhRW1haWxMaW5rKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2codGhpcy5lbWFpbExpbmspO1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuYWJyZUVtYWlsKCk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH07XHJcbiAgICAgICAgfTtcclxuICAgICAgICB0aGlzLmFicmVFbWFpbCA9ICgpID0+IHtcclxuICAgICAgICAgICAgY29uc3QgYW5jb3JhUGFyYUVtYWlsID0gKHRoaXMucXVlcnlTZWxlY3RvcihcImEjbGluay1lbnZpYS1lbWFpbFwiKSk7XHJcbiAgICAgICAgICAgIGFuY29yYVBhcmFFbWFpbC5ocmVmID0gdGhpcy5lbWFpbExpbms7XHJcbiAgICAgICAgICAgIGFuY29yYVBhcmFFbWFpbC5jbGljaygpO1xyXG4gICAgICAgIH07XHJcbiAgICAgICAgdGhpcy5tb250YUVtYWlsTGluayA9ICgpID0+IHtcclxuICAgICAgICAgICAgdGhpcy5lbWFpbExpbmsgPSBCb3Rhb0NhZGFzdHJvSm9nYWRvci5saW5rRGVFbWFpbEluaWNpYWw7XHJcbiAgICAgICAgICAgIHRoaXMuYWRpY2lvbmFQcmltZWlyb05vbWUoKTtcclxuICAgICAgICAgICAgdGhpcy5hZGljaW9uYVVsdGltb05vbWUoKTtcclxuICAgICAgICAgICAgdGhpcy5hZGljaW9uYVBhaXMoKTtcclxuICAgICAgICAgICAgdGhpcy5hZGljaW9uYUVzdGFkbygpO1xyXG4gICAgICAgICAgICB0aGlzLmFkaWNpb25hQ2lkYWRlKCk7XHJcbiAgICAgICAgICAgIHRoaXMuYWRpY2lvbmFFbWFpbCgpO1xyXG4gICAgICAgICAgICB0aGlzLmFkaWNpb25hVGVsZWZvbmUoKTtcclxuICAgICAgICAgICAgdGhpcy5hZGljaW9uYU5hc2NpbWVudG8oKTtcclxuICAgICAgICAgICAgdGhpcy5hZGljaW9uYU5pdmVsKCk7XHJcbiAgICAgICAgICAgIHRoaXMuYWRpY2lvbmFGb3RvKCk7XHJcbiAgICAgICAgICAgIHRoaXMuYWRpY2lvbmFQZXJmaXNPbmxpbmUoKTtcclxuICAgICAgICAgICAgdGhpcy5hZGljaW9uYVJlZGVzU29jaWFpcygpO1xyXG4gICAgICAgICAgICB0aGlzLmFkaWNpb25hTXNnQW9Nb2RlcmFkb3IoKTtcclxuICAgICAgICAgICAgdGhpcy5hZGljaW9uYU1zZ0RlQWp1ZGFBb01vZGVyYWRvcigpO1xyXG4gICAgICAgIH07XHJcbiAgICAgICAgdGhpcy5hZGljaW9uYVBhcmFncmFmb0hUTUwgPSAoY2FtcG9QcmVlbmNoaWRvKSA9PiBcIjxwPlwiICsgY2FtcG9QcmVlbmNoaWRvICsgXCI8L3A+XCI7XHJcbiAgICAgICAgdGhpcy5hZGljaW9uYVByaW1laXJvTm9tZSA9ICgpID0+IHtcclxuICAgICAgICAgICAgY29uc3QgcHJpbWVpcm9Ob21lSW5wdXQgPSAodGhpcy50b3BvRm9ybXVsYXJpby5xdWVyeVNlbGVjdG9yKFwiaW5wdXQjcHJpbWVpcm8tbm9tZVwiKSk7XHJcbiAgICAgICAgICAgIHRoaXMuZW1haWxMaW5rICs9IHRoaXMuYWRpY2lvbmFQYXJhZ3JhZm9IVE1MKGBQcmltZWlybyBOb21lOiAke3ByaW1laXJvTm9tZUlucHV0LnZhbHVlfWApO1xyXG4gICAgICAgIH07XHJcbiAgICAgICAgdGhpcy5hZGljaW9uYVVsdGltb05vbWUgPSAoKSA9PiB7XHJcbiAgICAgICAgICAgIGNvbnN0IHVsdGltb05vbWVJbnB1dCA9ICh0aGlzLnRvcG9Gb3JtdWxhcmlvLnF1ZXJ5U2VsZWN0b3IoXCJpbnB1dCN1bHRpbW8tbm9tZVwiKSk7XHJcbiAgICAgICAgICAgIHRoaXMuZW1haWxMaW5rICs9IHRoaXMuYWRpY2lvbmFQYXJhZ3JhZm9IVE1MKGDDmmx0aW1vIE5vbWU6ICR7dWx0aW1vTm9tZUlucHV0LnZhbHVlfWApO1xyXG4gICAgICAgIH07XHJcbiAgICAgICAgdGhpcy5hZGljaW9uYVBhaXMgPSAoKSA9PiB7XHJcbiAgICAgICAgICAgIGNvbnN0IHBhaXNJbnB1dCA9ICh0aGlzLnRvcG9Gb3JtdWxhcmlvLnF1ZXJ5U2VsZWN0b3IoXCJpbnB1dCNwYWlzXCIpKTtcclxuICAgICAgICAgICAgdGhpcy5lbWFpbExpbmsgKz0gdGhpcy5hZGljaW9uYVBhcmFncmFmb0hUTUwoYFBhw61zOiAke3BhaXNJbnB1dC52YWx1ZX1gKTtcclxuICAgICAgICB9O1xyXG4gICAgICAgIHRoaXMuYWRpY2lvbmFFc3RhZG8gPSAoKSA9PiB7XHJcbiAgICAgICAgICAgIGNvbnN0IGVzdGFkb0lucHV0ID0gKHRoaXMudG9wb0Zvcm11bGFyaW8ucXVlcnlTZWxlY3RvcihcImlucHV0I2VzdGFkb1wiKSk7XHJcbiAgICAgICAgICAgIHRoaXMuZW1haWxMaW5rICs9IHRoaXMuYWRpY2lvbmFQYXJhZ3JhZm9IVE1MKGBFc3RhZG86ICR7ZXN0YWRvSW5wdXQudmFsdWV9YCk7XHJcbiAgICAgICAgfTtcclxuICAgICAgICB0aGlzLmFkaWNpb25hQ2lkYWRlID0gKCkgPT4ge1xyXG4gICAgICAgICAgICBjb25zdCBjaWRhZGVJbnB1dCA9ICh0aGlzLnRvcG9Gb3JtdWxhcmlvLnF1ZXJ5U2VsZWN0b3IoXCJpbnB1dCNjaWRhZGVcIikpO1xyXG4gICAgICAgICAgICB0aGlzLmVtYWlsTGluayArPSB0aGlzLmFkaWNpb25hUGFyYWdyYWZvSFRNTChgQ2lkYWRlOiAke2NpZGFkZUlucHV0LnZhbHVlfWApO1xyXG4gICAgICAgIH07XHJcbiAgICAgICAgdGhpcy5hZGljaW9uYUVtYWlsID0gKCkgPT4ge1xyXG4gICAgICAgICAgICBjb25zdCBlbWFpbElucHV0ID0gKHRoaXMudG9wb0Zvcm11bGFyaW8ucXVlcnlTZWxlY3RvcihcImlucHV0I2VtYWlsXCIpKTtcclxuICAgICAgICAgICAgdGhpcy5lbWFpbExpbmsgKz0gdGhpcy5hZGljaW9uYVBhcmFncmFmb0hUTUwoYEVtYWlsOiAke2VtYWlsSW5wdXQudmFsdWV9YCk7XHJcbiAgICAgICAgfTtcclxuICAgICAgICB0aGlzLmFkaWNpb25hVGVsZWZvbmUgPSAoKSA9PiB7XHJcbiAgICAgICAgICAgIGNvbnN0IHRlbGVmb25lSW5wdXQgPSAodGhpcy50b3BvRm9ybXVsYXJpby5xdWVyeVNlbGVjdG9yKFwiaW5wdXQjdGVsXCIpKTtcclxuICAgICAgICAgICAgdGhpcy5lbWFpbExpbmsgKz0gdGhpcy5hZGljaW9uYVBhcmFncmFmb0hUTUwoYFRlbGVmb25lOiAke3RlbGVmb25lSW5wdXQudmFsdWV9YCk7XHJcbiAgICAgICAgfTtcclxuICAgICAgICB0aGlzLmFkaWNpb25hTmFzY2ltZW50byA9ICgpID0+IHtcclxuICAgICAgICAgICAgY29uc3QgbmFzY2ltZW50b0lucHV0ID0gKHRoaXMudG9wb0Zvcm11bGFyaW8ucXVlcnlTZWxlY3RvcihcImlucHV0I25hc2NpbWVudG9cIikpO1xyXG4gICAgICAgICAgICB0aGlzLmVtYWlsTGluayArPSB0aGlzLmFkaWNpb25hUGFyYWdyYWZvSFRNTChgRGF0YSBkZSBOYXNjaW1lbnRvOiAke25hc2NpbWVudG9JbnB1dC52YWx1ZX1gKTtcclxuICAgICAgICB9O1xyXG4gICAgICAgIHRoaXMuYWRpY2lvbmFOaXZlbCA9ICgpID0+IHtcclxuICAgICAgICAgICAgY29uc3Qgbml2ZWxJbnB1dCA9ICh0aGlzLnRvcG9Gb3JtdWxhcmlvLnF1ZXJ5U2VsZWN0b3IoXCJpbnB1dCNuaXZlbFwiKSk7XHJcbiAgICAgICAgICAgIHRoaXMuZW1haWxMaW5rICs9IHRoaXMuYWRpY2lvbmFQYXJhZ3JhZm9IVE1MKGBOw612ZWw6ICR7bml2ZWxJbnB1dC52YWx1ZX1gKTtcclxuICAgICAgICB9O1xyXG4gICAgICAgIHRoaXMuYWRpY2lvbmFQZXJmaXNPbmxpbmUgPSAoKSA9PiB7XHJcbiAgICAgICAgICAgIGNvbnN0IHNlcnZpZG9yZXMgPSB0aGlzLnRvcG9Gb3JtdWxhcmlvLnF1ZXJ5U2VsZWN0b3JBbGwoXCJwZXJmaXMtc2Vydmlkb3JlcyBzZWxlY3RcIik7XHJcbiAgICAgICAgICAgIGNvbnN0IHBlcmZpcyA9IHRoaXMudG9wb0Zvcm11bGFyaW8ucXVlcnlTZWxlY3RvckFsbChcInBlcmZpcy1zZXJ2aWRvcmVzIGlucHV0XCIpO1xyXG4gICAgICAgICAgICBsZXQgcGFyU2Vydmlkb3JQZXJmaWwgPSBcIlwiO1xyXG4gICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHNlcnZpZG9yZXMubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgICAgICAgIGNvbnN0IHNlcnZpZG9yID0gc2Vydmlkb3Jlc1tpXS52YWx1ZTtcclxuICAgICAgICAgICAgICAgIGNvbnN0IHBlcmZpbCA9IHBlcmZpc1tpXS52YWx1ZTtcclxuICAgICAgICAgICAgICAgIHBhclNlcnZpZG9yUGVyZmlsICs9IGA8bGk+KCR7c2Vydmlkb3J9LCAke3BlcmZpbH0pPC9saT5gO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHRoaXMuZW1haWxMaW5rICs9IGA8ZGl2PjxwPlBlcmZpcyBPbmxpbmU6PC9wPjxvbD4ke3BhclNlcnZpZG9yUGVyZmlsfTwvb2w+PC9kaXY+YDtcclxuICAgICAgICB9O1xyXG4gICAgICAgIHRoaXMuYWRpY2lvbmFSZWRlc1NvY2lhaXMgPSAoKSA9PiB7XHJcbiAgICAgICAgICAgIGNvbnN0IGVsZW1lbnRvc0RlUmVkZXNTb2NpYWlzID0gdGhpcy50b3BvRm9ybXVsYXJpby5xdWVyeVNlbGVjdG9yQWxsKFwicmVkZXMtc29jaWFpcyBpbnB1dFwiKTtcclxuICAgICAgICAgICAgbGV0IHJlZGVzU29jaWFpcyA9IFwiXCI7XHJcbiAgICAgICAgICAgIGVsZW1lbnRvc0RlUmVkZXNTb2NpYWlzLmZvckVhY2goKHJlZGVTb2NpYWxJbnB1dCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgcmVkZXNTb2NpYWlzICs9IFwiPGxpPlwiICsgcmVkZVNvY2lhbElucHV0LnZhbHVlICsgXCI8L2xpPlwiO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgdGhpcy5lbWFpbExpbmsgKz0gYDxkaXY+PHA+UmVkZXMgU29jaWFpczo8L3A+PG9sPiR7cmVkZXNTb2NpYWlzfTwvb2w+PC9kaXY+YDtcclxuICAgICAgICB9O1xyXG4gICAgICAgIHRoaXMuYWRpY2lvbmFGb3RvID0gKCkgPT4ge1xyXG4gICAgICAgICAgICBjb25zdCBmb3RvSW5wdXQgPSAodGhpcy50b3BvRm9ybXVsYXJpby5xdWVyeVNlbGVjdG9yKFwiaW5wdXQjaW1nLWxpbmtcIikpO1xyXG4gICAgICAgICAgICB0aGlzLmVtYWlsTGluayArPSB0aGlzLmFkaWNpb25hUGFyYWdyYWZvSFRNTChgTGluayBkYSBGb3RvOiAke2ZvdG9JbnB1dC52YWx1ZX1gKTtcclxuICAgICAgICB9O1xyXG4gICAgICAgIHRoaXMuYWRpY2lvbmFNc2dBb01vZGVyYWRvciA9ICgpID0+IHtcclxuICAgICAgICAgICAgY29uc3QgbXNnQW9Nb2RlcmFkb3JUZXh0YXJlYSA9ICh0aGlzLnRvcG9Gb3JtdWxhcmlvLnF1ZXJ5U2VsZWN0b3IoXCJ0ZXh0YXJlYSNtc2ctYW8tbW9kZXJhZG9yXCIpKTtcclxuICAgICAgICAgICAgdGhpcy5lbWFpbExpbmsgKz0gdGhpcy5hZGljaW9uYVBhcmFncmFmb0hUTUwoYE1lbnNhZ2VtIGFvIE1vZGVyYWRvcjogJHttc2dBb01vZGVyYWRvclRleHRhcmVhLnZhbHVlfWApO1xyXG4gICAgICAgIH07XHJcbiAgICAgICAgdGhpcy5hZGljaW9uYU1zZ0RlQWp1ZGFBb01vZGVyYWRvciA9ICgpID0+IHtcclxuICAgICAgICAgICAgdGhpcy5lbWFpbExpbmsgKz0gdGhpcy5hZGljaW9uYVBhcmFncmFmb0hUTUwoYEFvIG1vZGVyYWRvcjogcGFyYSB1bWEgdmlzdWFsaXphw6fDo28gbWFpcyBhZ3JhZMOhdmVsLCBcbiAgICAgIHNhbHZlIG8gdGV4dG8gYWNpbWEgY29tbyB1bSBhcnF1aXZvIEhUTUwgZSBhYnJhLW8gZW0gdW0gYnJvd3Nlci5gKTtcclxuICAgICAgICB9O1xyXG4gICAgfVxyXG4gICAgY29ubmVjdGVkQ2FsbGJhY2soKSB7XHJcbiAgICAgICAgdGhpcy5pbm5lckhUTUwgPSBCb3Rhb0NhZGFzdHJvSm9nYWRvci50ZW1wbGF0ZTtcclxuICAgICAgICB0aGlzLmluaWNpYWxpemFFc2N1dGFDaGVja2JveERlUHJpdmFjaWRhZGUoKTtcclxuICAgICAgICB0aGlzLmluaWNpYWxpemFFc2N1dGFEZUVudmlvRGVFbWFpbCgpO1xyXG4gICAgfVxyXG4gICAgZ2V0IHRvcG9Gb3JtdWxhcmlvKCkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLnBhcmVudEVsZW1lbnQucGFyZW50RWxlbWVudDtcclxuICAgIH1cclxufVxyXG5leHBvcnRzLmRlZmF1bHQgPSBCb3Rhb0NhZGFzdHJvSm9nYWRvcjtcclxuQm90YW9DYWRhc3Ryb0pvZ2Fkb3IudGFnID0gXCJib3Rhby1jYWRhc3Ryby1qb2dhZG9yXCI7XHJcbkJvdGFvQ2FkYXN0cm9Kb2dhZG9yLmVtYWlsRG9Nb2RlcmFkb3IgPSBcInBoaWxpcHBlZmFuYXJvQGdtYWlsLmNvbVwiO1xyXG5Cb3Rhb0NhZGFzdHJvSm9nYWRvci50ZW1wbGF0ZSA9IGBcbiAgICA8YnV0dG9uIHR5cGU9XCJzdWJtaXRcIiBpZD1cImVudmlvXCI+XG4gICAgICA8YSBpZD1cImxpbmstZW52aWEtZW1haWxcIj5FbnZpYXIgRW1haWw8L2E+XG4gICAgPC9idXR0b24+XG4gIGA7XHJcbkJvdGFvQ2FkYXN0cm9Kb2dhZG9yLmxpbmtEZUVtYWlsSW5pY2lhbCA9IGBtYWlsdG86JHtCb3Rhb0NhZGFzdHJvSm9nYWRvci5lbWFpbERvTW9kZXJhZG9yfT9zdWJqZWN0PUNhZGFzdHJvIGRlIEpvZ2Fkb3ImYm9keT1gO1xyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0ptYVd4bElqb2lZMkZrWVhOMGNtOWZhbTluWVdSdmNpNXFjeUlzSW5OdmRYSmpaVkp2YjNRaU9pSWlMQ0p6YjNWeVkyVnpJanBiSWk0dUx5NHVMeTR1THk0dUwyTnZaR2xuYnk5a1lXUnZjeTlxYjJkaFpHOXlaWE12WTJGa1lYTjBjbTlmYW05bllXUnZjaTUwY3lKZExDSnVZVzFsY3lJNlcxMHNJbTFoY0hCcGJtZHpJam9pT3p0QlFVRkJMRTFCUVhGQ0xHOUNRVUZ4UWl4VFFVRlJMRmRCUVZjN1NVRm5Rak5FTzFGQlEwVXNTMEZCU3l4RlFVRkZMRU5CUVVNN1VVRktSaXhyUTBGQk5rSXNSMEZCV1N4TFFVRkxMRU5CUVVNN1VVRkRMME1zWTBGQlV5eEhRVUZYTEc5Q1FVRnZRaXhEUVVGRExHdENRVUZyUWl4RFFVRkRPMUZCVFRWRUxEQkRRVUZ4UXl4SFFVRkhMRWRCUVZNc1JVRkJSVHRaUVVONlJDeE5RVUZOTEZGQlFWRXNSMEZCY1VJc1EwRkRha01zU1VGQlNTeERRVUZETEdGQlFXTXNRMEZCUXl4aFFVRmhMRU5CUVVNc01rSkJRVEpDTEVOQlFVVXNRMEZEYUVVc1EwRkJRenRaUVVOR0xGRkJRVkVzUTBGQlF5eFBRVUZQTEVkQlFVY3NSMEZCVXl4RlFVRkZPMmRDUVVNMVFpeEpRVUZKTEVOQlFVTXNOa0pCUVRaQ0xFZEJRVWNzUTBGQlF5eEpRVUZKTEVOQlFVTXNOa0pCUVRaQ0xFTkJRVU03V1VGRE0wVXNRMEZCUXl4RFFVRkRPMUZCUTBvc1EwRkJReXhEUVVGRE8xRkJVMDBzYlVOQlFUaENMRWRCUVVjc1IwRkJVeXhGUVVGRk8xbEJRMnhFTEUxQlFVMHNTMEZCU3l4SFFVRnpRaXhKUVVGSkxFTkJRVU1zWVVGQllTeERRVUZETEdOQlFXTXNRMEZCUXl4RFFVRkRPMWxCUTNCRkxFdEJRVXNzUTBGQlF5eFBRVUZQTEVkQlFVY3NSMEZCVXl4RlFVRkZPMmRDUVVONlFpeEpRVU5GTEVsQlFVa3NRMEZCUXl3MlFrRkJOa0k3YjBKQlEyeERMRWxCUVVrc1EwRkJReXhqUVVGakxFTkJRVU1zWVVGQllTeEZRVUZGTEVWQlEyNURPMjlDUVVOQkxFbEJRVWtzUTBGQlF5eGpRVUZqTEVWQlFVVXNRMEZCUXp0dlFrRkRkRUlzVDBGQlR5eERRVUZETEVkQlFVY3NRMEZCUXl4SlFVRkpMRU5CUVVNc1UwRkJVeXhEUVVGRExFTkJRVU03YjBKQlF6VkNMRWxCUVVrc1EwRkJReXhUUVVGVExFVkJRVVVzUTBGQlF6dHBRa0ZEYkVJN1dVRkRTQ3hEUVVGRExFTkJRVU03VVVGRFNpeERRVUZETEVOQlFVTTdVVUZGVFN4alFVRlRMRWRCUVVjc1IwRkJVeXhGUVVGRk8xbEJRemRDTEUxQlFVMHNaVUZCWlN4SFFVRnpRaXhEUVVONlF5eEpRVUZKTEVOQlFVTXNZVUZCWVN4RFFVRkRMRzlDUVVGdlFpeERRVUZETEVOQlEzcERMRU5CUVVNN1dVRkRSaXhsUVVGbExFTkJRVU1zU1VGQlNTeEhRVUZITEVsQlFVa3NRMEZCUXl4VFFVRlRMRU5CUVVNN1dVRkRkRU1zWlVGQlpTeERRVUZETEV0QlFVc3NSVUZCUlN4RFFVRkRPMUZCUXpGQ0xFTkJRVU1zUTBGQlF6dFJRVVZOTEcxQ1FVRmpMRWRCUVVjc1IwRkJVeXhGUVVGRk8xbEJRMnhETEVsQlFVa3NRMEZCUXl4VFFVRlRMRWRCUVVjc2IwSkJRVzlDTEVOQlFVTXNhMEpCUVd0Q0xFTkJRVU03V1VGSGVrUXNTVUZCU1N4RFFVRkRMRzlDUVVGdlFpeEZRVUZGTEVOQlFVTTdXVUZETlVJc1NVRkJTU3hEUVVGRExHdENRVUZyUWl4RlFVRkZMRU5CUVVNN1dVRkhNVUlzU1VGQlNTeERRVUZETEZsQlFWa3NSVUZCUlN4RFFVRkRPMWxCUTNCQ0xFbEJRVWtzUTBGQlF5eGpRVUZqTEVWQlFVVXNRMEZCUXp0WlFVTjBRaXhKUVVGSkxFTkJRVU1zWTBGQll5eEZRVUZGTEVOQlFVTTdXVUZIZEVJc1NVRkJTU3hEUVVGRExHRkJRV0VzUlVGQlJTeERRVUZETzFsQlEzSkNMRWxCUVVrc1EwRkJReXhuUWtGQlowSXNSVUZCUlN4RFFVRkRPMWxCUjNoQ0xFbEJRVWtzUTBGQlF5eHJRa0ZCYTBJc1JVRkJSU3hEUVVGRE8xbEJSekZDTEVsQlFVa3NRMEZCUXl4aFFVRmhMRVZCUVVVc1EwRkJRenRaUVVkeVFpeEpRVUZKTEVOQlFVTXNXVUZCV1N4RlFVRkZMRU5CUVVNN1dVRkhjRUlzU1VGQlNTeERRVUZETEc5Q1FVRnZRaXhGUVVGRkxFTkJRVU03V1VGSE5VSXNTVUZCU1N4RFFVRkRMRzlDUVVGdlFpeEZRVUZGTEVOQlFVTTdXVUZITlVJc1NVRkJTU3hEUVVGRExITkNRVUZ6UWl4RlFVRkZMRU5CUVVNN1dVRkhPVUlzU1VGQlNTeERRVUZETERaQ1FVRTJRaXhGUVVGRkxFTkJRVU03VVVGRGRrTXNRMEZCUXl4RFFVRkRPMUZCVFUwc01FSkJRWEZDTEVkQlFVY3NRMEZCUXl4bFFVRjFRaXhGUVVGVkxFVkJRVVVzUTBGRGJFVXNTMEZCU3l4SFFVRkhMR1ZCUVdVc1IwRkJSeXhOUVVGTkxFTkJRVU03VVVGSk0wSXNlVUpCUVc5Q0xFZEJRVWNzUjBGQlV5eEZRVUZGTzFsQlEzaERMRTFCUVUwc2FVSkJRV2xDTEVkQlFYRkNMRU5CUXpGRExFbEJRVWtzUTBGQlF5eGpRVUZqTEVOQlFVTXNZVUZCWVN4RFFVRkRMSEZDUVVGeFFpeERRVUZETEVOQlEzcEVMRU5CUVVNN1dVRkRSaXhKUVVGSkxFTkJRVU1zVTBGQlV5eEpRVUZKTEVsQlFVa3NRMEZCUXl4eFFrRkJjVUlzUTBGRE1VTXNhMEpCUVd0Q0xHbENRVUZwUWl4RFFVRkRMRXRCUVVzc1JVRkJSU3hEUVVNMVF5eERRVUZETzFGQlEwb3NRMEZCUXl4RFFVRkRPMUZCUlUwc2RVSkJRV3RDTEVkQlFVY3NSMEZCVXl4RlFVRkZPMWxCUTNSRExFMUJRVTBzWlVGQlpTeEhRVUZ4UWl4RFFVTjRReXhKUVVGSkxFTkJRVU1zWTBGQll5eERRVUZETEdGQlFXRXNRMEZCUXl4dFFrRkJiVUlzUTBGQlF5eERRVU4yUkN4RFFVRkRPMWxCUTBZc1NVRkJTU3hEUVVGRExGTkJRVk1zU1VGQlNTeEpRVUZKTEVOQlFVTXNjVUpCUVhGQ0xFTkJRekZETEdkQ1FVRm5RaXhsUVVGbExFTkJRVU1zUzBGQlN5eEZRVUZGTEVOQlEzaERMRU5CUVVNN1VVRkRTaXhEUVVGRExFTkJRVU03VVVGSlRTeHBRa0ZCV1N4SFFVRkhMRWRCUVZNc1JVRkJSVHRaUVVOb1F5eE5RVUZOTEZOQlFWTXNSMEZCY1VJc1EwRkRiRU1zU1VGQlNTeERRVUZETEdOQlFXTXNRMEZCUXl4aFFVRmhMRU5CUVVNc1dVRkJXU3hEUVVGRExFTkJRMmhFTEVOQlFVTTdXVUZEUml4SlFVRkpMRU5CUVVNc1UwRkJVeXhKUVVGSkxFbEJRVWtzUTBGQlF5eHhRa0ZCY1VJc1EwRkJReXhUUVVGVExGTkJRVk1zUTBGQlF5eExRVUZMTEVWQlFVVXNRMEZCUXl4RFFVRkRPMUZCUXpORkxFTkJRVU1zUTBGQlF6dFJRVVZOTEcxQ1FVRmpMRWRCUVVjc1IwRkJVeXhGUVVGRk8xbEJRMnhETEUxQlFVMHNWMEZCVnl4SFFVRnhRaXhEUVVOd1F5eEpRVUZKTEVOQlFVTXNZMEZCWXl4RFFVRkRMR0ZCUVdFc1EwRkJReXhqUVVGakxFTkJRVU1zUTBGRGJFUXNRMEZCUXp0WlFVTkdMRWxCUVVrc1EwRkJReXhUUVVGVExFbEJRVWtzU1VGQlNTeERRVUZETEhGQ1FVRnhRaXhEUVVNeFF5eFhRVUZYTEZkQlFWY3NRMEZCUXl4TFFVRkxMRVZCUVVVc1EwRkRMMElzUTBGQlF6dFJRVU5LTEVOQlFVTXNRMEZCUXp0UlFVVk5MRzFDUVVGakxFZEJRVWNzUjBGQlV5eEZRVUZGTzFsQlEyeERMRTFCUVUwc1YwRkJWeXhIUVVGeFFpeERRVU53UXl4SlFVRkpMRU5CUVVNc1kwRkJZeXhEUVVGRExHRkJRV0VzUTBGQlF5eGpRVUZqTEVOQlFVTXNRMEZEYkVRc1EwRkJRenRaUVVOR0xFbEJRVWtzUTBGQlF5eFRRVUZUTEVsQlFVa3NTVUZCU1N4RFFVRkRMSEZDUVVGeFFpeERRVU14UXl4WFFVRlhMRmRCUVZjc1EwRkJReXhMUVVGTExFVkJRVVVzUTBGREwwSXNRMEZCUXp0UlFVTktMRU5CUVVNc1EwRkJRenRSUVVsTkxHdENRVUZoTEVkQlFVY3NSMEZCVXl4RlFVRkZPMWxCUTJwRExFMUJRVTBzVlVGQlZTeEhRVUZ4UWl4RFFVTnVReXhKUVVGSkxFTkJRVU1zWTBGQll5eERRVUZETEdGQlFXRXNRMEZCUXl4aFFVRmhMRU5CUVVNc1EwRkRha1FzUTBGQlF6dFpRVU5HTEVsQlFVa3NRMEZCUXl4VFFVRlRMRWxCUVVrc1NVRkJTU3hEUVVGRExIRkNRVUZ4UWl4RFFVRkRMRlZCUVZVc1ZVRkJWU3hEUVVGRExFdEJRVXNzUlVGQlJTeERRVUZETEVOQlFVTTdVVUZETjBVc1EwRkJReXhEUVVGRE8xRkJSVTBzY1VKQlFXZENMRWRCUVVjc1IwRkJVeXhGUVVGRk8xbEJRM0JETEUxQlFVMHNZVUZCWVN4SFFVRnhRaXhEUVVOMFF5eEpRVUZKTEVOQlFVTXNZMEZCWXl4RFFVRkRMR0ZCUVdFc1EwRkJReXhYUVVGWExFTkJRVU1zUTBGREwwTXNRMEZCUXp0WlFVTkdMRWxCUVVrc1EwRkJReXhUUVVGVExFbEJRVWtzU1VGQlNTeERRVUZETEhGQ1FVRnhRaXhEUVVNeFF5eGhRVUZoTEdGQlFXRXNRMEZCUXl4TFFVRkxMRVZCUVVVc1EwRkRia01zUTBGQlF6dFJRVU5LTEVOQlFVTXNRMEZCUXp0UlFVbE5MSFZDUVVGclFpeEhRVUZITEVkQlFWTXNSVUZCUlR0WlFVTjBReXhOUVVGTkxHVkJRV1VzUjBGQmNVSXNRMEZEZUVNc1NVRkJTU3hEUVVGRExHTkJRV01zUTBGQlF5eGhRVUZoTEVOQlFVTXNhMEpCUVd0Q0xFTkJRVU1zUTBGRGRFUXNRMEZCUXp0WlFVTkdMRWxCUVVrc1EwRkJReXhUUVVGVExFbEJRVWtzU1VGQlNTeERRVUZETEhGQ1FVRnhRaXhEUVVNeFF5eDFRa0ZCZFVJc1pVRkJaU3hEUVVGRExFdEJRVXNzUlVGQlJTeERRVU12UXl4RFFVRkRPMUZCUTBvc1EwRkJReXhEUVVGRE8xRkJTVTBzYTBKQlFXRXNSMEZCUnl4SFFVRlRMRVZCUVVVN1dVRkRha01zVFVGQlRTeFZRVUZWTEVkQlFYRkNMRU5CUTI1RExFbEJRVWtzUTBGQlF5eGpRVUZqTEVOQlFVTXNZVUZCWVN4RFFVRkRMR0ZCUVdFc1EwRkJReXhEUVVOcVJDeERRVUZETzFsQlEwWXNTVUZCU1N4RFFVRkRMRk5CUVZNc1NVRkJTU3hKUVVGSkxFTkJRVU1zY1VKQlFYRkNMRU5CUVVNc1ZVRkJWU3hWUVVGVkxFTkJRVU1zUzBGQlN5eEZRVUZGTEVOQlFVTXNRMEZCUXp0UlFVTTNSU3hEUVVGRExFTkJRVU03VVVGSlRTeDVRa0ZCYjBJc1IwRkJSeXhIUVVGVExFVkJRVVU3V1VGRGVFTXNUVUZCVFN4VlFVRlZMRWRCUVd0RExFbEJRVWtzUTBGQlF5eGpRVUZqTEVOQlFVTXNaMEpCUVdkQ0xFTkJRM0JHTERCQ1FVRXdRaXhEUVVNelFpeERRVUZETzFsQlEwWXNUVUZCVFN4TlFVRk5MRWRCUVdsRExFbEJRVWtzUTBGQlF5eGpRVUZqTEVOQlFVTXNaMEpCUVdkQ0xFTkJReTlGTEhsQ1FVRjVRaXhEUVVNeFFpeERRVUZETzFsQlJVWXNTVUZCU1N4cFFrRkJhVUlzUjBGQlZ5eEZRVUZGTEVOQlFVTTdXVUZEYmtNc1MwRkJTeXhKUVVGSkxFTkJRVU1zUjBGQlJ5eERRVUZETEVWQlFVVXNRMEZCUXl4SFFVRkhMRlZCUVZVc1EwRkJReXhOUVVGTkxFVkJRVVVzUTBGQlF5eEZRVUZGTEVWQlFVVTdaMEpCUXpGRExFMUJRVTBzVVVGQlVTeEhRVUZYTEZWQlFWVXNRMEZCUXl4RFFVRkRMRU5CUVVNc1EwRkJReXhMUVVGTExFTkJRVU03WjBKQlF6ZERMRTFCUVUwc1RVRkJUU3hIUVVGWExFMUJRVTBzUTBGQlF5eERRVUZETEVOQlFVTXNRMEZCUXl4TFFVRkxMRU5CUVVNN1owSkJRM1pETEdsQ1FVRnBRaXhKUVVGSkxGRkJRVkVzVVVGQlVTeExRVUZMTEUxQlFVMHNVVUZCVVN4RFFVRkRPMkZCUXpGRU8xbEJSVVFzU1VGQlNTeERRVUZETEZOQlFWTXNTVUZCU1N4cFEwRkJhVU1zYVVKQlFXbENMR0ZCUVdFc1EwRkJRenRSUVVOd1JpeERRVUZETEVOQlFVTTdVVUZKVFN4NVFrRkJiMElzUjBGQlJ5eEhRVUZUTEVWQlFVVTdXVUZEZUVNc1RVRkJUU3gxUWtGQmRVSXNSMEZCYVVNc1NVRkJTU3hEUVVGRExHTkJRV01zUTBGQlF5eG5Ra0ZCWjBJc1EwRkRhRWNzY1VKQlFYRkNMRU5CUTNSQ0xFTkJRVU03V1VGRlJpeEpRVUZKTEZsQlFWa3NSMEZCVnl4RlFVRkZMRU5CUVVNN1dVRkRPVUlzZFVKQlFYVkNMRU5CUVVNc1QwRkJUeXhEUVVNM1FpeERRVUZETEdWQlFXbERMRVZCUVZFc1JVRkJSVHRuUWtGRE1VTXNXVUZCV1N4SlFVRkpMRTFCUVUwc1IwRkJSeXhsUVVGbExFTkJRVU1zUzBGQlN5eEhRVUZITEU5QlFVOHNRMEZCUXp0WlFVTXpSQ3hEUVVGRExFTkJRMFlzUTBGQlF6dFpRVVZHTEVsQlFVa3NRMEZCUXl4VFFVRlRMRWxCUVVrc2FVTkJRV2xETEZsQlFWa3NZVUZCWVN4RFFVRkRPMUZCUXk5RkxFTkJRVU1zUTBGQlF6dFJRVWxOTEdsQ1FVRlpMRWRCUVVjc1IwRkJVeXhGUVVGRk8xbEJRMmhETEUxQlFVMHNVMEZCVXl4SFFVRnhRaXhEUVVOc1F5eEpRVUZKTEVOQlFVTXNZMEZCWXl4RFFVRkRMR0ZCUVdFc1EwRkJReXhuUWtGQlowSXNRMEZCUXl4RFFVTndSQ3hEUVVGRE8xbEJRMFlzU1VGQlNTeERRVUZETEZOQlFWTXNTVUZCU1N4SlFVRkpMRU5CUVVNc2NVSkJRWEZDTEVOQlF6RkRMR2xDUVVGcFFpeFRRVUZUTEVOQlFVTXNTMEZCU3l4RlFVRkZMRU5CUTI1RExFTkJRVU03VVVGRFNpeERRVUZETEVOQlFVTTdVVUZKVFN3eVFrRkJjMElzUjBGQlJ5eEhRVUZUTEVWQlFVVTdXVUZETVVNc1RVRkJUU3h6UWtGQmMwSXNSMEZCZDBJc1EwRkRiRVFzU1VGQlNTeERRVUZETEdOQlFXTXNRMEZCUXl4aFFVRmhMRU5CUVVNc01rSkJRVEpDTEVOQlFVTXNRMEZETDBRc1EwRkJRenRaUVVOR0xFbEJRVWtzUTBGQlF5eFRRVUZUTEVsQlFVa3NTVUZCU1N4RFFVRkRMSEZDUVVGeFFpeERRVU14UXl3d1FrRkJNRUlzYzBKQlFYTkNMRU5CUVVNc1MwRkJTeXhGUVVGRkxFTkJRM3BFTEVOQlFVTTdVVUZEU2l4RFFVRkRMRU5CUVVNN1VVRkpUU3hyUTBGQk5rSXNSMEZCUnl4SFFVRlRMRVZCUVVVN1dVRkRha1FzU1VGQlNTeERRVUZETEZOQlFWTXNTVUZCU1N4SlFVRkpMRU5CUVVNc2NVSkJRWEZDTEVOQlF6RkRPM1ZGUVVOcFJTeERRVU5zUlN4RFFVRkRPMUZCUTBvc1EwRkJReXhEUVVGRE8wbEJOVTlHTEVOQlFVTTdTVUZYUkN4cFFrRkJhVUk3VVVGRFppeEpRVUZKTEVOQlFVTXNVMEZCVXl4SFFVRkhMRzlDUVVGdlFpeERRVUZETEZGQlFWRXNRMEZCUXp0UlFVVXZReXhKUVVGSkxFTkJRVU1zY1VOQlFYRkRMRVZCUVVVc1EwRkJRenRSUVVNM1F5eEpRVUZKTEVOQlFVTXNPRUpCUVRoQ0xFVkJRVVVzUTBGQlF6dEpRVU40UXl4RFFVRkRPMGxCT0VSRUxFbEJRVmtzWTBGQll6dFJRVU40UWl4UFFVRlBMRWxCUVVrc1EwRkJReXhoUVVGakxFTkJRVU1zWVVGQlowTXNRMEZCUXp0SlFVTTVSQ3hEUVVGRE96dEJRV3hIU0N4MVEwRXJVRU03UVVFNVVHbENMSGRDUVVGSExFZEJRVmNzZDBKQlFYZENMRU5CUVVNN1FVRkZMMElzY1VOQlFXZENMRWRCUVZjc01FSkJRVEJDTEVOQlFVTTdRVUZGZEVRc05rSkJRVkVzUjBGQlZ6czdPenRIUVVreFF5eERRVUZETzBGQlJYTkNMSFZEUVVGclFpeEhRVUZYTEZWQlFWVXNiMEpCUVc5Q0xFTkJRVU1zWjBKQlFXZENMRzlEUVVGdlF5eERRVUZESW4wPSIsIlwidXNlIHN0cmljdFwiO1xyXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XHJcbmV4cG9ydHMuUmFua2luZyA9IGV4cG9ydHMuU2Vydmlkb3IgPSBleHBvcnRzLkVzdGFkbyA9IGV4cG9ydHMuUGFpcyA9IGV4cG9ydHMuUmVkZSA9IHZvaWQgMDtcclxudmFyIFJlZGU7XHJcbihmdW5jdGlvbiAoUmVkZSkge1xyXG4gICAgUmVkZVtcImZhY2Vib29rXCJdID0gXCJGYWNlYm9va1wiO1xyXG4gICAgUmVkZVtcInJlZGRpdFwiXSA9IFwiUmVkZGl0XCI7XHJcbn0pKFJlZGUgPSBleHBvcnRzLlJlZGUgfHwgKGV4cG9ydHMuUmVkZSA9IHt9KSk7XHJcbnZhciBQYWlzO1xyXG4oZnVuY3Rpb24gKFBhaXMpIHtcclxuICAgIFBhaXNbXCJicmFzaWxcIl0gPSBcIkJyYXNpbFwiO1xyXG4gICAgUGFpc1tcInBvcnR1Z2FsXCJdID0gXCJQb3J0dWdhbFwiO1xyXG59KShQYWlzID0gZXhwb3J0cy5QYWlzIHx8IChleHBvcnRzLlBhaXMgPSB7fSkpO1xyXG52YXIgRXN0YWRvO1xyXG4oZnVuY3Rpb24gKEVzdGFkbykge1xyXG4gICAgRXN0YWRvW1wiYWNyZVwiXSA9IFwiQUNcIjtcclxuICAgIEVzdGFkb1tcImFsYWdvYXNcIl0gPSBcIkFMXCI7XHJcbiAgICBFc3RhZG9bXCJhbWFwYVwiXSA9IFwiQVBcIjtcclxuICAgIEVzdGFkb1tcImFtYXpvbmFzXCJdID0gXCJBTVwiO1xyXG4gICAgRXN0YWRvW1wiYmFoaWFcIl0gPSBcIkJBXCI7XHJcbiAgICBFc3RhZG9bXCJjZWFyYVwiXSA9IFwiQ0VcIjtcclxuICAgIEVzdGFkb1tcImRmXCJdID0gXCJERlwiO1xyXG4gICAgRXN0YWRvW1wiZXNcIl0gPSBcIkVTXCI7XHJcbiAgICBFc3RhZG9bXCJnb2lhc1wiXSA9IFwiR09cIjtcclxuICAgIEVzdGFkb1tcIm1hcmFuaGFvXCJdID0gXCJNQVwiO1xyXG4gICAgRXN0YWRvW1wibXRcIl0gPSBcIk1UXCI7XHJcbiAgICBFc3RhZG9bXCJtc1wiXSA9IFwiTVNcIjtcclxuICAgIEVzdGFkb1tcIm1nXCJdID0gXCJNR1wiO1xyXG4gICAgRXN0YWRvW1wicGFyYVwiXSA9IFwiUEFcIjtcclxuICAgIEVzdGFkb1tcInBhcmFpYmFcIl0gPSBcIlBCXCI7XHJcbiAgICBFc3RhZG9bXCJwYXJhbmFcIl0gPSBcIlBSXCI7XHJcbiAgICBFc3RhZG9bXCJwZXJuYW1idWNvXCJdID0gXCJQRVwiO1xyXG4gICAgRXN0YWRvW1wicGlhdWlcIl0gPSBcIlBJXCI7XHJcbiAgICBFc3RhZG9bXCJyaW9cIl0gPSBcIlJKXCI7XHJcbiAgICBFc3RhZG9bXCJyblwiXSA9IFwiUk5cIjtcclxuICAgIEVzdGFkb1tcInJzXCJdID0gXCJSU1wiO1xyXG4gICAgRXN0YWRvW1wicm9uZG9uaWFcIl0gPSBcIlJPXCI7XHJcbiAgICBFc3RhZG9bXCJyb3JhaW1hXCJdID0gXCJSUlwiO1xyXG4gICAgRXN0YWRvW1wic3BcIl0gPSBcIlNQXCI7XHJcbiAgICBFc3RhZG9bXCJzZXJnaXBlXCJdID0gXCJTRVwiO1xyXG4gICAgRXN0YWRvW1widG9jYW50aW5zXCJdID0gXCJUT1wiO1xyXG59KShFc3RhZG8gPSBleHBvcnRzLkVzdGFkbyB8fCAoZXhwb3J0cy5Fc3RhZG8gPSB7fSkpO1xyXG52YXIgU2Vydmlkb3I7XHJcbihmdW5jdGlvbiAoU2Vydmlkb3IpIHtcclxuICAgIFNlcnZpZG9yW1wib2dzXCJdID0gXCJPR1NcIjtcclxuICAgIFNlcnZpZG9yW1wia2dzXCJdID0gXCJLR1NcIjtcclxuICAgIFNlcnZpZG9yW1widHlnZW1cIl0gPSBcIlR5Z2VtXCI7XHJcbiAgICBTZXJ2aWRvcltcIndiYWR1a1wiXSA9IFwiV0JhZHVrXCI7XHJcbiAgICBTZXJ2aWRvcltcImZveHlcIl0gPSBcIkZveCBHb1wiO1xyXG4gICAgU2Vydmlkb3JbXCJjZ3NcIl0gPSBcIkNHU1wiO1xyXG59KShTZXJ2aWRvciA9IGV4cG9ydHMuU2Vydmlkb3IgfHwgKGV4cG9ydHMuU2Vydmlkb3IgPSB7fSkpO1xyXG52YXIgUmFua2luZztcclxuKGZ1bmN0aW9uIChSYW5raW5nKSB7XHJcbiAgICBSYW5raW5nW1JhbmtpbmdbXCJkOVwiXSA9IDMxMDBdID0gXCJkOVwiO1xyXG4gICAgUmFua2luZ1tSYW5raW5nW1wiZDhcIl0gPSAzMDAwXSA9IFwiZDhcIjtcclxuICAgIFJhbmtpbmdbUmFua2luZ1tcImQ3XCJdID0gMjkwMF0gPSBcImQ3XCI7XHJcbiAgICBSYW5raW5nW1JhbmtpbmdbXCJkNlwiXSA9IDI4MDBdID0gXCJkNlwiO1xyXG4gICAgUmFua2luZ1tSYW5raW5nW1wiZDVcIl0gPSAyNzAwXSA9IFwiZDVcIjtcclxuICAgIFJhbmtpbmdbUmFua2luZ1tcImQ0XCJdID0gMjYwMF0gPSBcImQ0XCI7XHJcbiAgICBSYW5raW5nW1JhbmtpbmdbXCJkM1wiXSA9IDI1MDBdID0gXCJkM1wiO1xyXG4gICAgUmFua2luZ1tSYW5raW5nW1wiZDJcIl0gPSAyNDAwXSA9IFwiZDJcIjtcclxuICAgIFJhbmtpbmdbUmFua2luZ1tcImQxXCJdID0gMjMwMF0gPSBcImQxXCI7XHJcbiAgICBSYW5raW5nW1JhbmtpbmdbXCJrMVwiXSA9IDIyMDBdID0gXCJrMVwiO1xyXG4gICAgUmFua2luZ1tSYW5raW5nW1wiazJcIl0gPSAyMTAwXSA9IFwiazJcIjtcclxuICAgIFJhbmtpbmdbUmFua2luZ1tcImszXCJdID0gMjAwMF0gPSBcImszXCI7XHJcbiAgICBSYW5raW5nW1JhbmtpbmdbXCJrNFwiXSA9IDE5MDBdID0gXCJrNFwiO1xyXG4gICAgUmFua2luZ1tSYW5raW5nW1wiazVcIl0gPSAxODAwXSA9IFwiazVcIjtcclxuICAgIFJhbmtpbmdbUmFua2luZ1tcIms2XCJdID0gMTcwMF0gPSBcIms2XCI7XHJcbiAgICBSYW5raW5nW1JhbmtpbmdbXCJrN1wiXSA9IDE2MDBdID0gXCJrN1wiO1xyXG4gICAgUmFua2luZ1tSYW5raW5nW1wiazhcIl0gPSAxNTAwXSA9IFwiazhcIjtcclxuICAgIFJhbmtpbmdbUmFua2luZ1tcIms5XCJdID0gMTQwMF0gPSBcIms5XCI7XHJcbiAgICBSYW5raW5nW1JhbmtpbmdbXCJrMTBcIl0gPSAxMzAwXSA9IFwiazEwXCI7XHJcbiAgICBSYW5raW5nW1JhbmtpbmdbXCJrMTFcIl0gPSAxMjAwXSA9IFwiazExXCI7XHJcbiAgICBSYW5raW5nW1JhbmtpbmdbXCJrMTJcIl0gPSAxMTAwXSA9IFwiazEyXCI7XHJcbiAgICBSYW5raW5nW1JhbmtpbmdbXCJrMTNcIl0gPSAxMDAwXSA9IFwiazEzXCI7XHJcbiAgICBSYW5raW5nW1JhbmtpbmdbXCJrMTRcIl0gPSA5MDBdID0gXCJrMTRcIjtcclxuICAgIFJhbmtpbmdbUmFua2luZ1tcImsxNVwiXSA9IDgwMF0gPSBcImsxNVwiO1xyXG4gICAgUmFua2luZ1tSYW5raW5nW1wiazE2XCJdID0gNzAwXSA9IFwiazE2XCI7XHJcbiAgICBSYW5raW5nW1JhbmtpbmdbXCJrMTdcIl0gPSA2MDBdID0gXCJrMTdcIjtcclxuICAgIFJhbmtpbmdbUmFua2luZ1tcImsxOFwiXSA9IDUwMF0gPSBcImsxOFwiO1xyXG4gICAgUmFua2luZ1tSYW5raW5nW1wiazE5XCJdID0gNDAwXSA9IFwiazE5XCI7XHJcbiAgICBSYW5raW5nW1JhbmtpbmdbXCJrMjBcIl0gPSAzMDBdID0gXCJrMjBcIjtcclxuICAgIFJhbmtpbmdbUmFua2luZ1tcImsyMVwiXSA9IDIwMF0gPSBcImsyMVwiO1xyXG4gICAgUmFua2luZ1tSYW5raW5nW1wiazIyXCJdID0gMTAwXSA9IFwiazIyXCI7XHJcbiAgICBSYW5raW5nW1JhbmtpbmdbXCJrMjNcIl0gPSAwXSA9IFwiazIzXCI7XHJcbiAgICBSYW5raW5nW1JhbmtpbmdbXCJrMjRcIl0gPSAtMTAwXSA9IFwiazI0XCI7XHJcbiAgICBSYW5raW5nW1JhbmtpbmdbXCJrMjVcIl0gPSAtMjAwXSA9IFwiazI1XCI7XHJcbiAgICBSYW5raW5nW1JhbmtpbmdbXCJrMjZcIl0gPSAtMzAwXSA9IFwiazI2XCI7XHJcbiAgICBSYW5raW5nW1JhbmtpbmdbXCJrMjdcIl0gPSAtNDAwXSA9IFwiazI3XCI7XHJcbiAgICBSYW5raW5nW1JhbmtpbmdbXCJrMjhcIl0gPSAtNTAwXSA9IFwiazI4XCI7XHJcbiAgICBSYW5raW5nW1JhbmtpbmdbXCJrMjlcIl0gPSAtNjAwXSA9IFwiazI5XCI7XHJcbiAgICBSYW5raW5nW1JhbmtpbmdbXCJrMzBcIl0gPSAtNzAwXSA9IFwiazMwXCI7XHJcbn0pKFJhbmtpbmcgPSBleHBvcnRzLlJhbmtpbmcgfHwgKGV4cG9ydHMuUmFua2luZyA9IHt9KSk7XHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSm1hV3hsSWpvaWJXOWtaV3h2YzE5cWIyZGhaRzl5WlhNdWFuTWlMQ0p6YjNWeVkyVlNiMjkwSWpvaUlpd2ljMjkxY21ObGN5STZXeUl1TGk4dUxpOHVMaTh1TGk5amIyUnBaMjh2WkdGa2IzTXZhbTluWVdSdmNtVnpMMjF2WkdWc2IzTmZhbTluWVdSdmNtVnpMblJ6SWwwc0ltNWhiV1Z6SWpwYlhTd2liV0Z3Y0dsdVozTWlPaUk3T3p0QlFXMUVRU3hKUVVGWkxFbEJSMWc3UVVGSVJDeFhRVUZaTEVsQlFVazdTVUZEWkN3MlFrRkJjVUlzUTBGQlFUdEpRVU55UWl4NVFrRkJhVUlzUTBGQlFUdEJRVU51UWl4RFFVRkRMRVZCU0Zjc1NVRkJTU3hIUVVGS0xGbEJRVWtzUzBGQlNpeFpRVUZKTEZGQlIyWTdRVUZGUkN4SlFVRlpMRWxCUjFnN1FVRklSQ3hYUVVGWkxFbEJRVWs3U1VGRFpDeDVRa0ZCYVVJc1EwRkJRVHRKUVVOcVFpdzJRa0ZCY1VJc1EwRkJRVHRCUVVOMlFpeERRVUZETEVWQlNGY3NTVUZCU1N4SFFVRktMRmxCUVVrc1MwRkJTaXhaUVVGSkxGRkJSMlk3UVVGRlJDeEpRVUZaTEUxQk1rSllPMEZCTTBKRUxGZEJRVmtzVFVGQlRUdEpRVU5vUWl4eFFrRkJWeXhEUVVGQk8wbEJRMWdzZDBKQlFXTXNRMEZCUVR0SlFVTmtMSE5DUVVGWkxFTkJRVUU3U1VGRFdpeDVRa0ZCWlN4RFFVRkJPMGxCUTJZc2MwSkJRVmtzUTBGQlFUdEpRVU5hTEhOQ1FVRlpMRU5CUVVFN1NVRkRXaXh0UWtGQlV5eERRVUZCTzBsQlExUXNiVUpCUVZNc1EwRkJRVHRKUVVOVUxITkNRVUZaTEVOQlFVRTdTVUZEV2l4NVFrRkJaU3hEUVVGQk8wbEJRMllzYlVKQlFWTXNRMEZCUVR0SlFVTlVMRzFDUVVGVExFTkJRVUU3U1VGRFZDeHRRa0ZCVXl4RFFVRkJPMGxCUTFRc2NVSkJRVmNzUTBGQlFUdEpRVU5ZTEhkQ1FVRmpMRU5CUVVFN1NVRkRaQ3gxUWtGQllTeERRVUZCTzBsQlEySXNNa0pCUVdsQ0xFTkJRVUU3U1VGRGFrSXNjMEpCUVZrc1EwRkJRVHRKUVVOYUxHOUNRVUZWTEVOQlFVRTdTVUZEVml4dFFrRkJVeXhEUVVGQk8wbEJRMVFzYlVKQlFWTXNRMEZCUVR0SlFVTlVMSGxDUVVGbExFTkJRVUU3U1VGRFppeDNRa0ZCWXl4RFFVRkJPMGxCUTJRc2JVSkJRVk1zUTBGQlFUdEpRVU5VTEhkQ1FVRmpMRU5CUVVFN1NVRkRaQ3d3UWtGQlowSXNRMEZCUVR0QlFVTnNRaXhEUVVGRExFVkJNMEpYTEUxQlFVMHNSMEZCVGl4alFVRk5MRXRCUVU0c1kwRkJUU3hSUVRKQ2FrSTdRVUZGUkN4SlFVRlpMRkZCVDFnN1FVRlFSQ3hYUVVGWkxGRkJRVkU3U1VGRGJFSXNkVUpCUVZjc1EwRkJRVHRKUVVOWUxIVkNRVUZYTEVOQlFVRTdTVUZEV0N3eVFrRkJaU3hEUVVGQk8wbEJRMllzTmtKQlFXbENMRU5CUVVFN1NVRkRha0lzTWtKQlFXVXNRMEZCUVR0SlFVTm1MSFZDUVVGWExFTkJRVUU3UVVGRFlpeERRVUZETEVWQlVGY3NVVUZCVVN4SFFVRlNMR2RDUVVGUkxFdEJRVklzWjBKQlFWRXNVVUZQYmtJN1FVRkZSQ3hKUVVGWkxFOUJkME5ZTzBGQmVFTkVMRmRCUVZrc1QwRkJUenRKUVVOcVFpeHZRMEZCVXl4RFFVRkJPMGxCUTFRc2IwTkJRVk1zUTBGQlFUdEpRVU5VTEc5RFFVRlRMRU5CUVVFN1NVRkRWQ3h2UTBGQlV5eERRVUZCTzBsQlExUXNiME5CUVZNc1EwRkJRVHRKUVVOVUxHOURRVUZUTEVOQlFVRTdTVUZEVkN4dlEwRkJVeXhEUVVGQk8wbEJRMVFzYjBOQlFWTXNRMEZCUVR0SlFVTlVMRzlEUVVGVExFTkJRVUU3U1VGRFZDeHZRMEZCVXl4RFFVRkJPMGxCUTFRc2IwTkJRVk1zUTBGQlFUdEpRVU5VTEc5RFFVRlRMRU5CUVVFN1NVRkRWQ3h2UTBGQlV5eERRVUZCTzBsQlExUXNiME5CUVZNc1EwRkJRVHRKUVVOVUxHOURRVUZUTEVOQlFVRTdTVUZEVkN4dlEwRkJVeXhEUVVGQk8wbEJRMVFzYjBOQlFWTXNRMEZCUVR0SlFVTlVMRzlEUVVGVExFTkJRVUU3U1VGRFZDeHpRMEZCVlN4RFFVRkJPMGxCUTFZc2MwTkJRVlVzUTBGQlFUdEpRVU5XTEhORFFVRlZMRU5CUVVFN1NVRkRWaXh6UTBGQlZTeERRVUZCTzBsQlExWXNjVU5CUVZNc1EwRkJRVHRKUVVOVUxIRkRRVUZUTEVOQlFVRTdTVUZEVkN4eFEwRkJVeXhEUVVGQk8wbEJRMVFzY1VOQlFWTXNRMEZCUVR0SlFVTlVMSEZEUVVGVExFTkJRVUU3U1VGRFZDeHhRMEZCVXl4RFFVRkJPMGxCUTFRc2NVTkJRVk1zUTBGQlFUdEpRVU5VTEhGRFFVRlRMRU5CUVVFN1NVRkRWQ3h4UTBGQlV5eERRVUZCTzBsQlExUXNiVU5CUVU4c1EwRkJRVHRKUVVOUUxITkRRVUZWTEVOQlFVRTdTVUZEVml4elEwRkJWU3hEUVVGQk8wbEJRMVlzYzBOQlFWVXNRMEZCUVR0SlFVTldMSE5EUVVGVkxFTkJRVUU3U1VGRFZpeHpRMEZCVlN4RFFVRkJPMGxCUTFZc2MwTkJRVlVzUTBGQlFUdEpRVU5XTEhORFFVRlZMRU5CUVVFN1FVRkRXaXhEUVVGRExFVkJlRU5YTEU5QlFVOHNSMEZCVUN4bFFVRlBMRXRCUVZBc1pVRkJUeXhSUVhkRGJFSWlmUT09IiwiXCJ1c2Ugc3RyaWN0XCI7XHJcbnZhciBfX2ltcG9ydERlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0RGVmYXVsdCkgfHwgZnVuY3Rpb24gKG1vZCkge1xyXG4gICAgcmV0dXJuIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpID8gbW9kIDogeyBcImRlZmF1bHRcIjogbW9kIH07XHJcbn07XHJcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcclxuY29uc3QgY29uZmlndXJhY2FvXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcIi4vaW5mcmEvY29uZmlndXJhY2FvXCIpKTtcclxubmV3IGNvbmZpZ3VyYWNhb18xLmRlZmF1bHQoKTtcclxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKbWFXeGxJam9pYVc1a1pYZ3Vhbk1pTENKemIzVnlZMlZTYjI5MElqb2lJaXdpYzI5MWNtTmxjeUk2V3lJdUxpOHVMaTlqYjJScFoyOHZhVzVrWlhndWRITWlYU3dpYm1GdFpYTWlPbHRkTENKdFlYQndhVzVuY3lJNklqczdPenM3UVVGQlFTeDNSVUZCWjBRN1FVRkZhRVFzU1VGQlNTeHpRa0ZCV1N4RlFVRkZMRU5CUVVNaWZRPT0iLCJcInVzZSBzdHJpY3RcIjtcclxudmFyIF9faW1wb3J0RGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnREZWZhdWx0KSB8fCBmdW5jdGlvbiAobW9kKSB7XHJcbiAgICByZXR1cm4gKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgPyBtb2QgOiB7IFwiZGVmYXVsdFwiOiBtb2QgfTtcclxufTtcclxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xyXG5jb25zdCBjYWRhc3Ryb19qb2dhZG9yXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcIi4uL2RhZG9zL2pvZ2Fkb3Jlcy9jYWRhc3Ryb19qb2dhZG9yXCIpKTtcclxuY29uc3QgbmF2XzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcIi4uL3VpL25hdlwiKSk7XHJcbmNvbnN0IHBlcmZpc19zZXJ2aWRvcmVzXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcIi4uL3VpL3BlcmZpc19zZXJ2aWRvcmVzXCIpKTtcclxuY29uc3QgcmVkZXNfc29jaWFpc18xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCIuLi91aS9yZWRlc19zb2NpYWlzXCIpKTtcclxuY2xhc3MgQ29uZmlndXJhY2FvIHtcclxuICAgIGNvbnN0cnVjdG9yKCkge1xyXG4gICAgICAgIHRoaXMuZGVmaW5lID0gKCkgPT4ge1xyXG4gICAgICAgICAgICBjdXN0b21FbGVtZW50cy5kZWZpbmUobmF2XzEuZGVmYXVsdC50YWcsIG5hdl8xLmRlZmF1bHQpO1xyXG4gICAgICAgICAgICBjdXN0b21FbGVtZW50cy5kZWZpbmUoY2FkYXN0cm9fam9nYWRvcl8xLmRlZmF1bHQudGFnLCBjYWRhc3Ryb19qb2dhZG9yXzEuZGVmYXVsdCk7XHJcbiAgICAgICAgICAgIGN1c3RvbUVsZW1lbnRzLmRlZmluZShyZWRlc19zb2NpYWlzXzEuZGVmYXVsdC50YWcsIHJlZGVzX3NvY2lhaXNfMS5kZWZhdWx0KTtcclxuICAgICAgICAgICAgY3VzdG9tRWxlbWVudHMuZGVmaW5lKHBlcmZpc19zZXJ2aWRvcmVzXzEuZGVmYXVsdC50YWcsIHBlcmZpc19zZXJ2aWRvcmVzXzEuZGVmYXVsdCk7XHJcbiAgICAgICAgfTtcclxuICAgICAgICB0aGlzLnByZXBlbmQgPSAoKSA9PiB7XHJcbiAgICAgICAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwiRE9NQ29udGVudExvYWRlZFwiLCAoXykgPT4gZG9jdW1lbnQuYm9keS5wcmVwZW5kKG5ldyBuYXZfMS5kZWZhdWx0KCkpKTtcclxuICAgICAgICB9O1xyXG4gICAgICAgIHRoaXMuZGVmaW5lKCk7XHJcbiAgICAgICAgdGhpcy5wcmVwZW5kKCk7XHJcbiAgICB9XHJcbn1cclxuZXhwb3J0cy5kZWZhdWx0ID0gQ29uZmlndXJhY2FvO1xyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0ptYVd4bElqb2lZMjl1Wm1sbmRYSmhZMkZ2TG1weklpd2ljMjkxY21ObFVtOXZkQ0k2SWlJc0luTnZkWEpqWlhNaU9sc2lMaTR2TGk0dkxpNHZZMjlrYVdkdkwybHVabkpoTDJOdmJtWnBaM1Z5WVdOaGJ5NTBjeUpkTENKdVlXMWxjeUk2VzEwc0ltMWhjSEJwYm1keklqb2lPenM3T3p0QlFVRkJMREpHUVVGMVJUdEJRVU4yUlN4dlJFRkJhVU03UVVGRGFrTXNaMFpCUVhWRU8wRkJRM1pFTEhkRlFVRXJRenRCUVVVdlF5eE5RVUZ4UWl4WlFVRlpPMGxCUXk5Q08xRkJTMUVzVjBGQlRTeEhRVUZITEVkQlFWTXNSVUZCUlR0WlFVTXhRaXhqUVVGakxFTkJRVU1zVFVGQlRTeERRVUZETEdGQlFWRXNRMEZCUXl4SFFVRkhMRVZCUVVVc1lVRkJVU3hEUVVGRExFTkJRVU03V1VGRE9VTXNZMEZCWXl4RFFVRkRMRTFCUVUwc1EwRkJReXd3UWtGQmIwSXNRMEZCUXl4SFFVRkhMRVZCUVVVc01FSkJRVzlDTEVOQlFVTXNRMEZCUXp0WlFVTjBSU3hqUVVGakxFTkJRVU1zVFVGQlRTeERRVUZETEhWQ1FVRlpMRU5CUVVNc1IwRkJSeXhGUVVGRkxIVkNRVUZaTEVOQlFVTXNRMEZCUXp0WlFVTjBSQ3hqUVVGakxFTkJRVU1zVFVGQlRTeERRVUZETERKQ1FVRm5RaXhEUVVGRExFZEJRVWNzUlVGQlJTd3lRa0ZCWjBJc1EwRkJReXhEUVVGRE8xRkJRMmhGTEVOQlFVTXNRMEZCUXp0UlFVVk5MRmxCUVU4c1IwRkJSeXhIUVVGVExFVkJRVVU3V1VGRE0wSXNUVUZCVFN4RFFVRkRMR2RDUVVGblFpeERRVUZETEd0Q1FVRnJRaXhGUVVGRkxFTkJRVU1zUTBGQlVTeEZRVUZSTEVWQlFVVXNRMEZETjBRc1VVRkJVU3hEUVVGRExFbEJRVWtzUTBGQlF5eFBRVUZQTEVOQlFVTXNTVUZCU1N4aFFVRlJMRVZCUVVVc1EwRkJReXhEUVVOMFF5eERRVUZETzFGQlEwb3NRMEZCUXl4RFFVRkRPMUZCWmtFc1NVRkJTU3hEUVVGRExFMUJRVTBzUlVGQlJTeERRVUZETzFGQlEyUXNTVUZCU1N4RFFVRkRMRTlCUVU4c1JVRkJSU3hEUVVGRE8wbEJRMnBDTEVOQlFVTTdRMEZqUmp0QlFXeENSQ3dyUWtGclFrTWlmUT09IiwiXCJ1c2Ugc3RyaWN0XCI7XHJcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcclxuY2xhc3MgQnJOaGtOYXYgZXh0ZW5kcyBIVE1MRWxlbWVudCB7XHJcbiAgICBjb25zdHJ1Y3RvcigpIHtcclxuICAgICAgICBzdXBlcigpO1xyXG4gICAgfVxyXG4gICAgY29ubmVjdGVkQ2FsbGJhY2soKSB7XHJcbiAgICAgICAgdGhpcy5pbm5lckhUTUwgPSBCck5oa05hdi50ZW1wbGF0ZTtcclxuICAgIH1cclxufVxyXG5leHBvcnRzLmRlZmF1bHQgPSBCck5oa05hdjtcclxuQnJOaGtOYXYudGFnID0gXCJici1uaGstbmF2XCI7XHJcbkJyTmhrTmF2LnRlbXBsYXRlID0gYFxuICAgIDxhIGhyZWY9XCIvXCI+XG4gICAgICA8aDE+QlJBU0lMIE5JSE9OIEtJSU48L2gxPlxuICAgIDwvYT5cbiAgYDtcclxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKbWFXeGxJam9pYm1GMkxtcHpJaXdpYzI5MWNtTmxVbTl2ZENJNklpSXNJbk52ZFhKalpYTWlPbHNpTGk0dkxpNHZMaTR2WTI5a2FXZHZMM1ZwTDI1aGRpNTBjeUpkTENKdVlXMWxjeUk2VzEwc0ltMWhjSEJwYm1keklqb2lPenRCUVVGQkxFMUJRWEZDTEZGQlFWTXNVMEZCVVN4WFFVRlhPMGxCVXk5RE8xRkJRMFVzUzBGQlN5eEZRVUZGTEVOQlFVTTdTVUZEVml4RFFVRkRPMGxCUlVRc2FVSkJRV2xDTzFGQlEyWXNTVUZCU1N4RFFVRkRMRk5CUVZNc1IwRkJSeXhSUVVGUkxFTkJRVU1zVVVGQlVTeERRVUZETzBsQlEzSkRMRU5CUVVNN08wRkJaa2dzTWtKQlowSkRPMEZCWm1sQ0xGbEJRVWNzUjBGQlZ5eFpRVUZaTEVOQlFVTTdRVUZGYmtJc2FVSkJRVkVzUjBGQlZ6czdPenRIUVVreFF5eERRVUZESW4wPSIsIlwidXNlIHN0cmljdFwiO1xyXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XHJcbmNvbnN0IG1vZGVsb3Nfam9nYWRvcmVzXzEgPSByZXF1aXJlKFwiLi4vZGFkb3Mvam9nYWRvcmVzL21vZGVsb3Nfam9nYWRvcmVzXCIpO1xyXG5jbGFzcyBQZXJmaXNTZXJ2aWRvcmVzIGV4dGVuZHMgSFRNTEVsZW1lbnQge1xyXG4gICAgY29uc3RydWN0b3IoKSB7XHJcbiAgICAgICAgc3VwZXIoKTtcclxuICAgICAgICB0aGlzLmluZGV4ID0gMTtcclxuICAgICAgICB0aGlzLmluaWNpYWxpemFFc2N1dGFEZUFkaWNhb0RlQ2FtcG9zID0gKCkgPT4ge1xyXG4gICAgICAgICAgICBjb25zdCBib3Rhb0RlQWRpY2FvRGVDYW1wcyA9ICh0aGlzLnF1ZXJ5U2VsZWN0b3IoXCJidXR0b25cIikpO1xyXG4gICAgICAgICAgICBib3Rhb0RlQWRpY2FvRGVDYW1wcy5vbmNsaWNrID0gKF8pID0+IHRoaXMuYWRpY2lvbmFTZXJ2aWRvcmVzKCk7XHJcbiAgICAgICAgfTtcclxuICAgICAgICB0aGlzLmFkaWNpb25hU2Vydmlkb3JlcyA9ICgpID0+IHtcclxuICAgICAgICAgICAgdGhpcy5hZGljaW9uYVNlcnZpZG9yZXNEcm9wRG93bigpO1xyXG4gICAgICAgICAgICB0aGlzLmFkaWNpb25hUGVyZmlsSW5wdXQoKTtcclxuICAgICAgICAgICAgdGhpcy5hZGljaW9uYUxpbmVCcmVhaygpO1xyXG4gICAgICAgICAgICB0aGlzLmluZGV4Kys7XHJcbiAgICAgICAgfTtcclxuICAgICAgICB0aGlzLmFkaWNpb25hU2Vydmlkb3Jlc0Ryb3BEb3duID0gKCkgPT4ge1xyXG4gICAgICAgICAgICBjb25zdCBkcm9wZG93bklEID0gYHNlcnZpZG9yLWRyb3Bkb3duLSR7dGhpcy5pbmRleH1gO1xyXG4gICAgICAgICAgICBjb25zdCBzZWxlY3QgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic2VsZWN0XCIpO1xyXG4gICAgICAgICAgICBzZWxlY3QuaWQgPSBkcm9wZG93bklEO1xyXG4gICAgICAgICAgICBzZWxlY3QubmFtZSA9IGRyb3Bkb3duSUQ7XHJcbiAgICAgICAgICAgIE9iamVjdC52YWx1ZXMobW9kZWxvc19qb2dhZG9yZXNfMS5TZXJ2aWRvcikuZm9yRWFjaCgoc2Vydmlkb3IpID0+IHtcclxuICAgICAgICAgICAgICAgIGNvbnN0IG9wdGlvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJvcHRpb25cIik7XHJcbiAgICAgICAgICAgICAgICBvcHRpb24udmFsdWUgPSBzZXJ2aWRvcjtcclxuICAgICAgICAgICAgICAgIG9wdGlvbi5pbm5lckhUTUwgPSBzZXJ2aWRvcjtcclxuICAgICAgICAgICAgICAgIHNlbGVjdC5hcHBlbmQob3B0aW9uKTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIHRoaXMuY2FtcG9zRGl2LmFwcGVuZChzZWxlY3QpO1xyXG4gICAgICAgIH07XHJcbiAgICAgICAgdGhpcy5hZGljaW9uYVBlcmZpbElucHV0ID0gKCkgPT4ge1xyXG4gICAgICAgICAgICBjb25zdCBjYW1wb0RlUGVyZmlsSUQgPSBgc2Vydmlkb3Itbmlja25hbWUtJHt0aGlzLmluZGV4fWA7XHJcbiAgICAgICAgICAgIGNvbnN0IG5vdm9DYW1wb0RlUGVyZmlsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImlucHV0XCIpO1xyXG4gICAgICAgICAgICBub3ZvQ2FtcG9EZVBlcmZpbC50eXBlID0gXCJ0ZXh0XCI7XHJcbiAgICAgICAgICAgIG5vdm9DYW1wb0RlUGVyZmlsLm5hbWUgPSBjYW1wb0RlUGVyZmlsSUQ7XHJcbiAgICAgICAgICAgIG5vdm9DYW1wb0RlUGVyZmlsLmlkID0gY2FtcG9EZVBlcmZpbElEO1xyXG4gICAgICAgICAgICB0aGlzLmNhbXBvc0Rpdi5hcHBlbmQobm92b0NhbXBvRGVQZXJmaWwpO1xyXG4gICAgICAgIH07XHJcbiAgICAgICAgdGhpcy5hZGljaW9uYUxpbmVCcmVhayA9ICgpID0+IHRoaXMuY2FtcG9zRGl2LmFwcGVuZChkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYnJcIikpO1xyXG4gICAgfVxyXG4gICAgY29ubmVjdGVkQ2FsbGJhY2soKSB7XHJcbiAgICAgICAgdGhpcy5pbm5lckhUTUwgPSBQZXJmaXNTZXJ2aWRvcmVzLnRlbXBsYXRlO1xyXG4gICAgICAgIHRoaXMuYWRpY2lvbmFTZXJ2aWRvcmVzKCk7XHJcbiAgICAgICAgdGhpcy5pbmljaWFsaXphRXNjdXRhRGVBZGljYW9EZUNhbXBvcygpO1xyXG4gICAgfVxyXG4gICAgZ2V0IGNhbXBvc0RpdigpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5xdWVyeVNlbGVjdG9yKFwiZGl2I2NhbXBvc1wiKTtcclxuICAgIH1cclxufVxyXG5leHBvcnRzLmRlZmF1bHQgPSBQZXJmaXNTZXJ2aWRvcmVzO1xyXG5QZXJmaXNTZXJ2aWRvcmVzLnRhZyA9IFwicGVyZmlzLXNlcnZpZG9yZXNcIjtcclxuUGVyZmlzU2Vydmlkb3Jlcy50ZW1wbGF0ZSA9IGBcbiAgICA8ZGl2IGlkPVwiY2FtcG9zXCI+PC9kaXY+XG5cbiAgICA8YnV0dG9uIHR5cGU9XCJidXR0b25cIiBpZD1cImFkaWNpb25hLWNhbXBvLWRlLXBlcmZpbC1zZXJ2aWRvclwiPis8L2J1dHRvbj5cbiAgYDtcclxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKbWFXeGxJam9pY0dWeVptbHpYM05sY25acFpHOXlaWE11YW5NaUxDSnpiM1Z5WTJWU2IyOTBJam9pSWl3aWMyOTFjbU5sY3lJNld5SXVMaTh1TGk4dUxpOWpiMlJwWjI4dmRXa3ZjR1Z5Wm1selgzTmxjblpwWkc5eVpYTXVkSE1pWFN3aWJtRnRaWE1pT2x0ZExDSnRZWEJ3YVc1bmN5STZJanM3UVVGQlFTdzBSVUZCWjBVN1FVRkZhRVVzVFVGQmNVSXNaMEpCUVdsQ0xGTkJRVkVzVjBGQlZ6dEpRVk4yUkR0UlFVTkZMRXRCUVVzc1JVRkJSU3hEUVVGRE8xRkJSMFlzVlVGQlN5eEhRVUZYTEVOQlFVTXNRMEZCUXp0UlFWVnNRaXh4UTBGQlowTXNSMEZCUnl4SFFVRlRMRVZCUVVVN1dVRkRjRVFzVFVGQlRTeHZRa0ZCYjBJc1IwRkJlVU1zUTBGRGFrVXNTVUZCU1N4RFFVRkRMR0ZCUVdFc1EwRkJReXhSUVVGUkxFTkJRVU1zUTBGRE4wSXNRMEZCUXp0WlFVVkdMRzlDUVVGdlFpeERRVUZETEU5QlFVOHNSMEZCUnl4RFFVRkRMRU5CUVdFc1JVRkJVU3hGUVVGRkxFTkJRM0pFTEVsQlFVa3NRMEZCUXl4clFrRkJhMElzUlVGQlJTeERRVUZETzFGQlF6bENMRU5CUVVNc1EwRkJRenRSUVUxTkxIVkNRVUZyUWl4SFFVRkhMRWRCUVZNc1JVRkJSVHRaUVVOMFF5eEpRVUZKTEVOQlFVTXNNRUpCUVRCQ0xFVkJRVVVzUTBGQlF6dFpRVU5zUXl4SlFVRkpMRU5CUVVNc2JVSkJRVzFDTEVWQlFVVXNRMEZCUXp0WlFVTXpRaXhKUVVGSkxFTkJRVU1zYVVKQlFXbENMRVZCUVVVc1EwRkJRenRaUVVWNlFpeEpRVUZKTEVOQlFVTXNTMEZCU3l4RlFVRkZMRU5CUVVNN1VVRkRaaXhEUVVGRExFTkJRVU03VVVGRlRTd3JRa0ZCTUVJc1IwRkJSeXhIUVVGVExFVkJRVVU3V1VGRE9VTXNUVUZCVFN4VlFVRlZMRWRCUVZjc2NVSkJRWEZDTEVsQlFVa3NRMEZCUXl4TFFVRkxMRVZCUVVVc1EwRkJRenRaUVVVM1JDeE5RVUZOTEUxQlFVMHNSMEZCYzBJc1VVRkJVU3hEUVVGRExHRkJRV0VzUTBGQlF5eFJRVUZSTEVOQlFVTXNRMEZCUXp0WlFVTnVSU3hOUVVGTkxFTkJRVU1zUlVGQlJTeEhRVUZITEZWQlFWVXNRMEZCUXp0WlFVTjJRaXhOUVVGTkxFTkJRVU1zU1VGQlNTeEhRVUZITEZWQlFWVXNRMEZCUXp0WlFVVjZRaXhOUVVGTkxFTkJRVU1zVFVGQlRTeERRVUZETERSQ1FVRlJMRU5CUVVNc1EwRkJReXhQUVVGUExFTkJRVU1zUTBGQlF5eFJRVUZyUWl4RlFVRlJMRVZCUVVVN1owSkJRek5FTEUxQlFVMHNUVUZCVFN4SFFVRnpRaXhSUVVGUkxFTkJRVU1zWVVGQllTeERRVUZETEZGQlFWRXNRMEZCUXl4RFFVRkRPMmRDUVVOdVJTeE5RVUZOTEVOQlFVTXNTMEZCU3l4SFFVRkhMRkZCUVZFc1EwRkJRenRuUWtGRGVFSXNUVUZCVFN4RFFVRkRMRk5CUVZNc1IwRkJSeXhSUVVGUkxFTkJRVU03WjBKQlJUVkNMRTFCUVUwc1EwRkJReXhOUVVGTkxFTkJRVU1zVFVGQlRTeERRVUZETEVOQlFVTTdXVUZEZUVJc1EwRkJReXhEUVVGRExFTkJRVU03V1VGRlNDeEpRVUZKTEVOQlFVTXNVMEZCVXl4RFFVRkRMRTFCUVUwc1EwRkJReXhOUVVGTkxFTkJRVU1zUTBGQlF6dFJRVU5vUXl4RFFVRkRMRU5CUVVNN1VVRkZUU3gzUWtGQmJVSXNSMEZCUnl4SFFVRlRMRVZCUVVVN1dVRkRka01zVFVGQlRTeGxRVUZsTEVkQlFWY3NjVUpCUVhGQ0xFbEJRVWtzUTBGQlF5eExRVUZMTEVWQlFVVXNRMEZCUXp0WlFVVnNSU3hOUVVGTkxHbENRVUZwUWl4SFFVRnhRaXhSUVVGUkxFTkJRVU1zWVVGQllTeERRVUZETEU5QlFVOHNRMEZCUXl4RFFVRkRPMWxCUXpWRkxHbENRVUZwUWl4RFFVRkRMRWxCUVVrc1IwRkJSeXhOUVVGTkxFTkJRVU03V1VGRGFFTXNhVUpCUVdsQ0xFTkJRVU1zU1VGQlNTeEhRVUZITEdWQlFXVXNRMEZCUXp0WlFVTjZReXhwUWtGQmFVSXNRMEZCUXl4RlFVRkZMRWRCUVVjc1pVRkJaU3hEUVVGRE8xbEJSWFpETEVsQlFVa3NRMEZCUXl4VFFVRlRMRU5CUVVNc1RVRkJUU3hEUVVGRExHbENRVUZwUWl4RFFVRkRMRU5CUVVNN1VVRkRNME1zUTBGQlF5eERRVUZETzFGQlJVMHNjMEpCUVdsQ0xFZEJRVWNzUjBGQlV5eEZRVUZGTEVOQlEzSkRMRWxCUVVrc1EwRkJReXhUUVVGVExFTkJRVU1zVFVGQlRTeERRVUZETEZGQlFWRXNRMEZCUXl4aFFVRmhMRU5CUVVNc1NVRkJTU3hEUVVGRExFTkJRVU1zUTBGQlF6dEpRUzlFZEVRc1EwRkJRenRKUVVsRUxHbENRVUZwUWp0UlFVTm1MRWxCUVVrc1EwRkJReXhUUVVGVExFZEJRVWNzWjBKQlFXZENMRU5CUVVNc1VVRkJVU3hEUVVGRE8xRkJSVE5ETEVsQlFVa3NRMEZCUXl4clFrRkJhMElzUlVGQlJTeERRVUZETzFGQlJURkNMRWxCUVVrc1EwRkJReXhuUTBGQlowTXNSVUZCUlN4RFFVRkRPMGxCUXpGRExFTkJRVU03U1VGWFJDeEpRVUZaTEZOQlFWTTdVVUZEYmtJc1QwRkJkVUlzU1VGQlNTeERRVUZETEdGQlFXRXNRMEZCUXl4WlFVRlpMRU5CUVVNc1EwRkJRenRKUVVNeFJDeERRVUZET3p0QlFXeERTQ3h0UTBFeVJVTTdRVUV4UldsQ0xHOUNRVUZITEVkQlFWY3NiVUpCUVcxQ0xFTkJRVU03UVVGRk1VSXNlVUpCUVZFc1IwRkJWenM3T3p0SFFVa3hReXhEUVVGREluMD0iLCJcInVzZSBzdHJpY3RcIjtcclxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xyXG5jbGFzcyBSZWRlc1NvY2lhaXMgZXh0ZW5kcyBIVE1MRWxlbWVudCB7XHJcbiAgICBjb25zdHJ1Y3RvcigpIHtcclxuICAgICAgICBzdXBlcigpO1xyXG4gICAgICAgIHRoaXMuaW5kZXggPSAxO1xyXG4gICAgICAgIHRoaXMuaW5pY2lhbGl6YUVzY3V0YURlQWRpY2FvRGVDYW1wb0RlUmVkZVNvY2lhbCA9ICgpID0+IHtcclxuICAgICAgICAgICAgY29uc3QgYm90YW9EZUFkaWNhb0RlQ2FtcG8gPSAodGhpcy5xdWVyeVNlbGVjdG9yKFwiYnV0dG9uI2FkaWNpb25hLWNhbXBvLWRlLXJlZGUtc29jaWFsXCIpKTtcclxuICAgICAgICAgICAgYm90YW9EZUFkaWNhb0RlQ2FtcG8ub25jbGljayA9IChfKSA9PiB0aGlzLmFkaWNpb25hTm92b0NhbXBvRGVSZWRlU29jaWFsKCk7XHJcbiAgICAgICAgfTtcclxuICAgICAgICB0aGlzLmFkaWNpb25hTm92b0NhbXBvRGVSZWRlU29jaWFsID0gKCkgPT4ge1xyXG4gICAgICAgICAgICB0aGlzLmFkaWNpb25hTGVnZW5kYSgpO1xyXG4gICAgICAgICAgICB0aGlzLmFkaWNpb25hTm92b0NhbXBvKCk7XHJcbiAgICAgICAgICAgIHRoaXMuYWRpY2lvbmFMaW5lQnJlYWsoKTtcclxuICAgICAgICAgICAgdGhpcy5pbmRleCsrO1xyXG4gICAgICAgIH07XHJcbiAgICAgICAgdGhpcy5hZGljaW9uYUxlZ2VuZGEgPSAoKSA9PiB7XHJcbiAgICAgICAgICAgIGNvbnN0IG5vdmFMZWdlbmRhID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImxhYmVsXCIpO1xyXG4gICAgICAgICAgICBub3ZhTGVnZW5kYS5zZXRBdHRyaWJ1dGUoXCJmb3JcIiwgdGhpcy5jYW1wb0lEKTtcclxuICAgICAgICAgICAgbm92YUxlZ2VuZGEuaW5uZXJUZXh0ID0gYFJlZGUgU29jaWFsICMke3RoaXMuaW5kZXh9YDtcclxuICAgICAgICAgICAgdGhpcy5jYW1wb3NEaXYuYXBwZW5kKG5vdmFMZWdlbmRhKTtcclxuICAgICAgICB9O1xyXG4gICAgICAgIHRoaXMuYWRpY2lvbmFOb3ZvQ2FtcG8gPSAoKSA9PiB7XHJcbiAgICAgICAgICAgIGNvbnN0IG5vdm9DYW1wbyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJpbnB1dFwiKTtcclxuICAgICAgICAgICAgbm92b0NhbXBvLnR5cGUgPSBcInVybFwiO1xyXG4gICAgICAgICAgICBub3ZvQ2FtcG8ubmFtZSA9IHRoaXMuY2FtcG9JRDtcclxuICAgICAgICAgICAgbm92b0NhbXBvLmlkID0gdGhpcy5jYW1wb0lEO1xyXG4gICAgICAgICAgICB0aGlzLmNhbXBvc0Rpdi5hcHBlbmQobm92b0NhbXBvKTtcclxuICAgICAgICB9O1xyXG4gICAgICAgIHRoaXMuYWRpY2lvbmFMaW5lQnJlYWsgPSAoKSA9PiB0aGlzLmNhbXBvc0Rpdi5hcHBlbmQoZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImJyXCIpKTtcclxuICAgIH1cclxuICAgIGNvbm5lY3RlZENhbGxiYWNrKCkge1xyXG4gICAgICAgIHRoaXMuaW5uZXJIVE1MID0gUmVkZXNTb2NpYWlzLnRlbXBsYXRlO1xyXG4gICAgICAgIHRoaXMuYWRpY2lvbmFOb3ZvQ2FtcG9EZVJlZGVTb2NpYWwoKTtcclxuICAgICAgICB0aGlzLmluaWNpYWxpemFFc2N1dGFEZUFkaWNhb0RlQ2FtcG9EZVJlZGVTb2NpYWwoKTtcclxuICAgIH1cclxuICAgIGdldCBjYW1wb3NEaXYoKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMucXVlcnlTZWxlY3RvcihcImRpdiNjYW1wb3NcIik7XHJcbiAgICB9XHJcbiAgICBnZXQgY2FtcG9JRCgpIHtcclxuICAgICAgICByZXR1cm4gYHJlZGUtc29jaWFsLSR7dGhpcy5pbmRleH1gO1xyXG4gICAgfVxyXG59XHJcbmV4cG9ydHMuZGVmYXVsdCA9IFJlZGVzU29jaWFpcztcclxuUmVkZXNTb2NpYWlzLnRhZyA9IFwicmVkZXMtc29jaWFpc1wiO1xyXG5SZWRlc1NvY2lhaXMudGVtcGxhdGUgPSBgXG4gICAgPGRpdiBpZD1cImNhbXBvc1wiPjwvZGl2PlxuICAgIFxuICAgIDxidXR0b24gdHlwZT1cImJ1dHRvblwiIGlkPVwiYWRpY2lvbmEtY2FtcG8tZGUtcmVkZS1zb2NpYWxcIj4rPC9idXR0b24+XG4gIGA7XHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSm1hV3hsSWpvaWNtVmtaWE5mYzI5amFXRnBjeTVxY3lJc0luTnZkWEpqWlZKdmIzUWlPaUlpTENKemIzVnlZMlZ6SWpwYklpNHVMeTR1THk0dUwyTnZaR2xuYnk5MWFTOXlaV1JsYzE5emIyTnBZV2x6TG5SeklsMHNJbTVoYldWeklqcGJYU3dpYldGd2NHbHVaM01pT2lJN08wRkJRVUVzVFVGQmNVSXNXVUZCWVN4VFFVRlJMRmRCUVZjN1NVRlhia1E3VVVGRFJTeExRVUZMTEVWQlFVVXNRMEZCUXp0UlFVaEdMRlZCUVVzc1IwRkJWeXhEUVVGRExFTkJRVU03VVVGamJFSXNaMFJCUVRKRExFZEJRVWNzUjBGQlV5eEZRVUZGTzFsQlF5OUVMRTFCUVUwc2IwSkJRVzlDTEVkQlFYTkNMRU5CUXpsRExFbEJRVWtzUTBGQlF5eGhRVUZoTEVOQlFVTXNjME5CUVhORExFTkJRVU1zUTBGRE0wUXNRMEZCUXp0WlFVVkdMRzlDUVVGdlFpeERRVUZETEU5QlFVOHNSMEZCUnl4RFFVRkRMRU5CUVdFc1JVRkJVU3hGUVVGRkxFTkJRM0pFTEVsQlFVa3NRMEZCUXl3MlFrRkJOa0lzUlVGQlJTeERRVUZETzFGQlEzcERMRU5CUVVNc1EwRkJRenRSUVZWTkxHdERRVUUyUWl4SFFVRkhMRWRCUVZNc1JVRkJSVHRaUVVOcVJDeEpRVUZKTEVOQlFVTXNaVUZCWlN4RlFVRkZMRU5CUVVNN1dVRkRka0lzU1VGQlNTeERRVUZETEdsQ1FVRnBRaXhGUVVGRkxFTkJRVU03V1VGRGVrSXNTVUZCU1N4RFFVRkRMR2xDUVVGcFFpeEZRVUZGTEVOQlFVTTdXVUZGZWtJc1NVRkJTU3hEUVVGRExFdEJRVXNzUlVGQlJTeERRVUZETzFGQlEyWXNRMEZCUXl4RFFVRkRPMUZCUlUwc2IwSkJRV1VzUjBGQlJ5eEhRVUZUTEVWQlFVVTdXVUZEYmtNc1RVRkJUU3hYUVVGWExFZEJRWEZDTEZGQlFWRXNRMEZCUXl4aFFVRmhMRU5CUVVNc1QwRkJUeXhEUVVGRExFTkJRVU03V1VGRGRFVXNWMEZCVnl4RFFVRkRMRmxCUVZrc1EwRkJReXhMUVVGTExFVkJRVVVzU1VGQlNTeERRVUZETEU5QlFVOHNRMEZCUXl4RFFVRkRPMWxCUXpsRExGZEJRVmNzUTBGQlF5eFRRVUZUTEVkQlFVY3NaMEpCUVdkQ0xFbEJRVWtzUTBGQlF5eExRVUZMTEVWQlFVVXNRMEZCUXp0WlFVVnlSQ3hKUVVGSkxFTkJRVU1zVTBGQlV5eERRVUZETEUxQlFVMHNRMEZCUXl4WFFVRlhMRU5CUVVNc1EwRkJRenRSUVVOeVF5eERRVUZETEVOQlFVTTdVVUZGVFN4elFrRkJhVUlzUjBGQlJ5eEhRVUZUTEVWQlFVVTdXVUZEY2tNc1RVRkJUU3hUUVVGVExFZEJRWEZDTEZGQlFWRXNRMEZCUXl4aFFVRmhMRU5CUVVNc1QwRkJUeXhEUVVGRExFTkJRVU03V1VGRGNFVXNVMEZCVXl4RFFVRkRMRWxCUVVrc1IwRkJSeXhMUVVGTExFTkJRVU03V1VGRGRrSXNVMEZCVXl4RFFVRkRMRWxCUVVrc1IwRkJSeXhKUVVGSkxFTkJRVU1zVDBGQlR5eERRVUZETzFsQlF6bENMRk5CUVZNc1EwRkJReXhGUVVGRkxFZEJRVWNzU1VGQlNTeERRVUZETEU5QlFVOHNRMEZCUXp0WlFVVTFRaXhKUVVGSkxFTkJRVU1zVTBGQlV5eERRVUZETEUxQlFVMHNRMEZCUXl4VFFVRlRMRU5CUVVNc1EwRkJRenRSUVVOdVF5eERRVUZETEVOQlFVTTdVVUZGVFN4elFrRkJhVUlzUjBGQlJ5eEhRVUZUTEVWQlFVVXNRMEZEY2tNc1NVRkJTU3hEUVVGRExGTkJRVk1zUTBGQlF5eE5RVUZOTEVOQlFVTXNVVUZCVVN4RFFVRkRMR0ZCUVdFc1EwRkJReXhKUVVGSkxFTkJRVU1zUTBGQlF5eERRVUZETzBsQmNrUjBSQ3hEUVVGRE8wbEJSVVFzYVVKQlFXbENPMUZCUTJZc1NVRkJTU3hEUVVGRExGTkJRVk1zUjBGQlJ5eFpRVUZaTEVOQlFVTXNVVUZCVVN4RFFVRkRPMUZCUlhaRExFbEJRVWtzUTBGQlF5dzJRa0ZCTmtJc1JVRkJSU3hEUVVGRE8xRkJSWEpETEVsQlFVa3NRMEZCUXl3eVEwRkJNa01zUlVGQlJTeERRVUZETzBsQlEzSkVMRU5CUVVNN1NVRlhSQ3hKUVVGWkxGTkJRVk03VVVGRGJrSXNUMEZCZFVJc1NVRkJTU3hEUVVGRExHRkJRV0VzUTBGQlF5eFpRVUZaTEVOQlFVTXNRMEZCUXp0SlFVTXhSQ3hEUVVGRE8wbEJSVVFzU1VGQldTeFBRVUZQTzFGQlEycENMRTlCUVU4c1pVRkJaU3hKUVVGSkxFTkJRVU1zUzBGQlN5eEZRVUZGTEVOQlFVTTdTVUZEY2tNc1EwRkJRenM3UVVGMFEwZ3NLMEpCYlVWRE8wRkJiRVZwUWl4blFrRkJSeXhIUVVGWExHVkJRV1VzUTBGQlF6dEJRVVYwUWl4eFFrRkJVU3hIUVVGWE96czdPMGRCU1RGRExFTkJRVU1pZlE9PSIsIi8vIFRoZSBtb2R1bGUgY2FjaGVcbnZhciBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18gPSB7fTtcblxuLy8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbmZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG5cdGlmKF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF0pIHtcblx0XHRyZXR1cm4gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXS5leHBvcnRzO1xuXHR9XG5cdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG5cdHZhciBtb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdID0ge1xuXHRcdC8vIG5vIG1vZHVsZS5pZCBuZWVkZWRcblx0XHQvLyBubyBtb2R1bGUubG9hZGVkIG5lZWRlZFxuXHRcdGV4cG9ydHM6IHt9XG5cdH07XG5cblx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG5cdF9fd2VicGFja19tb2R1bGVzX19bbW9kdWxlSWRdLmNhbGwobW9kdWxlLmV4cG9ydHMsIG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG5cdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG5cdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbn1cblxuIiwiLy8gc3RhcnR1cFxuLy8gTG9hZCBlbnRyeSBtb2R1bGVcbi8vIFRoaXMgZW50cnkgbW9kdWxlIGlzIHJlZmVyZW5jZWQgYnkgb3RoZXIgbW9kdWxlcyBzbyBpdCBjYW4ndCBiZSBpbmxpbmVkXG5fX3dlYnBhY2tfcmVxdWlyZV9fKDQ1Myk7XG4iXSwic291cmNlUm9vdCI6IiJ9