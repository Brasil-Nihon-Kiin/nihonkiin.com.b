(()=>{"use strict";var e={276:(e,i)=>{Object.defineProperty(i,"__esModule",{value:!0});class t extends HTMLElement{constructor(){super(),this.concordaComFaltaDePrivacidade=!1,this.emailLink=t.linkDeEmailInicial,this.inicializaEscutaCheckboxDePrivacidade=()=>{this.parentElement.querySelector("input#ciencia-privacidade").onclick=()=>{this.concordaComFaltaDePrivacidade=!this.concordaComFaltaDePrivacidade}},this.inicializaEscutaDeEnvioDeEmail=()=>{this.querySelector("button#envio").onclick=()=>{this.concordaComFaltaDePrivacidade&&(this.montaEmailLink(),console.log(this.emailLink),this.abreEmail())}},this.abreEmail=()=>{const e=this.querySelector("a#link-envia-email");e.href=this.emailLink,e.click()},this.montaEmailLink=()=>{this.emailLink=t.linkDeEmailInicial,this.adicionaPrimeiroNome(),this.adicionaUltimoNome()},this.adicionaPrimeiroNome=()=>{const e=this.parentElement.parentElement.querySelector("input#primeiro-nome");this.emailLink+=`<p>Primeiro Nome: ${e.value}</p>`},this.adicionaUltimoNome=()=>{const e=this.parentElement.parentElement.querySelector("input#ultimo-nome");this.emailLink+=`<p>Ultimo Nome: ${e.value}</p>`}}connectedCallback(){this.innerHTML=t.template,this.inicializaEscutaCheckboxDePrivacidade(),this.inicializaEscutaDeEnvioDeEmail()}}i.default=t,t.tag="botao-cadastro-jogador",t.emailDoModerador="philippefanaro@gmail.com",t.template='\n    <button type="button" id="envio">\n      <a id="link-envia-email">Enviar Email</a>\n    </button>\n  ',t.linkDeEmailInicial=`mailto:${t.emailDoModerador}?subject=Cadastro de Jogador&body=`},453:function(e,i,t){var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(i,"__esModule",{value:!0}),new(a(t(697)).default)},697:function(e,i,t){var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(i,"__esModule",{value:!0});const n=a(t(276)),o=a(t(430));i.default=class{constructor(){this.define=()=>{customElements.define(o.default.tag,o.default),customElements.define(n.default.tag,n.default)},this.prepend=()=>{window.addEventListener("DOMContentLoaded",(e=>document.body.prepend(new o.default)))},this.define(),this.prepend()}}},430:(e,i)=>{Object.defineProperty(i,"__esModule",{value:!0});class t extends HTMLElement{constructor(){super()}connectedCallback(){this.innerHTML=t.template}}i.default=t,t.tag="br-nhk-nav",t.template='\n    <a href="/">\n      <h1>BRASIL NIHON KIIN</h1>\n    </a>\n  '}},i={};!function t(a){if(i[a])return i[a].exports;var n=i[a]={exports:{}};return e[a].call(n.exports,n,n.exports,t),n.exports}(453)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,