(()=>{"use strict";var i={276:(i,e)=>{Object.defineProperty(e,"__esModule",{value:!0});class a extends HTMLElement{constructor(){super(),this.concordaComFaltaDePrivacidade=!1,this.assunto=a.assuntoDeEmailInicial,this.emailLink=a.linkDeEmailInicial,this.inicializaEscutaCheckboxDePrivacidade=()=>{this.parentElement.querySelector("input#ciencia-privacidade").onclick=()=>{this.concordaComFaltaDePrivacidade=!this.concordaComFaltaDePrivacidade}},this.inicializaEscutaDeEnvioDeEmail=()=>{this.querySelector("button#envio").onclick=()=>{this.concordaComFaltaDePrivacidade&&this.topoFormulario.checkValidity()&&(this.montaEmailLink(),this.emailLink+=this.assunto,this.abreEmail())}},this.abreEmail=()=>{const i=this.querySelector("a#link-envia-email");i.href=this.emailLink,i.click()},this.montaEmailLink=()=>{this.emailLink=a.linkDeEmailInicial,this.assunto=a.assuntoDeEmailInicial,this.adicionaPrimeiroNome(),this.adicionaUltimoNome(),this.adicionaPais(),this.adicionaEstado(),this.adicionaCidade(),this.adicionaEmail(),this.adicionaTelefone(),this.adicionaNascimento(),this.adicionaNivel(),this.adicionaFoto(),this.adicionaPerfisOnline(),this.adicionaRedesSociais(),this.adicionaMsgAoModerador(),this.adicionaMsgDeAjudaAoModerador()},this.adicionaParagrafoHTML=i=>"<p>"+i+"</p>",this.adicionaPrimeiroNome=()=>{const i=this.topoFormulario.querySelector("input#primeiro-nome");this.emailLink+=this.adicionaParagrafoHTML(`Primeiro Nome: ${i.value}`),this.assunto+=i.value},this.adicionaUltimoNome=()=>{const i=this.topoFormulario.querySelector("input#ultimo-nome");this.emailLink+=this.adicionaParagrafoHTML(`Último Nome: ${i.value}`),this.assunto+=" "+i.value},this.adicionaPais=()=>{const i=this.topoFormulario.querySelector("input#pais");this.emailLink+=this.adicionaParagrafoHTML(`País: ${i.value}`)},this.adicionaEstado=()=>{const i=this.topoFormulario.querySelector("input#estado");this.emailLink+=this.adicionaParagrafoHTML(`Estado: ${i.value}`)},this.adicionaCidade=()=>{const i=this.topoFormulario.querySelector("input#cidade");this.emailLink+=this.adicionaParagrafoHTML(`Cidade: ${i.value}`)},this.adicionaEmail=()=>{const i=this.topoFormulario.querySelector("input#email");this.emailLink+=this.adicionaParagrafoHTML(`Email: ${i.value}`)},this.adicionaTelefone=()=>{const i=this.topoFormulario.querySelector("input#tel");this.emailLink+=this.adicionaParagrafoHTML(`Telefone: ${i.value}`)},this.adicionaNascimento=()=>{const i=this.topoFormulario.querySelector("input#nascimento");this.emailLink+=this.adicionaParagrafoHTML(`Data de Nascimento: ${i.value}`)},this.adicionaNivel=()=>{const i=this.topoFormulario.querySelector("input#nivel");this.emailLink+=this.adicionaParagrafoHTML(`Nível: ${i.value}`)},this.adicionaPerfisOnline=()=>{const i=this.topoFormulario.querySelectorAll("perfis-servidores select"),e=this.topoFormulario.querySelectorAll("perfis-servidores input");let a="";for(let t=0;t<i.length;t++)a+=`<li>(${i[t].value}, ${e[t].value})</li>`;this.emailLink+=`<div><p>Perfis Online:</p><ol>${a}</ol></div>`},this.adicionaRedesSociais=()=>{const i=this.topoFormulario.querySelectorAll("redes-sociais input");let e="";i.forEach((i=>{e+="<li>"+i.value+"</li>"})),this.emailLink+=`<div><p>Redes Sociais:</p><ol>${e}</ol></div>`},this.adicionaFoto=()=>{const i=this.topoFormulario.querySelector("input#img-link");this.emailLink+=this.adicionaParagrafoHTML(`Link da Foto: ${i.value}`)},this.adicionaMsgAoModerador=()=>{const i=this.topoFormulario.querySelector("textarea#msg-ao-moderador");this.emailLink+=this.adicionaParagrafoHTML(`Mensagem ao Moderador: ${i.value}`)},this.adicionaMsgDeAjudaAoModerador=()=>{this.emailLink+=this.adicionaParagrafoHTML("Ao moderador: para uma visualização mais agradável, salve o texto acima como um arquivo HTML e abra-o em um browser.")}}connectedCallback(){this.innerHTML=a.template,this.inicializaEscutaCheckboxDePrivacidade(),this.inicializaEscutaDeEnvioDeEmail()}get topoFormulario(){return this.parentElement.parentElement}}e.default=a,a.tag="botao-cadastro-jogador",a.emailDoModerador="philippefanaro@gmail.com",a.template='\n    <button type="submit" id="envio">\n      <a id="link-envia-email">Enviar Email</a>\n    </button>\n  ',a.linkDeEmailInicial=`mailto:${a.emailDoModerador}?body=`,a.assuntoDeEmailInicial="&subject=Cadastro de Jogador: "},477:(i,e,a)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.jogadoresDB=void 0;const t=a(786);e.jogadoresDB=[{nome:"Philippe Fanaro",pais:t.Pais.brasil,estado:t.Estado.sp,cidade:"São Paulo",contato:{email:"philippefanaro@gmail.com",telefone:5511970286739},nascimento:Date.UTC(1992,5,27),elo:2300,foto:new URL("https://imgur.com/gallery/YtxsVTy"),perfis:[{servidor:t.Servidor.ogs,nome:"psygo"},{servidor:t.Servidor.kgs,nome:"psygo"}],social:[{rede:t.Rede.facebook,perfil:new URL("https://facebook.com/philippe.fanaro")}],professor_certificado:!0}]},786:(i,e)=>{var a,t,o,n,s;Object.defineProperty(e,"__esModule",{value:!0}),e.Ranking=e.Servidor=e.Estado=e.Pais=e.Rede=void 0,(s=e.Rede||(e.Rede={})).facebook="Facebook",s.reddit="Reddit",(n=e.Pais||(e.Pais={})).brasil="Brasil",n.portugal="Portugal",(o=e.Estado||(e.Estado={})).acre="AC",o.alagoas="AL",o.amapa="AP",o.amazonas="AM",o.bahia="BA",o.ceara="CE",o.df="DF",o.es="ES",o.goias="GO",o.maranhao="MA",o.mt="MT",o.ms="MS",o.mg="MG",o.para="PA",o.paraiba="PB",o.parana="PR",o.pernambuco="PE",o.piaui="PI",o.rio="RJ",o.rn="RN",o.rs="RS",o.rondonia="RO",o.roraima="RR",o.sp="SP",o.sergipe="SE",o.tocantins="TO",(t=e.Servidor||(e.Servidor={})).ogs="OGS",t.kgs="KGS",t.tygem="Tygem",t.wbaduk="WBaduk",t.foxy="Fox Go",t.cgs="CGS",(a=e.Ranking||(e.Ranking={}))[a.d9=3100]="d9",a[a.d8=3e3]="d8",a[a.d7=2900]="d7",a[a.d6=2800]="d6",a[a.d5=2700]="d5",a[a.d4=2600]="d4",a[a.d3=2500]="d3",a[a.d2=2400]="d2",a[a.d1=2300]="d1",a[a.k1=2200]="k1",a[a.k2=2100]="k2",a[a.k3=2e3]="k3",a[a.k4=1900]="k4",a[a.k5=1800]="k5",a[a.k6=1700]="k6",a[a.k7=1600]="k7",a[a.k8=1500]="k8",a[a.k9=1400]="k9",a[a.k10=1300]="k10",a[a.k11=1200]="k11",a[a.k12=1100]="k12",a[a.k13=1e3]="k13",a[a.k14=900]="k14",a[a.k15=800]="k15",a[a.k16=700]="k16",a[a.k17=600]="k17",a[a.k18=500]="k18",a[a.k19=400]="k19",a[a.k20=300]="k20",a[a.k21=200]="k21",a[a.k22=100]="k22",a[a.k23=0]="k23",a[a.k24=-100]="k24",a[a.k25=-200]="k25",a[a.k26=-300]="k26",a[a.k27=-400]="k27",a[a.k28=-500]="k28",a[a.k29=-600]="k29",a[a.k30=-700]="k30"},453:function(i,e,a){var t=this&&this.__importDefault||function(i){return i&&i.__esModule?i:{default:i}};Object.defineProperty(e,"__esModule",{value:!0}),new(t(a(697)).default)},697:function(i,e,a){var t=this&&this.__importDefault||function(i){return i&&i.__esModule?i:{default:i}};Object.defineProperty(e,"__esModule",{value:!0});const o=t(a(276)),n=t(a(430)),s=t(a(728)),d=t(a(917)),r=t(a(367));e.default=class{constructor(){this.define=()=>{customElements.define(n.default.tag,n.default),customElements.define(o.default.tag,o.default),customElements.define(d.default.tag,d.default),customElements.define(s.default.tag,s.default),customElements.define(r.default.tag,r.default)},this.prepend=()=>{window.addEventListener("DOMContentLoaded",(i=>document.body.prepend(new n.default)))},this.define(),this.prepend()}}},430:(i,e)=>{Object.defineProperty(e,"__esModule",{value:!0});class a extends HTMLElement{constructor(){super()}connectedCallback(){this.innerHTML=a.template}}e.default=a,a.tag="br-nhk-nav",a.template='\n    <a href="/">\n      <h1>BRASIL NIHON KIIN</h1>\n    </a>\n  '},728:(i,e,a)=>{Object.defineProperty(e,"__esModule",{value:!0});const t=a(786);class o extends HTMLElement{constructor(){super(),this.index=1,this.inicializaEscutaDeAdicaoDeCampos=()=>{this.querySelector("button").onclick=i=>this.adicionaServidores()},this.adicionaServidores=()=>{this.adicionaServidoresDropDown(),this.adicionaPerfilInput(),this.adicionaLineBreak(),this.index++},this.adicionaServidoresDropDown=()=>{const i=`servidor-dropdown-${this.index}`,e=document.createElement("select");e.id=i,e.name=i,Object.values(t.Servidor).forEach((i=>{const a=document.createElement("option");a.value=i,a.innerHTML=i,e.append(a)})),this.camposDiv.append(e)},this.adicionaPerfilInput=()=>{const i=`servidor-nickname-${this.index}`,e=document.createElement("input");e.type="text",e.name=i,e.id=i,this.camposDiv.append(e)},this.adicionaLineBreak=()=>this.camposDiv.append(document.createElement("br"))}connectedCallback(){this.innerHTML=o.template,this.adicionaServidores(),this.inicializaEscutaDeAdicaoDeCampos()}get camposDiv(){return this.querySelector("div#campos")}}e.default=o,o.tag="perfis-servidores",o.template='\n    <div id="campos"></div>\n\n    <button type="button" id="adiciona-campo-de-perfil-servidor">+</button>\n  '},917:(i,e)=>{Object.defineProperty(e,"__esModule",{value:!0});class a extends HTMLElement{constructor(){super(),this.index=1,this.inicializaEscutaDeAdicaoDeCampoDeRedeSocial=()=>{this.querySelector("button#adiciona-campo-de-rede-social").onclick=i=>this.adicionaNovoCampoDeRedeSocial()},this.adicionaNovoCampoDeRedeSocial=()=>{this.adicionaLegenda(),this.adicionaNovoCampo(),this.adicionaLineBreak(),this.index++},this.adicionaLegenda=()=>{const i=document.createElement("label");i.setAttribute("for",this.campoID),i.innerText=`Rede Social #${this.index}`,this.camposDiv.append(i)},this.adicionaNovoCampo=()=>{const i=document.createElement("input");i.type="url",i.name=this.campoID,i.id=this.campoID,this.camposDiv.append(i)},this.adicionaLineBreak=()=>this.camposDiv.append(document.createElement("br"))}connectedCallback(){this.innerHTML=a.template,this.adicionaNovoCampoDeRedeSocial(),this.inicializaEscutaDeAdicaoDeCampoDeRedeSocial()}get camposDiv(){return this.querySelector("div#campos")}get campoID(){return`rede-social-${this.index}`}}e.default=a,a.tag="redes-sociais",a.template='\n    <div id="campos"></div>\n    \n    <button type="button" id="adiciona-campo-de-rede-social">+</button>\n  '},367:(i,e,a)=>{Object.defineProperty(e,"__esModule",{value:!0});const t=a(477);class o extends HTMLElement{constructor(){super(),this.jogadorAtual=o.jogadores[0],this.linhaAtual=document.createElement("tr"),this.adicionaCelulaNome=()=>{const i=document.createElement("td");i.innerHTML=this.jogadorAtual.nome,this.linhaAtual.append(i)},this.adicionaCelulaPais=()=>{const i=document.createElement("td");i.innerHTML=this.jogadorAtual.pais,this.linhaAtual.append(i)},this.adicionaCelulaEstado=()=>{const i=document.createElement("td");i.innerHTML=this.jogadorAtual.estado,this.linhaAtual.append(i)},this.adicionaCelulaCidade=()=>{const i=document.createElement("td");i.innerHTML=this.jogadorAtual.cidade,this.linhaAtual.append(i)}}connectedCallback(){this.innerHTML=o.template;const i=this.querySelector("tbody");o.jogadores.forEach((e=>{this.jogadorAtual=e,this.linhaAtual=document.createElement("tr"),this.adicionaCelulaNome(),this.adicionaCelulaPais(),this.adicionaCelulaEstado(),this.adicionaCelulaCidade(),i.append(this.linhaAtual)}))}}e.default=o,o.tag="tabela-jogadores",o.template="\n    <table>\n      <thead>\n        <th>Nome</th>\n        <th>País</th>\n        <th>Estado</th>\n        <th>Cidade</th>\n      </thead>\n      <tbody></tbody>\n    </table>\n  ",o.jogadores=t.jogadoresDB}},e={};!function a(t){if(e[t])return e[t].exports;var o=e[t]={exports:{}};return i[t].call(o.exports,o,o.exports,a),o.exports}(453)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,