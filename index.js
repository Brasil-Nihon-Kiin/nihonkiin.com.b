(()=>{"use strict";var i={276:(i,e)=>{Object.defineProperty(e,"__esModule",{value:!0});class a extends HTMLElement{constructor(){super(),this.concordaComFaltaDePrivacidade=!1,this.emailLink=a.linkDeEmailInicial,this.inicializaEscutaCheckboxDePrivacidade=()=>{this.parentElement.querySelector("input#ciencia-privacidade").onclick=()=>{this.concordaComFaltaDePrivacidade=!this.concordaComFaltaDePrivacidade}},this.inicializaEscutaDeEnvioDeEmail=()=>{this.querySelector("button#envio").onclick=()=>{this.concordaComFaltaDePrivacidade&&this.topoFormulario.checkValidity()&&(this.montaEmailLink(),console.log(this.emailLink),this.abreEmail())}},this.abreEmail=()=>{const i=this.querySelector("a#link-envia-email");i.href=this.emailLink,i.click()},this.montaEmailLink=()=>{this.emailLink=a.linkDeEmailInicial,this.adicionaPrimeiroNome(),this.adicionaUltimoNome(),this.adicionaPais(),this.adicionaEstado(),this.adicionaCidade(),this.adicionaEmail(),this.adicionaTelefone(),this.adicionaNascimento(),this.adicionaNivel(),this.adicionaFoto(),this.adicionaMsgAoModerador()},this.adicionaParagrafoHTML=i=>"<p>"+i+"</p>",this.adicionaPrimeiroNome=()=>{const i=this.topoFormulario.querySelector("input#primeiro-nome");this.emailLink+=this.adicionaParagrafoHTML(`Primeiro Nome: ${i.value}`)},this.adicionaUltimoNome=()=>{const i=this.topoFormulario.querySelector("input#ultimo-nome");this.emailLink+=this.adicionaParagrafoHTML(`Último Nome: ${i.value}`)},this.adicionaPais=()=>{const i=this.topoFormulario.querySelector("input#pais");this.emailLink+=this.adicionaParagrafoHTML(`País: ${i.value}`)},this.adicionaEstado=()=>{const i=this.topoFormulario.querySelector("input#estado");this.emailLink+=this.adicionaParagrafoHTML(`Estado: ${i.value}`)},this.adicionaCidade=()=>{const i=this.topoFormulario.querySelector("input#cidade");this.emailLink+=this.adicionaParagrafoHTML(`Cidade: ${i.value}`)},this.adicionaEmail=()=>{const i=this.topoFormulario.querySelector("input#email");this.emailLink+=this.adicionaParagrafoHTML(`Email: ${i.value}`)},this.adicionaTelefone=()=>{const i=this.topoFormulario.querySelector("input#tel");this.emailLink+=this.adicionaParagrafoHTML(`Telefone: ${i.value}`)},this.adicionaNascimento=()=>{const i=this.topoFormulario.querySelector("input#nascimento");this.emailLink+=this.adicionaParagrafoHTML(`Data de Nascimento: ${i.value}`)},this.adicionaNivel=()=>{const i=this.topoFormulario.querySelector("input#nivel");this.emailLink+=this.adicionaParagrafoHTML(`Nível: ${i.value}`)},this.adicionaFoto=()=>{const i=this.topoFormulario.querySelector("input#img-link");this.emailLink+=this.adicionaParagrafoHTML(`Link da Foto: ${i.value}`)},this.adicionaMsgAoModerador=()=>{const i=this.topoFormulario.querySelector("textarea#msg-ao-moderador");this.emailLink+=this.adicionaParagrafoHTML(`Mensagem ao Moderador: ${i.value}`)}}connectedCallback(){this.innerHTML=a.template,this.inicializaEscutaCheckboxDePrivacidade(),this.inicializaEscutaDeEnvioDeEmail()}get topoFormulario(){return this.parentElement.parentElement}}e.default=a,a.tag="botao-cadastro-jogador",a.emailDoModerador="philippefanaro@gmail.com",a.template='\n    <button type="submit" id="envio">\n      <a id="link-envia-email">Enviar Email</a>\n    </button>\n  ',a.linkDeEmailInicial=`mailto:${a.emailDoModerador}?subject=Cadastro de Jogador&body=`},453:function(i,e,a){var t=this&&this.__importDefault||function(i){return i&&i.__esModule?i:{default:i}};Object.defineProperty(e,"__esModule",{value:!0}),new(t(a(697)).default)},697:function(i,e,a){var t=this&&this.__importDefault||function(i){return i&&i.__esModule?i:{default:i}};Object.defineProperty(e,"__esModule",{value:!0});const o=t(a(276)),n=t(a(430)),r=t(a(917));e.default=class{constructor(){this.define=()=>{customElements.define(n.default.tag,n.default),customElements.define(o.default.tag,o.default),customElements.define(r.default.tag,r.default)},this.prepend=()=>{window.addEventListener("DOMContentLoaded",(i=>document.body.prepend(new n.default)))},this.define(),this.prepend()}}},430:(i,e)=>{Object.defineProperty(e,"__esModule",{value:!0});class a extends HTMLElement{constructor(){super()}connectedCallback(){this.innerHTML=a.template}}e.default=a,a.tag="br-nhk-nav",a.template='\n    <a href="/">\n      <h1>BRASIL NIHON KIIN</h1>\n    </a>\n  '},917:(i,e)=>{Object.defineProperty(e,"__esModule",{value:!0});class a extends HTMLElement{constructor(){super(),this.index=1,this.inicializaEscutaDeAdicaoDeCampoDeRedeSocial=()=>{this.querySelector("button#adiciona-campo-de-rede-social").onclick=i=>this.adicionaNovoCampoDeRedeSocial()},this.adicionaNovoCampoDeRedeSocial=()=>{this.index++;const i=`rede-social-${this.index}`,e=document.createElement("label");e.setAttribute("for",i),e.innerText=`Rede Social #${this.index}`;const a=document.createElement("input");a.type="url",a.name=i,a.id=i;const t=this.querySelector("div#campos");t.append(document.createElement("br")),t.append(e),t.append(a)}}connectedCallback(){this.innerHTML=a.template,this.inicializaEscutaDeAdicaoDeCampoDeRedeSocial()}}e.default=a,a.tag="redes-sociais",a.template='\n    <div id="campos">\n      <label for="rede-social-1">Rede Social #1</label>\n      <input type="url" name="rede-social-1" id="rede-social-1" />\n    </div>\n    \n    <button type="button" id="adiciona-campo-de-rede-social">+</button>\n  '}},e={};!function a(t){if(e[t])return e[t].exports;var o=e[t]={exports:{}};return i[t].call(o.exports,o,o.exports,a),o.exports}(453)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,