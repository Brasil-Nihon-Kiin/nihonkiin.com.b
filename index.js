(()=>{"use strict";var e={276:(e,i)=>{Object.defineProperty(i,"__esModule",{value:!0});class a extends HTMLElement{constructor(){super(),this.concordaComFaltaDePrivacidade=!1,this.assunto=a.assuntoDeEmailInicial,this.emailLink=a.linkDeEmailInicial,this.inicializaEscutaCheckboxDePrivacidade=()=>{this.parentElement.querySelector("input#ciencia-privacidade").onclick=()=>{this.concordaComFaltaDePrivacidade=!this.concordaComFaltaDePrivacidade}},this.inicializaEscutaDeEnvioDeEmail=()=>{this.querySelector("button#envio").onclick=()=>{this.concordaComFaltaDePrivacidade&&this.topoFormulario.checkValidity()&&(this.montaEmailLink(),this.abreEmail())}},this.abreEmail=()=>{const e=this.querySelector("a#link-envia-email");e.href=this.emailLink,e.click()},this.montaEmailLink=()=>{this.emailLink=a.linkDeEmailInicial,this.assunto=a.assuntoDeEmailInicial,this.adicionaPrimeiroNome(),this.adicionaUltimoNome(),this.adicionaPais(),this.adicionaEstado(),this.adicionaCidade(),this.adicionaEmail(),this.adicionaTelefone(),this.adicionaNascimento(),this.adicionaNivel(),this.adicionaFoto(),this.adicionaPerfisOnline(),this.adicionaRedesSociais(),this.adicionaMsgAoModerador(),this.adicionaMsgDeAjudaAoModerador(),this.emailLink+=this.assunto},this.adicionaParagrafoHTML=e=>"<p>"+e+"</p>",this.adicionaPrimeiroNome=()=>{const e=this.topoFormulario.querySelector("input#primeiro-nome");this.emailLink+=this.adicionaParagrafoHTML(`Primeiro Nome: ${e.value}`),this.assunto+=e.value},this.adicionaUltimoNome=()=>{const e=this.topoFormulario.querySelector("input#ultimo-nome");this.emailLink+=this.adicionaParagrafoHTML(`Último Nome: ${e.value}`),this.assunto+=" "+e.value},this.adicionaPais=()=>{const e=this.topoFormulario.querySelector("input#pais");this.emailLink+=this.adicionaParagrafoHTML(`País: ${e.value}`)},this.adicionaEstado=()=>{const e=this.topoFormulario.querySelector("input#estado");this.emailLink+=this.adicionaParagrafoHTML(`Estado: ${e.value}`)},this.adicionaCidade=()=>{const e=this.topoFormulario.querySelector("input#cidade");this.emailLink+=this.adicionaParagrafoHTML(`Cidade: ${e.value}`)},this.adicionaEmail=()=>{const e=this.topoFormulario.querySelector("input#email");this.emailLink+=this.adicionaParagrafoHTML(`Email: ${e.value}`)},this.adicionaTelefone=()=>{const e=this.topoFormulario.querySelector("input#tel");this.emailLink+=this.adicionaParagrafoHTML(`Telefone: ${e.value}`)},this.adicionaNascimento=()=>{const e=this.topoFormulario.querySelector("input#nascimento");this.emailLink+=this.adicionaParagrafoHTML(`Data de Nascimento: ${e.value}`)},this.adicionaNivel=()=>{const e=this.topoFormulario.querySelector("input#nivel");this.emailLink+=this.adicionaParagrafoHTML(`Nível: ${e.value}`)},this.adicionaPerfisOnline=()=>{const e=this.topoFormulario.querySelectorAll("perfis-servidores select"),i=this.topoFormulario.querySelectorAll("perfis-servidores input");let a="";for(let t=0;t<e.length;t++)a+=`<li>(${e[t].value}, ${i[t].value})</li>`;this.emailLink+=`<div><p>Perfis Online:</p><ol>${a}</ol></div>`},this.adicionaRedesSociais=()=>{const e=this.topoFormulario.querySelectorAll("redes-sociais input");let i="";e.forEach((e=>{i+="<li>"+e.value+"</li>"})),this.emailLink+=`<div><p>Redes Sociais:</p><ol>${i}</ol></div>`},this.adicionaFoto=()=>{const e=this.topoFormulario.querySelector("input#img-link");this.emailLink+=this.adicionaParagrafoHTML(`Link da Foto: ${e.value}`)},this.adicionaMsgAoModerador=()=>{const e=this.topoFormulario.querySelector("textarea#msg-ao-moderador");this.emailLink+=this.adicionaParagrafoHTML(`Mensagem ao Moderador: ${e.value}`)},this.adicionaMsgDeAjudaAoModerador=()=>{this.emailLink+=this.adicionaParagrafoHTML("Ao moderador: para uma visualização mais agradável, salve o texto acima como um arquivo HTML e abra-o em um browser.")}}connectedCallback(){this.innerHTML=a.template,this.inicializaEscutaCheckboxDePrivacidade(),this.inicializaEscutaDeEnvioDeEmail()}get topoFormulario(){return this.parentElement.parentElement}}i.default=a,a.tag="botao-cadastro-jogador",a.emailDoModerador="philippefanaro@gmail.com",a.template='\n    <button type="submit" id="envio">\n      <a id="link-envia-email">Enviar Email</a>\n    </button>\n  ',a.linkDeEmailInicial=`mailto:${a.emailDoModerador}?body=`,a.assuntoDeEmailInicial="&subject=Cadastro de Jogador: "},670:(e,i)=>{var a,t,o,n,s;Object.defineProperty(i,"__esModule",{value:!0}),i.Ranking=i.Servidor=i.Estado=i.Pais=i.Rede=void 0,(s=i.Rede||(i.Rede={})).facebook="Facebook",s.reddit="Reddit",(n=i.Pais||(i.Pais={})).brasil="Brasil",n.portugal="Portugal",(o=i.Estado||(i.Estado={})).acre="AC",o.alagoas="AL",o.amapa="AP",o.amazonas="AM",o.bahia="BA",o.ceara="CE",o.df="DF",o.es="ES",o.goias="GO",o.maranhao="MA",o.mt="MT",o.ms="MS",o.mg="MG",o.para="PA",o.paraiba="PB",o.parana="PR",o.pernambuco="PE",o.piaui="PI",o.rio="RJ",o.rn="RN",o.rs="RS",o.rondonia="RO",o.roraima="RR",o.sp="SP",o.sergipe="SE",o.tocantins="TO",(t=i.Servidor||(i.Servidor={})).ogs="OGS",t.kgs="KGS",t.tygem="Tygem",t.wbaduk="WBaduk",t.foxy="Fox Go",t.cgs="CGS",(a=i.Ranking||(i.Ranking={}))[a.d9=3100]="d9",a[a.d8=3e3]="d8",a[a.d7=2900]="d7",a[a.d6=2800]="d6",a[a.d5=2700]="d5",a[a.d4=2600]="d4",a[a.d3=2500]="d3",a[a.d2=2400]="d2",a[a.d1=2300]="d1",a[a.k1=2200]="k1",a[a.k2=2100]="k2",a[a.k3=2e3]="k3",a[a.k4=1900]="k4",a[a.k5=1800]="k5",a[a.k6=1700]="k6",a[a.k7=1600]="k7",a[a.k8=1500]="k8",a[a.k9=1400]="k9",a[a.k10=1300]="k10",a[a.k11=1200]="k11",a[a.k12=1100]="k12",a[a.k13=1e3]="k13",a[a.k14=900]="k14",a[a.k15=800]="k15",a[a.k16=700]="k16",a[a.k17=600]="k17",a[a.k18=500]="k18",a[a.k19=400]="k19",a[a.k20=300]="k20",a[a.k21=200]="k21",a[a.k22=100]="k22",a[a.k23=0]="k23",a[a.k24=-100]="k24",a[a.k25=-200]="k25",a[a.k26=-300]="k26",a[a.k27=-400]="k27",a[a.k28=-500]="k28",a[a.k29=-600]="k29",a[a.k30=-700]="k30"},477:(e,i,a)=>{Object.defineProperty(i,"__esModule",{value:!0}),i.jogadoresDB=void 0;const t=a(670);i.jogadoresDB=[{nome:"Philippe Fanaro",pais:t.Pais.brasil,estado:t.Estado.sp,cidade:"São Paulo",contato:{email:"philippefanaro@gmail.com",telefone:5511970286739},nascimento:Date.UTC(1992,6,27),nivel:{rank:"1d",elo:2300},foto:new URL("https://imgur.com/gallery/YtxsVTy"),perfis:[{servidor:t.Servidor.ogs,nome:"psygo"},{servidor:t.Servidor.kgs,nome:"psygo"}],social:[{rede:t.Rede.facebook,perfil:new URL("https://facebook.com/philippe.fanaro")},{rede:t.Rede.reddit,perfil:new URL("https://www.reddit.com/user/Fanaro009")}],professor_certificado:!0}]},453:function(e,i,a){var t=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(i,"__esModule",{value:!0}),new(t(a(697)).default)},697:function(e,i,a){var t=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(i,"__esModule",{value:!0});const o=t(a(276)),n=t(a(430)),s=t(a(728)),d=t(a(917)),l=t(a(367));i.default=class{constructor(){this.define=()=>{customElements.define(n.default.tag,n.default),customElements.define(o.default.tag,o.default),customElements.define(d.default.tag,d.default),customElements.define(s.default.tag,s.default),customElements.define(l.default.tag,l.default)},this.prepend=()=>{window.addEventListener("DOMContentLoaded",(e=>document.body.prepend(new n.default)))},this.define(),this.prepend()}}},430:(e,i)=>{Object.defineProperty(i,"__esModule",{value:!0});class a extends HTMLElement{constructor(){super()}connectedCallback(){this.innerHTML=a.template}}i.default=a,a.tag="br-nhk-nav",a.template='\n    <a href="/">\n      <h1>BRASIL NIHON KIIN</h1>\n    </a>\n  '},728:(e,i,a)=>{Object.defineProperty(i,"__esModule",{value:!0});const t=a(670);class o extends HTMLElement{constructor(){super(),this.index=1,this.inicializaEscutaDeAdicaoDeCampos=()=>{this.querySelector("button").onclick=e=>this.adicionaServidores()},this.adicionaServidores=()=>{this.adicionaServidoresDropDown(),this.adicionaPerfilInput(),this.adicionaLineBreak(),this.index++},this.adicionaServidoresDropDown=()=>{const e=`servidor-dropdown-${this.index}`,i=document.createElement("select");i.id=e,i.name=e,Object.values(t.Servidor).forEach((e=>{const a=document.createElement("option");a.value=e,a.innerHTML=e,i.append(a)})),this.camposDiv.append(i)},this.adicionaPerfilInput=()=>{const e=`servidor-nickname-${this.index}`,i=document.createElement("input");i.type="text",i.name=e,i.id=e,this.camposDiv.append(i)},this.adicionaLineBreak=()=>this.camposDiv.append(document.createElement("br"))}connectedCallback(){this.innerHTML=o.template,this.adicionaServidores(),this.inicializaEscutaDeAdicaoDeCampos()}get camposDiv(){return this.querySelector("div#campos")}}i.default=o,o.tag="perfis-servidores",o.template='\n    <div id="campos"></div>\n\n    <button type="button" id="adiciona-campo-de-perfil-servidor">+</button>\n  '},917:(e,i)=>{Object.defineProperty(i,"__esModule",{value:!0});class a extends HTMLElement{constructor(){super(),this.index=1,this.inicializaEscutaDeAdicaoDeCampoDeRedeSocial=()=>{this.querySelector("button#adiciona-campo-de-rede-social").onclick=e=>this.adicionaNovoCampoDeRedeSocial()},this.adicionaNovoCampoDeRedeSocial=()=>{this.adicionaLegenda(),this.adicionaNovoCampo(),this.adicionaLineBreak(),this.index++},this.adicionaLegenda=()=>{const e=document.createElement("label");e.setAttribute("for",this.campoID),e.innerText=`Rede Social #${this.index}`,this.camposDiv.append(e)},this.adicionaNovoCampo=()=>{const e=document.createElement("input");e.type="url",e.name=this.campoID,e.id=this.campoID,this.camposDiv.append(e)},this.adicionaLineBreak=()=>this.camposDiv.append(document.createElement("br"))}connectedCallback(){this.innerHTML=a.template,this.adicionaNovoCampoDeRedeSocial(),this.inicializaEscutaDeAdicaoDeCampoDeRedeSocial()}get camposDiv(){return this.querySelector("div#campos")}get campoID(){return`rede-social-${this.index}`}}i.default=a,a.tag="redes-sociais",a.template='\n    <div id="campos"></div>\n    \n    <button type="button" id="adiciona-campo-de-rede-social">+</button>\n  '},367:(e,i,a)=>{Object.defineProperty(i,"__esModule",{value:!0});const t=a(477);class o extends HTMLElement{constructor(){super(),this.jogadorAtual=o.jogadores[0],this.linhaAtual=document.createElement("tr"),this.adicionaCelulaNome=()=>{const e=document.createElement("td");e.innerHTML=this.jogadorAtual.nome,this.linhaAtual.append(e)},this.adicionaCelulaPais=()=>{const e=document.createElement("td");e.innerHTML=this.jogadorAtual.pais,this.linhaAtual.append(e)},this.adicionaCelulaEstado=()=>{const e=document.createElement("td");e.innerHTML=this.jogadorAtual.estado,this.linhaAtual.append(e)},this.adicionaCelulaCidade=()=>{const e=document.createElement("td");e.innerHTML=this.jogadorAtual.cidade,this.linhaAtual.append(e)},this.adicionaCelulaEmail=()=>{const e=document.createElement("td"),i=null==this.jogadorAtual.contato?.email?o.hyphen:this.jogadorAtual.contato?.email,a=i.split("@");e.innerHTML=i==o.hyphen?o.hyphen:`<a href="mailto:${i}">${a[0]}<br/>@${a[1]}</a>`,this.linhaAtual.append(e)},this.adicionaCelulaTelefone=()=>{const e=document.createElement("td"),i=null==this.jogadorAtual.contato?.telefone?o.hyphen:this.jogadorAtual.contato?.telefone.toString();e.innerHTML=i==o.hyphen?o.hyphen:`<a href="tel:+${i}">${i}</a>`,this.linhaAtual.append(e)},this.adicionaCelulaNascimento=()=>{const e=document.createElement("td"),i=new Date(this.jogadorAtual.nascimento),a=i.getDate()+1,t=i.getMonth(),o=i.getFullYear();e.innerHTML=`${a}-${t}-${o}`,this.linhaAtual.append(e)},this.adicionaNivel=()=>{const e=document.createElement("td"),i=this.jogadorAtual.nivel.elo,a=this.jogadorAtual.nivel.rank;e.innerHTML=`${a} <br /> ${i}`,this.linhaAtual.append(e)},this.adicionaCelulaFoto=()=>{const e=document.createElement("td");e.innerHTML=`<a href="${this.jogadorAtual.foto?.href}">Link da Foto</a>`,this.linhaAtual.append(e)},this.adicionaCelulaPerfisOnline=()=>{const e=document.createElement("td");e.className="perfis";let i="";this.jogadorAtual?.perfis?.forEach((e=>{i+=`${e.servidor}: ${e.nome}<br />`})),e.innerHTML=i,this.linhaAtual.append(e)},this.adicionaRedesSociais=()=>{const e=document.createElement("td");e.className="redes-sociais";let i="";this.jogadorAtual?.social?.forEach((e=>{i+=`<a href="${e.perfil.href}">${e.rede}</a><br />`})),e.innerHTML=i,this.linhaAtual.append(e)}}connectedCallback(){this.innerHTML=o.template;const e=this.querySelector("tbody");o.jogadores.forEach((i=>{this.jogadorAtual=i,this.linhaAtual=document.createElement("tr"),this.adicionaCelulaNome(),this.adicionaCelulaPais(),this.adicionaCelulaEstado(),this.adicionaCelulaCidade(),this.adicionaCelulaEmail(),this.adicionaCelulaTelefone(),this.adicionaCelulaNascimento(),this.adicionaNivel(),this.adicionaCelulaFoto(),this.adicionaCelulaPerfisOnline(),this.adicionaRedesSociais(),e.append(this.linhaAtual)}))}}i.default=o,o.tag="tabela-jogadores",o.template="\n    <table>\n      <thead>\n        <th>Nome</th>\n        <th>País</th>\n        <th>Estado</th>\n        <th>Cidade</th>\n        <th>Email</th>\n        <th>Telefone</th>\n        <th>Data de Nascimento</th>\n        <th>Nível e Elo</th>\n        <th>Foto</th>\n        <th>Perfis Online</th>\n        <th>Redes Sociais</th>\n      </thead>\n      <tbody></tbody>\n    </table>\n  ",o.jogadores=t.jogadoresDB,o.hyphen="&mdash;"}},i={};!function a(t){if(i[t])return i[t].exports;var o=i[t]={exports:{}};return e[t].call(o.exports,o,o.exports,a),o.exports}(453)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,